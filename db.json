{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/images/1046366-20180927105631267-34167117.png","path":"images/1046366-20180927105631267-34167117.png","modified":0,"renderable":0},{"_id":"source/images/1046366-20180927105727421-1721871308.png","path":"images/1046366-20180927105727421-1721871308.png","modified":0,"renderable":0},{"_id":"source/images/1046366-20180927105741148-1074788234.png","path":"images/1046366-20180927105741148-1074788234.png","modified":0,"renderable":0},{"_id":"source/images/j-16x16.ico","path":"images/j-16x16.ico","modified":0,"renderable":0},{"_id":"source/images/j-32x32.ico","path":"images/j-32x32.ico","modified":0,"renderable":0},{"_id":"source/images/1046366-20180927105622574-1652030646.png","path":"images/1046366-20180927105622574-1652030646.png","modified":0,"renderable":0},{"_id":"source/images/breakering.jpg","path":"images/breakering.jpg","modified":0,"renderable":0},{"_id":"themes/jacman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.eot","path":"font/fontdiao.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.ttf","path":"font/fontdiao.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.woff","path":"font/fontdiao.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/author.jpg","path":"img/author.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by.svg","path":"img/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/jacman.jpg","path":"img/jacman.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/scrollup.png","path":"img/scrollup.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","path":"js/jquery.qrcode-0.12.0.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"source/images/banner.jpg","path":"images/banner.jpg","modified":0,"renderable":0},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.svg","path":"font/fontdiao.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/banner.jpg","path":"img/banner.jpg","modified":0,"renderable":1},{"_id":"source/images/background.jpg","path":"images/background.jpg","modified":0,"renderable":0},{"_id":"themes/jacman/source/img/bg.jpg","path":"img/bg.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538292128362},{"_id":"source/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538292128362},{"_id":"source/robots.txt","hash":"a6dd9e1f9f21cea6de430a4d4d239c851c0fc8e0","modified":1538292128366},{"_id":"themes/jacman/._config.yml.swp","hash":"cfea42fcb6ea6c6b68521e5a190952573331256e","modified":1542177344057},{"_id":"themes/jacman/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1542176961529},{"_id":"themes/jacman/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1542176961529},{"_id":"themes/jacman/README.md","hash":"098545637b0aeb27b14707c15e429470c603d78d","modified":1542176961529},{"_id":"themes/jacman/README_zh.md","hash":"9c73931bca4883de13eedd4be254da547d4ca52e","modified":1542176961529},{"_id":"themes/jacman/_config.yml","hash":"4e3f27b40a690c1fb2137513f49a3ade44a25046","modified":1542264650807},{"_id":"source/_posts/Hexo同步.md","hash":"6e8f318e38df67838713e5eeba97b3e8bfc0e774","modified":1542268058906},{"_id":"source/_posts/hello-world.md","hash":"b16868fce26f59a5d2d5b61e88f8b643a910c8b9","modified":1542266849462},{"_id":"source/_posts/内网穿透frp.md","hash":"02ded6cb70898ef5c591db855f12d7d19653050f","modified":1542266849354},{"_id":"source/about/index.md","hash":"b2712f2e81e4e20bc0b227606fec2358caa08e1c","modified":1542180580220},{"_id":"source/categories/index.md","hash":"34e432bfb3c29444342cc08d75fca70abcd910b2","modified":1538292128362},{"_id":"source/images/1046366-20180927105631267-34167117.png","hash":"aad2c61bfee92d6ddce65302c7fc845544f92184","modified":1538290427000},{"_id":"source/images/1046366-20180927105727421-1721871308.png","hash":"b0264800f4c3c14ad1f47c1310137ac7eaa1dc17","modified":1538294835000},{"_id":"source/images/1046366-20180927105741148-1074788234.png","hash":"b5444ac5e0e3b8aa500f7dfb5b9bddd67ee788be","modified":1538294840000},{"_id":"source/images/j-16x16.ico","hash":"3f37c2a78f1983bb9f9b0b75af88fb7300966a8b","modified":1538292128366},{"_id":"source/images/j-32x32.ico","hash":"08b56b6791db62b29a336ae957dd6f56bc1c4708","modified":1538292128366},{"_id":"source/tags/index.md","hash":"2b579734ce27a6495d50e0975e29e970981d46a9","modified":1538292128366},{"_id":"themes/jacman/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1542176961513},{"_id":"themes/jacman/.git/config","hash":"be0a8da17af044443c4ba0add02e1cedebd88957","modified":1542176961513},{"_id":"themes/jacman/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1542176955621},{"_id":"themes/jacman/.git/index","hash":"7c101eb00b3ace406e3cf10b40768609585f9051","modified":1542262889006},{"_id":"themes/jacman/.git/packed-refs","hash":"872b592ab4bac2713bb4bfe4ab6c15f54c75eae1","modified":1542176961493},{"_id":"themes/jacman/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1542176961557},{"_id":"themes/jacman/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1542176961557},{"_id":"themes/jacman/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1542176961557},{"_id":"themes/jacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1542176961569},{"_id":"themes/jacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1542176961569},{"_id":"themes/jacman/layout/index.ejs","hash":"75cef2172c286994af412e11ab7f4f5a0daaf1f5","modified":1542176961569},{"_id":"themes/jacman/layout/layout.ejs","hash":"5b4289a4526899809b9c2facea535367ff51ba2b","modified":1542176961569},{"_id":"themes/jacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1542176961569},{"_id":"themes/jacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1542176961569},{"_id":"themes/jacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1542176961573},{"_id":"themes/jacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1542176961573},{"_id":"source/images/1046366-20180927105622574-1652030646.png","hash":"6a101389d9798bf03141d3def6b4c25d056df7c0","modified":1538290411000},{"_id":"source/images/breakering.jpg","hash":"13a20e60f53d42e197019ed81e3d7270a0ccd909","modified":1538292128366},{"_id":"themes/jacman/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1542176955621},{"_id":"themes/jacman/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1542176955621},{"_id":"themes/jacman/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1542176955609},{"_id":"themes/jacman/.git/logs/HEAD","hash":"47459de5f38e5a9714e181fee004e47d086a7d4e","modified":1542176961513},{"_id":"themes/jacman/layout/_partial/analytics.ejs","hash":"697601996220fe0a0f9cd628be67dec3c86ae2aa","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/article.ejs","hash":"261ecacb8456f4cb972632b6a9103860fa63b9a3","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/after_footer.ejs","hash":"3e1f1d8dc38b1e17c523d1176f7ee503fc648045","modified":1542176961557},{"_id":"themes/jacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/footer.ejs","hash":"5f80bf6c6ddcf8c28c4599cd1540b14b25d54f18","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/header.ejs","hash":"18515612344ff048b9372b91b7eef6f3b143801f","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/search.ejs","hash":"1083824a6c6c3df02767f2f3b727aee78ebb76ec","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/tinysou_search.ejs","hash":"06ecddc8a9d40b480fe2e958af1dab857a9d5441","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1542176961561},{"_id":"themes/jacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1542176961569},{"_id":"themes/jacman/layout/_widget/category.ejs","hash":"c1fae96b5053da021bcc04ab2ce5c2c8d30de8a2","modified":1542176961569},{"_id":"themes/jacman/layout/_widget/douban.ejs","hash":"a1beaea7cad9784e11f74ebbac37d06cd64579c7","modified":1542263453297},{"_id":"themes/jacman/layout/_widget/github-card.ejs","hash":"8fdf3ca2357a25a0d6c04d636469ef06cb6fc454","modified":1542191076875},{"_id":"themes/jacman/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1542176961569},{"_id":"themes/jacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1542176961569},{"_id":"themes/jacman/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1542176961569},{"_id":"themes/jacman/layout/_partial/mathjax.ejs","hash":"d42994ac696f52ba99c1cbac382cd76d5b04a3e8","modified":1542176961561},{"_id":"themes/jacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1542176961569},{"_id":"themes/jacman/layout/_widget/weibo.ejs","hash":"0de505c35c95563c8008d942c625742f972ffb24","modified":1542263587295},{"_id":"themes/jacman/source/css/style.styl","hash":"a0a45af186a72ae68979bf26f2a5d0d2303189ca","modified":1542176961585},{"_id":"themes/jacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1542176961585},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1542176961585},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1542176961585},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1542176961585},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1542176961585},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1542176961585},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1542176961597},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1542176961597},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1542176961597},{"_id":"themes/jacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1542176961601},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1542176961601},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1542176961605},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1542176961605},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1542176961605},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1542176961609},{"_id":"themes/jacman/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1542176961609},{"_id":"themes/jacman/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1542176961609},{"_id":"themes/jacman/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1542176961609},{"_id":"themes/jacman/source/img/author.jpg","hash":"2a292e681b4c6c975eec9c8c356d99647a465542","modified":1542176961609},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1542176961609},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1542176961609},{"_id":"themes/jacman/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1542176961609},{"_id":"themes/jacman/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1542176961609},{"_id":"themes/jacman/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1542176961609},{"_id":"themes/jacman/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1542176961609},{"_id":"themes/jacman/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1542176961609},{"_id":"themes/jacman/source/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1542176961609},{"_id":"themes/jacman/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1542176961609},{"_id":"themes/jacman/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1542176961609},{"_id":"themes/jacman/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1542176961609},{"_id":"themes/jacman/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1542176961609},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1542176961609},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1542176961613},{"_id":"themes/jacman/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1542176961613},{"_id":"source/images/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1542176961000},{"_id":"themes/jacman/layout/_partial/head.ejs","hash":"761941be4922cd3c177c8130296b909bf7db5c09","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1542176961561},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1542176961601},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1542176961609},{"_id":"themes/jacman/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1542176961609},{"_id":"themes/jacman/source/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1542176961609},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1542176961609},{"_id":"themes/jacman/.git/objects/pack/pack-50cd4d46154be5a9ef6e3e451d175357f7156667.idx","hash":"b517794d49ee8d8838c5db0a73eb7d8adfae47c7","modified":1542176961389},{"_id":"themes/jacman/.git/refs/heads/master","hash":"cdf7ebb26811b17304103dcf164bb82b88b4f841","modified":1542176961513},{"_id":"themes/jacman/layout/_partial/post/article.ejs","hash":"b09e3acea7076e1f01dfe0c2295e19951ea09437","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/post/comment.ejs","hash":"548c69c570d5aac567bc6f088e9ee0c02223b088","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/post/footer.ejs","hash":"b12ec08a5845a3d8c01257614f1dfead879c87d2","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/post/header.ejs","hash":"36a705942b691abe0d643ea8afa339981b32f6f2","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1542176961561},{"_id":"themes/jacman/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1542176961561},{"_id":"themes/jacman/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1542176961585},{"_id":"themes/jacman/source/css/_base/public.styl","hash":"1f00ea0b51c80f0fd8f21584d37cc3c9051a1d0b","modified":1542182545273},{"_id":"themes/jacman/source/css/_base/variable.styl","hash":"cb652eb83c28a208743fabab92de896f8b7cbf7b","modified":1542176961585},{"_id":"themes/jacman/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1542176961585},{"_id":"themes/jacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1542176961585},{"_id":"themes/jacman/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1542176961585},{"_id":"themes/jacman/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1542176961585},{"_id":"themes/jacman/source/css/_partial/header.styl","hash":"5121ceb712be3f2dde98b8b6e589b546e19eab8f","modified":1542183027875},{"_id":"themes/jacman/source/css/_partial/footer.styl","hash":"1911613a19b605a58f801c21b03b5d4c83b90f9c","modified":1542176961585},{"_id":"themes/jacman/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1542176961585},{"_id":"themes/jacman/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1542176961585},{"_id":"themes/jacman/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1542176961585},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1542176961597},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1542176961597},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1542176961597},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1542176961597},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1542176961597},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1542176961597},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1542176961609},{"_id":"themes/jacman/source/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1542176961609},{"_id":"themes/jacman/.git/logs/refs/heads/master","hash":"47459de5f38e5a9714e181fee004e47d086a7d4e","modified":1542176961513},{"_id":"themes/jacman/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1542176961513},{"_id":"themes/jacman/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1542176961585},{"_id":"themes/jacman/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1542176961585},{"_id":"themes/jacman/.git/logs/refs/remotes/origin/HEAD","hash":"47459de5f38e5a9714e181fee004e47d086a7d4e","modified":1542176961513},{"_id":"source/images/background.jpg","hash":"44ec7f447803029818b48fc5d07e5dfbfb2dff6b","modified":1538292128366},{"_id":"themes/jacman/source/img/bg.jpg","hash":"44ec7f447803029818b48fc5d07e5dfbfb2dff6b","modified":1538292128000},{"_id":"themes/jacman/.git/objects/c0/a41dfa7b6ab8a9f238424f1a245226cd2d5a71","hash":"4d1de33520bffc7c49b487da533ad2f505703066","modified":1542181429000},{"_id":"themes/jacman/.git/objects/pack/pack-50cd4d46154be5a9ef6e3e451d175357f7156667.pack","hash":"d2419364d7af7f3ea8b86458a1206da74de44048","modified":1542176961389},{"_id":"public/atom.xml","hash":"615c7e8dccaccc9a35359a7fdddcac816da8d025","modified":1542268064713},{"_id":"public/search.xml","hash":"6525662195a046f0819b19e33f6759d174ef48ff","modified":1542267762455},{"_id":"public/baidusitemap.xml","hash":"e91f5583ab5ee99148ee63eca41d533747193f34","modified":1542268064798},{"_id":"public/sitemap.xml","hash":"01fc3bfa4ce47c66acad97bbdeeea8b687d993d7","modified":1542268064800},{"_id":"public/about/index.html","hash":"226984629f9f87226b580594161d16cbd225561c","modified":1542267762485},{"_id":"public/tags/index.html","hash":"056746b17c52db3affba2c79034afcfdd6e69f0f","modified":1542267762523},{"_id":"public/categories/index.html","hash":"0b713eacae49f2faf61a09a21b7817011016f19c","modified":1542267762523},{"_id":"public/archives/index.html","hash":"409eab062483adb7b4188fc645d98b0dee64d2c7","modified":1542267762524},{"_id":"public/archives/2018/index.html","hash":"1d82abfadfa9c625eb66a6c1464f0057bf0e4832","modified":1542267762524},{"_id":"public/archives/2018/09/index.html","hash":"7c688f4ce3c35f29d49bb22193d9aafa5061d1dd","modified":1542267762524},{"_id":"public/index.html","hash":"dc640f8c0073441c9ae6244f24b25c3e5c04cf47","modified":1542268064801},{"_id":"public/2018/09/28/hello-world/index.html","hash":"a41e3bd2c1ae1e3cf4676428be9bba06664cbfc9","modified":1542267762524},{"_id":"public/archives/2018/11/index.html","hash":"7a7abec5defd6fa453e0bd841712e7f6fd73146f","modified":1542267762529},{"_id":"public/categories/Hexo/index.html","hash":"92f7a3e71592c9168522018bb539828e8b36fd94","modified":1542267762529},{"_id":"public/categories/内网穿透/index.html","hash":"4aa621bdfc4256e0ea032c9a38be70f31c252078","modified":1542267762529},{"_id":"public/tags/Hexo/index.html","hash":"b983cb9beb830b6c5ef20e9def4c3e0df8998bc1","modified":1542267762529},{"_id":"public/2018/11/15/Hexo同步/index.html","hash":"1c3b8d6429cf89b7056427adaac8a4747605e9da","modified":1542268064801},{"_id":"public/2018/09/28/内网穿透frp/index.html","hash":"01df68c70b4a0bcf40229f79c92741bd19724db5","modified":1542267762530},{"_id":"public/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542267762530},{"_id":"public/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542267762530},{"_id":"public/robots.txt","hash":"a6dd9e1f9f21cea6de430a4d4d239c851c0fc8e0","modified":1542267762535},{"_id":"public/images/1046366-20180927105631267-34167117.png","hash":"aad2c61bfee92d6ddce65302c7fc845544f92184","modified":1542267762535},{"_id":"public/images/1046366-20180927105727421-1721871308.png","hash":"b0264800f4c3c14ad1f47c1310137ac7eaa1dc17","modified":1542267762535},{"_id":"public/images/1046366-20180927105741148-1074788234.png","hash":"b5444ac5e0e3b8aa500f7dfb5b9bddd67ee788be","modified":1542267762535},{"_id":"public/images/j-16x16.ico","hash":"3f37c2a78f1983bb9f9b0b75af88fb7300966a8b","modified":1542267762535},{"_id":"public/images/j-32x32.ico","hash":"08b56b6791db62b29a336ae957dd6f56bc1c4708","modified":1542267762535},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1542267762535},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1542267762535},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1542267762535},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1542267762536},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1542267762536},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1542267762536},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1542267762536},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1542267762536},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1542267762536},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1542267762536},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1542267762536},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1542267762536},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1542267762536},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1542267762537},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1542267762537},{"_id":"public/img/author.jpg","hash":"2a292e681b4c6c975eec9c8c356d99647a465542","modified":1542267762537},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1542267762537},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1542267762537},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1542267762537},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1542267762537},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1542267762537},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1542267762537},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1542267762537},{"_id":"public/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1542267762538},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1542267762538},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1542267762538},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1542267762538},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1542267762538},{"_id":"public/images/1046366-20180927105622574-1652030646.png","hash":"6a101389d9798bf03141d3def6b4c25d056df7c0","modified":1542267763140},{"_id":"public/images/breakering.jpg","hash":"13a20e60f53d42e197019ed81e3d7270a0ccd909","modified":1542267763141},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1542267763142},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1542267763142},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1542267763142},{"_id":"public/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1542267763142},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1542267763185},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1542267763185},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1542267763185},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1542267763185},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1542267763185},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1542267763185},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1542267763185},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1542267763187},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1542267763187},{"_id":"public/css/style.css","hash":"e2cfb9ce0766eac8ea09c6162cced9627a0849b8","modified":1542267763187},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1542267763187},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1542267763187},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1542267763187},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1542267763188},{"_id":"public/images/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1542267763193},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1542267763194},{"_id":"public/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1542267763194},{"_id":"public/images/background.jpg","hash":"44ec7f447803029818b48fc5d07e5dfbfb2dff6b","modified":1542267763204},{"_id":"public/img/bg.jpg","hash":"44ec7f447803029818b48fc5d07e5dfbfb2dff6b","modified":1542267763204}],"Category":[{"name":"Hexo","_id":"cjoiaeldj0004lnfc1bgmbhys"},{"name":"内网穿透","_id":"cjoiaeldq000blnfcu2hevbg1"}],"Data":[],"Page":[{"title":"关于","date":"2018-09-28T11:03:04.000Z","comments":0,"_content":"sdfsadfsdafasdf","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2018-09-28 19:03:04\ncomments: false\n---\nsdfsadfsdafasdf","updated":"2018-11-14T07:29:40.220Z","path":"about/index.html","layout":"page","_id":"cjoiaeldg0001lnfcjtp59saw","content":"<p>sdfsadfsdafasdf</p>\n","site":{"data":{}},"excerpt":"","more":"<p>sdfsadfsdafasdf</p>\n"},{"title":"标签","date":"2018-09-28T11:02:47.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-09-28 19:02:47\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-09-30T07:22:08.366Z","path":"tags/index.html","layout":"page","_id":"cjoiaeldi0003lnfcrq9ocvua","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2018-09-28T11:02:56.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-09-28 19:02:56\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-09-30T07:22:08.362Z","path":"categories/index.html","layout":"page","_id":"cjoiaeldm0007lnfcwz3bowr3","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo同步","date":"2018-11-15T07:27:52.000Z","description":"其他电脑同步博客的方法!","_content":"## 环境搭建\n### 安装Node.js\n- 用来生成静态页面, 到[Node.js官网](https://nodejs.org/en/)，下载最新版本, 根据提示一路安装即可\n### 安装Git\n- `sudo apt-get install git`\n### 安装Hexo\n当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：\n`sudo npm install -g hexo`\n### 克隆hexo分支\n`git clone -b hexo https://github.com/Breakering/breakering.github.io.git`\n### 进入breakering.github.io.git\n创建博客\n\n`hexo n '博客名'`\n\n发表博客\n\n`hexo d -g`\n### 一些问题\n1. 报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：\n    - `npm install hexo-deployer-git --save`\n2. 报错二: 若执行命令hexo d报以下错误:\n```\nERROR Plugin load failed: hexo-server \n//或者类似的错误 \nERROR Plugin load failed: hexo-renderer-sass\n```\n- 则执行响应的命令:\n \n```\nsudo npm install hexo-server\n//或者\nsudo npm install hexo-renderer-sass\n```\n","source":"_posts/Hexo同步.md","raw":"---\ntitle: Hexo同步\ndate: 2018-11-15 15:27:52\ndescription: 其他电脑同步博客的方法!\ntags: Hexo\ncategories: Hexo\n---\n## 环境搭建\n### 安装Node.js\n- 用来生成静态页面, 到[Node.js官网](https://nodejs.org/en/)，下载最新版本, 根据提示一路安装即可\n### 安装Git\n- `sudo apt-get install git`\n### 安装Hexo\n当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：\n`sudo npm install -g hexo`\n### 克隆hexo分支\n`git clone -b hexo https://github.com/Breakering/breakering.github.io.git`\n### 进入breakering.github.io.git\n创建博客\n\n`hexo n '博客名'`\n\n发表博客\n\n`hexo d -g`\n### 一些问题\n1. 报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：\n    - `npm install hexo-deployer-git --save`\n2. 报错二: 若执行命令hexo d报以下错误:\n```\nERROR Plugin load failed: hexo-server \n//或者类似的错误 \nERROR Plugin load failed: hexo-renderer-sass\n```\n- 则执行响应的命令:\n \n```\nsudo npm install hexo-server\n//或者\nsudo npm install hexo-renderer-sass\n```\n","slug":"Hexo同步","published":1,"updated":"2018-11-15T07:47:38.906Z","_id":"cjoiaeldc0000lnfc2mecmt0b","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><h3 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h3><ul>\n<li>用来生成静态页面, 到<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>，下载最新版本, 根据提示一路安装即可<h3 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h3></li>\n<li><code>sudo apt-get install git</code><h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3>当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：<br><code>sudo npm install -g hexo</code><h3 id=\"克隆hexo分支\"><a href=\"#克隆hexo分支\" class=\"headerlink\" title=\"克隆hexo分支\"></a>克隆hexo分支</h3><code>git clone -b hexo https://github.com/Breakering/breakering.github.io.git</code><h3 id=\"进入breakering-github-io-git\"><a href=\"#进入breakering-github-io-git\" class=\"headerlink\" title=\"进入breakering.github.io.git\"></a>进入breakering.github.io.git</h3>创建博客</li>\n</ul>\n<p><code>hexo n &#39;博客名&#39;</code></p>\n<p>发表博客</p>\n<p><code>hexo d -g</code></p>\n<h3 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h3><ol>\n<li>报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：<ul>\n<li><code>npm install hexo-deployer-git --save</code></li>\n</ul>\n</li>\n<li>报错二: 若执行命令hexo d报以下错误:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Plugin load failed: hexo-server </span><br><span class=\"line\">//或者类似的错误 </span><br><span class=\"line\">ERROR Plugin load failed: hexo-renderer-sass</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>则执行响应的命令:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install hexo-server</span><br><span class=\"line\">//或者</span><br><span class=\"line\">sudo npm install hexo-renderer-sass</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><h3 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h3><ul>\n<li>用来生成静态页面, 到<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>，下载最新版本, 根据提示一路安装即可<h3 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h3></li>\n<li><code>sudo apt-get install git</code><h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3>当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：<br><code>sudo npm install -g hexo</code><h3 id=\"克隆hexo分支\"><a href=\"#克隆hexo分支\" class=\"headerlink\" title=\"克隆hexo分支\"></a>克隆hexo分支</h3><code>git clone -b hexo https://github.com/Breakering/breakering.github.io.git</code><h3 id=\"进入breakering-github-io-git\"><a href=\"#进入breakering-github-io-git\" class=\"headerlink\" title=\"进入breakering.github.io.git\"></a>进入breakering.github.io.git</h3>创建博客</li>\n</ul>\n<p><code>hexo n &#39;博客名&#39;</code></p>\n<p>发表博客</p>\n<p><code>hexo d -g</code></p>\n<h3 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h3><ol>\n<li>报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：<ul>\n<li><code>npm install hexo-deployer-git --save</code></li>\n</ul>\n</li>\n<li>报错二: 若执行命令hexo d报以下错误:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Plugin load failed: hexo-server </span><br><span class=\"line\">//或者类似的错误 </span><br><span class=\"line\">ERROR Plugin load failed: hexo-renderer-sass</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>则执行响应的命令:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install hexo-server</span><br><span class=\"line\">//或者</span><br><span class=\"line\">sudo npm install hexo-renderer-sass</span><br></pre></td></tr></table></figure>\n"},{"title":"Hexo初识","description":"简单介绍hexo的用法.","date":"2018-09-28T12:58:27.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hexo初识\ndescription: 简单介绍hexo的用法. \ndate: 2018-09-28 20:58:27\ntags: Hexo\ncategories: Hexo\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-11-15T07:27:29.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoiaeldg0002lnfc5bqgv2hu","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"内网穿透frp","description":"简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)","date":"2018-09-28T12:58:27.000Z","_content":"# 一、内网穿透原理\n简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：\n* 全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机\n* 限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包\n* 端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机\n* 对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透\n\n内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考 内网打洞、网络地址转换NAT原理。\n\n# 二、环境准备\n实际上根据以上 NAT 规则，基本上大部分家用设备和运营商上级路由等都在前三种规则之中，所以只需要借助成熟的内网穿透工具即可，以下为本次穿透环境\n\n* 最新版本 frp\n* 一台公网 VPS 服务器\n* 内网一台服务器，最好 Linux 系统\n\n# 三、服务端搭建\n服务器作为公网访问唯一的固定地址，即作为 server 端；内网客户端作为 client 端，会主动向 server 端创建连接，此时再从 server 端反向发送数据即可实现内网穿透\n\n## 3.1). 下载并解压frp\n可以查看[releases](https://github.com/fatedier/frp/releases)获取最新的版本,选好版本之后使用以下命令:\n\n```\nwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz\ntar -zxvf frp_0.21.0_linux_amd64.tar.gz\ncd frp_0.21.0_linux_amd64\n```\n\n## 3.2). 编辑frps.ini\n```\n[common]                                                                                                                                                                                                \n# frp 监听地址\nbind_addr = 0.0.0.0\nbind_port = 7000\n\n# 如果需要代理 web(http) 服务，则开启此端口\nvhost_http_port = 8080\nvhost_https_port = 4443\n\n# frp 控制面板\ndashboard_port = 7500\ndashboard_user = user\ndashboard_pwd = pwd\n\n# 默认日志输出位置(这里输出到标准输出)\nlog_file = /tmp/frps.log\n# 日志级别，支持: debug, info, warn, error\nlog_level = info\nlog_max_days = 3\n\n# 是否开启特权模式(特权模式下，客户端更改配置无需更新服务端)\nprivilege_mode = true\n# 授权 token 建议随机生成\nprivilege_token = cc23*********************d072734\n# 特权模式下允许分配的端口(避免端口滥用)\nprivilege_allow_ports = 4000-50000\n\n# 后端连接池最大连接数量\nmax_pool_count = 100\n\n# 口令超时时间\nauthentication_timeout = 900\n\n# 子域名(特权模式下将 *.xxxx.com 解析到公网服务器)\nsubdomain_host = xxxx.com\n```\n\n**其他具体配置说明请参考[frp README](https://github.com/fatedier/frp/blob/master/README_zh.md) 文档**\n\n## 3.3). 启动frp server\n设置完成后执行 ./frps -c frps.ini 启动即可\n\n**ps:当然也可以使用supervisor来管理**\n\n# 四、客户端配置\n客户端作为发起链接的主动方，只需要正确配置服务器地址，以及要映射客户端的哪些服务端口等即可\n\n## 4.1). 下载并解压frp\n```\nwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz\ntar -zxvf frp_0.21.0_linux_amd64.tar.gz\ncd frp_0.21.0_linux_amd64\n```\n\n## 4.2). 编辑frpc.ini\n\n```\n[common]\nserver_addr = 127.0.0.1\nserver_port = 7000\n# console or real logFile path like ./frpc.log\nlog_file = /tmp/frpc.log\n\n# debug, info, warn, error\nlog_level = debug\n\nlog_max_days = 3\n\n# 特权模式，要和服务器端的配置一致\nprivilege_token = cc23*********************d072734\n\n\n[gitlab]\ntype = http\nlocal_port = 8080\nsubdomain = gitlab  # 这样只要访问http://gitlab.xxxx.com:8080即可访问到该客户端的gitlab服务\nuse_gzip = true\n\n[gitlab_static_file]\ntype = tcp\nremote_port = 8082\nplugin = static_file\n# 要对外暴露的文件目录\nplugin_local_path = /opt/gitlab/embedded/service/gitlab-rails/public/assets/\n# 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径\nplugin_strip_prefix = assets\n#plugin_http_user = abc\n#plugin_http_passwd = abc\n\n[gitlab_ssh]\ntype = tcp \nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 8081\n```\n**其他具体配置说明请参考[frp README](https://github.com/fatedier/frp/blob/master/README_zh.md) 文档**\n\n## 4.3). 启动frp client\n设置完成后执行 ./frpc -c frpc.ini 启动即可\n\n**ps:当然也可以使用supervisor来管理**\n\n# 五、测试\n服务端和客户端同时开启完成后，即可访问 http://127.0.0.1:7500 进入 frp 控制面板，如下\n![](/images/1046366-20180927105622574-1652030646.png)\n![](/images/1046366-20180927105631267-34167117.png)\n此时通过 ssh root@127.0.0.1 -p 8081 即可ssh到gitlab，通过访问http://gitlab.xxxx.com:8080 即可访问gitlab服务\n\n# 六、GitLab通过frp代理\n通过上述配置，确实可以通过 http://gitlab.xxxx.com:8080 访问gitlab服务,但是你会发现缺少静态文件,因为gitlab的静态文件是nginx代理的，走的tcp协议,需要一种解决方案。\n\n## 方案一、使用frp的static_file的插件\n虽然可以成功，通过 http://127.0.0.1:8082 即可访问gitlab的静态文件，并且也可以通过nginx反向代理到gitlab.xxxx.com这个域名上，但是速度会很慢很慢,nginx配置如下:\n\n```\nserver {                                                                                                                                                                                                    \n    listen  80; \n    server_name  gitlab.xxxx.com;\n    location / { \n        proxy_pass http://gitlab.xxxx.com:8080;\n    }   \n    location /assets {\n        proxy_pass http://127.0.0.1:8082;\n    }   \n}\n```\n\n## 方案二、将gitlab静态文件移至服务器上，用nginx代理\ngitlab静态文件在如下位置`/opt/gitlab/embedded/service/gitlab-rails/public/assets/`放至服务器，并配置nginx如下:\n```\nserver {                                                                                                                                                                                                    \n    listen  80;\n    server_name  gitlab.xxxx.com;\n    location / {\n        proxy_pass http://gitlab.xxxx.com:8080;\n    }\n    location /assets {\n        alias /webapps/gitlab/public/assets;\n    }\n}\n```\n这样即可通过 http://gitlab.xxxx.com 正常访问内网的gitlab了\n\n但是这样还没结束，你会发现外网通过git clone http://gitlab.xxxx.com/zhuqian/licaishi.git ,根本没法正常克隆仓库，那有啥用啊，别急，咋们还可以用ssh方式啊。\n\n上面我们已经配置gitlab的22端口映射到服务器的8081端口了，所以可以这样克隆:\n\n```\ngit clone ssh://git@127.0.0.1:8081/zhuqian/licaishi.git\n# 或者\ngit clone ssh://git@gitlab.xxxx.com:8081/zhuqian/licaishi.git\n```\n\n对于pip install的话，可以这样：\n\n```\npip install git+ssh://git@127.0.0.1:8081/zhuqian/algorithm.git\n# 或者\npip install git+ssh://git@gitlab.xxxx.com:8081/zhuqian/algorithm.git\n```\n\n你以为就这样完了，还没有，我们想要直接能在gitlab项目首页直接能够显示git访问方法，效果如下:\n![](/images/1046366-20180927105727421-1721871308.png)\n\n要实现此效果，只需配置下`/etc/gitlab/gitlab.rb`即可：\n\n```\n...\nexternal_url 'http://gitlab.xxxx.com'\n...\n\ngitlab_rails['gitlab_shell_ssh_port'] = 8081\n...\n```\n>> 另外需要注意下`nginx['listen_addresses'] = ['192.168.10.60']`，需要对应到本地的ip地址\n\n配置完之后:\n\n```\ngitlab-ctl reconfigure\n```\n然后通过域名访问gitlab即可实现上述效果了，只不过http方式目前还无法解决。\n\n# 七、由mtu引起的无法访问的问题\n如果frp的admin界面一切正常，但是就是无法获取数据\n\n![](/images/1046366-20180927105741148-1074788234.png)\n\n那么极有可能是你本地的网络最大分片小于服务器的最大分片，导致数据无法发送出去,解决办法是减小服务器的mtu:\n\n```\nsudo ifconfig eth0 mtu 1000 up\n```\n\n其他修改mtu的方式请自行google。\n\n# 八、References:\n\n1. [利用 frp 进行内网穿透](https://mritd.me/2017/01/21/use-frp-for-internal-network-wear/)\n","source":"_posts/内网穿透frp.md","raw":"---\ntitle: 内网穿透frp\ndescription: 简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)\ndate: 2018-09-28 20:58:27\ntags: \ncategories: 内网穿透\n---\n# 一、内网穿透原理\n简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：\n* 全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机\n* 限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包\n* 端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机\n* 对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透\n\n内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考 内网打洞、网络地址转换NAT原理。\n\n# 二、环境准备\n实际上根据以上 NAT 规则，基本上大部分家用设备和运营商上级路由等都在前三种规则之中，所以只需要借助成熟的内网穿透工具即可，以下为本次穿透环境\n\n* 最新版本 frp\n* 一台公网 VPS 服务器\n* 内网一台服务器，最好 Linux 系统\n\n# 三、服务端搭建\n服务器作为公网访问唯一的固定地址，即作为 server 端；内网客户端作为 client 端，会主动向 server 端创建连接，此时再从 server 端反向发送数据即可实现内网穿透\n\n## 3.1). 下载并解压frp\n可以查看[releases](https://github.com/fatedier/frp/releases)获取最新的版本,选好版本之后使用以下命令:\n\n```\nwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz\ntar -zxvf frp_0.21.0_linux_amd64.tar.gz\ncd frp_0.21.0_linux_amd64\n```\n\n## 3.2). 编辑frps.ini\n```\n[common]                                                                                                                                                                                                \n# frp 监听地址\nbind_addr = 0.0.0.0\nbind_port = 7000\n\n# 如果需要代理 web(http) 服务，则开启此端口\nvhost_http_port = 8080\nvhost_https_port = 4443\n\n# frp 控制面板\ndashboard_port = 7500\ndashboard_user = user\ndashboard_pwd = pwd\n\n# 默认日志输出位置(这里输出到标准输出)\nlog_file = /tmp/frps.log\n# 日志级别，支持: debug, info, warn, error\nlog_level = info\nlog_max_days = 3\n\n# 是否开启特权模式(特权模式下，客户端更改配置无需更新服务端)\nprivilege_mode = true\n# 授权 token 建议随机生成\nprivilege_token = cc23*********************d072734\n# 特权模式下允许分配的端口(避免端口滥用)\nprivilege_allow_ports = 4000-50000\n\n# 后端连接池最大连接数量\nmax_pool_count = 100\n\n# 口令超时时间\nauthentication_timeout = 900\n\n# 子域名(特权模式下将 *.xxxx.com 解析到公网服务器)\nsubdomain_host = xxxx.com\n```\n\n**其他具体配置说明请参考[frp README](https://github.com/fatedier/frp/blob/master/README_zh.md) 文档**\n\n## 3.3). 启动frp server\n设置完成后执行 ./frps -c frps.ini 启动即可\n\n**ps:当然也可以使用supervisor来管理**\n\n# 四、客户端配置\n客户端作为发起链接的主动方，只需要正确配置服务器地址，以及要映射客户端的哪些服务端口等即可\n\n## 4.1). 下载并解压frp\n```\nwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz\ntar -zxvf frp_0.21.0_linux_amd64.tar.gz\ncd frp_0.21.0_linux_amd64\n```\n\n## 4.2). 编辑frpc.ini\n\n```\n[common]\nserver_addr = 127.0.0.1\nserver_port = 7000\n# console or real logFile path like ./frpc.log\nlog_file = /tmp/frpc.log\n\n# debug, info, warn, error\nlog_level = debug\n\nlog_max_days = 3\n\n# 特权模式，要和服务器端的配置一致\nprivilege_token = cc23*********************d072734\n\n\n[gitlab]\ntype = http\nlocal_port = 8080\nsubdomain = gitlab  # 这样只要访问http://gitlab.xxxx.com:8080即可访问到该客户端的gitlab服务\nuse_gzip = true\n\n[gitlab_static_file]\ntype = tcp\nremote_port = 8082\nplugin = static_file\n# 要对外暴露的文件目录\nplugin_local_path = /opt/gitlab/embedded/service/gitlab-rails/public/assets/\n# 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径\nplugin_strip_prefix = assets\n#plugin_http_user = abc\n#plugin_http_passwd = abc\n\n[gitlab_ssh]\ntype = tcp \nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 8081\n```\n**其他具体配置说明请参考[frp README](https://github.com/fatedier/frp/blob/master/README_zh.md) 文档**\n\n## 4.3). 启动frp client\n设置完成后执行 ./frpc -c frpc.ini 启动即可\n\n**ps:当然也可以使用supervisor来管理**\n\n# 五、测试\n服务端和客户端同时开启完成后，即可访问 http://127.0.0.1:7500 进入 frp 控制面板，如下\n![](/images/1046366-20180927105622574-1652030646.png)\n![](/images/1046366-20180927105631267-34167117.png)\n此时通过 ssh root@127.0.0.1 -p 8081 即可ssh到gitlab，通过访问http://gitlab.xxxx.com:8080 即可访问gitlab服务\n\n# 六、GitLab通过frp代理\n通过上述配置，确实可以通过 http://gitlab.xxxx.com:8080 访问gitlab服务,但是你会发现缺少静态文件,因为gitlab的静态文件是nginx代理的，走的tcp协议,需要一种解决方案。\n\n## 方案一、使用frp的static_file的插件\n虽然可以成功，通过 http://127.0.0.1:8082 即可访问gitlab的静态文件，并且也可以通过nginx反向代理到gitlab.xxxx.com这个域名上，但是速度会很慢很慢,nginx配置如下:\n\n```\nserver {                                                                                                                                                                                                    \n    listen  80; \n    server_name  gitlab.xxxx.com;\n    location / { \n        proxy_pass http://gitlab.xxxx.com:8080;\n    }   \n    location /assets {\n        proxy_pass http://127.0.0.1:8082;\n    }   \n}\n```\n\n## 方案二、将gitlab静态文件移至服务器上，用nginx代理\ngitlab静态文件在如下位置`/opt/gitlab/embedded/service/gitlab-rails/public/assets/`放至服务器，并配置nginx如下:\n```\nserver {                                                                                                                                                                                                    \n    listen  80;\n    server_name  gitlab.xxxx.com;\n    location / {\n        proxy_pass http://gitlab.xxxx.com:8080;\n    }\n    location /assets {\n        alias /webapps/gitlab/public/assets;\n    }\n}\n```\n这样即可通过 http://gitlab.xxxx.com 正常访问内网的gitlab了\n\n但是这样还没结束，你会发现外网通过git clone http://gitlab.xxxx.com/zhuqian/licaishi.git ,根本没法正常克隆仓库，那有啥用啊，别急，咋们还可以用ssh方式啊。\n\n上面我们已经配置gitlab的22端口映射到服务器的8081端口了，所以可以这样克隆:\n\n```\ngit clone ssh://git@127.0.0.1:8081/zhuqian/licaishi.git\n# 或者\ngit clone ssh://git@gitlab.xxxx.com:8081/zhuqian/licaishi.git\n```\n\n对于pip install的话，可以这样：\n\n```\npip install git+ssh://git@127.0.0.1:8081/zhuqian/algorithm.git\n# 或者\npip install git+ssh://git@gitlab.xxxx.com:8081/zhuqian/algorithm.git\n```\n\n你以为就这样完了，还没有，我们想要直接能在gitlab项目首页直接能够显示git访问方法，效果如下:\n![](/images/1046366-20180927105727421-1721871308.png)\n\n要实现此效果，只需配置下`/etc/gitlab/gitlab.rb`即可：\n\n```\n...\nexternal_url 'http://gitlab.xxxx.com'\n...\n\ngitlab_rails['gitlab_shell_ssh_port'] = 8081\n...\n```\n>> 另外需要注意下`nginx['listen_addresses'] = ['192.168.10.60']`，需要对应到本地的ip地址\n\n配置完之后:\n\n```\ngitlab-ctl reconfigure\n```\n然后通过域名访问gitlab即可实现上述效果了，只不过http方式目前还无法解决。\n\n# 七、由mtu引起的无法访问的问题\n如果frp的admin界面一切正常，但是就是无法获取数据\n\n![](/images/1046366-20180927105741148-1074788234.png)\n\n那么极有可能是你本地的网络最大分片小于服务器的最大分片，导致数据无法发送出去,解决办法是减小服务器的mtu:\n\n```\nsudo ifconfig eth0 mtu 1000 up\n```\n\n其他修改mtu的方式请自行google。\n\n# 八、References:\n\n1. [利用 frp 进行内网穿透](https://mritd.me/2017/01/21/use-frp-for-internal-network-wear/)\n","slug":"内网穿透frp","published":1,"updated":"2018-11-15T07:27:29.354Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoiaeldl0006lnfcav1qunwh","content":"<h1 id=\"一、内网穿透原理\"><a href=\"#一、内网穿透原理\" class=\"headerlink\" title=\"一、内网穿透原理\"></a>一、内网穿透原理</h1><p>简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：</p>\n<ul>\n<li>全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机</li>\n<li>限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包</li>\n<li>端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机</li>\n<li>对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透</li>\n</ul>\n<p>内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考 内网打洞、网络地址转换NAT原理。</p>\n<h1 id=\"二、环境准备\"><a href=\"#二、环境准备\" class=\"headerlink\" title=\"二、环境准备\"></a>二、环境准备</h1><p>实际上根据以上 NAT 规则，基本上大部分家用设备和运营商上级路由等都在前三种规则之中，所以只需要借助成熟的内网穿透工具即可，以下为本次穿透环境</p>\n<ul>\n<li>最新版本 frp</li>\n<li>一台公网 VPS 服务器</li>\n<li>内网一台服务器，最好 Linux 系统</li>\n</ul>\n<h1 id=\"三、服务端搭建\"><a href=\"#三、服务端搭建\" class=\"headerlink\" title=\"三、服务端搭建\"></a>三、服务端搭建</h1><p>服务器作为公网访问唯一的固定地址，即作为 server 端；内网客户端作为 client 端，会主动向 server 端创建连接，此时再从 server 端反向发送数据即可实现内网穿透</p>\n<h2 id=\"3-1-下载并解压frp\"><a href=\"#3-1-下载并解压frp\" class=\"headerlink\" title=\"3.1). 下载并解压frp\"></a>3.1). 下载并解压frp</h2><p>可以查看<a href=\"https://github.com/fatedier/frp/releases\" target=\"_blank\" rel=\"noopener\">releases</a>获取最新的版本,选好版本之后使用以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar -zxvf frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">cd frp_0.21.0_linux_amd64</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-编辑frps-ini\"><a href=\"#3-2-编辑frps-ini\" class=\"headerlink\" title=\"3.2). 编辑frps.ini\"></a>3.2). 编辑frps.ini</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]                                                                                                                                                                                                </span><br><span class=\"line\"># frp 监听地址</span><br><span class=\"line\">bind_addr = 0.0.0.0</span><br><span class=\"line\">bind_port = 7000</span><br><span class=\"line\"></span><br><span class=\"line\"># 如果需要代理 web(http) 服务，则开启此端口</span><br><span class=\"line\">vhost_http_port = 8080</span><br><span class=\"line\">vhost_https_port = 4443</span><br><span class=\"line\"></span><br><span class=\"line\"># frp 控制面板</span><br><span class=\"line\">dashboard_port = 7500</span><br><span class=\"line\">dashboard_user = user</span><br><span class=\"line\">dashboard_pwd = pwd</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认日志输出位置(这里输出到标准输出)</span><br><span class=\"line\">log_file = /tmp/frps.log</span><br><span class=\"line\"># 日志级别，支持: debug, info, warn, error</span><br><span class=\"line\">log_level = info</span><br><span class=\"line\">log_max_days = 3</span><br><span class=\"line\"></span><br><span class=\"line\"># 是否开启特权模式(特权模式下，客户端更改配置无需更新服务端)</span><br><span class=\"line\">privilege_mode = true</span><br><span class=\"line\"># 授权 token 建议随机生成</span><br><span class=\"line\">privilege_token = cc23*********************d072734</span><br><span class=\"line\"># 特权模式下允许分配的端口(避免端口滥用)</span><br><span class=\"line\">privilege_allow_ports = 4000-50000</span><br><span class=\"line\"></span><br><span class=\"line\"># 后端连接池最大连接数量</span><br><span class=\"line\">max_pool_count = 100</span><br><span class=\"line\"></span><br><span class=\"line\"># 口令超时时间</span><br><span class=\"line\">authentication_timeout = 900</span><br><span class=\"line\"></span><br><span class=\"line\"># 子域名(特权模式下将 *.xxxx.com 解析到公网服务器)</span><br><span class=\"line\">subdomain_host = xxxx.com</span><br></pre></td></tr></table></figure>\n<p><strong>其他具体配置说明请参考<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\" rel=\"noopener\">frp README</a> 文档</strong></p>\n<h2 id=\"3-3-启动frp-server\"><a href=\"#3-3-启动frp-server\" class=\"headerlink\" title=\"3.3). 启动frp server\"></a>3.3). 启动frp server</h2><p>设置完成后执行 ./frps -c frps.ini 启动即可</p>\n<p><strong>ps:当然也可以使用supervisor来管理</strong></p>\n<h1 id=\"四、客户端配置\"><a href=\"#四、客户端配置\" class=\"headerlink\" title=\"四、客户端配置\"></a>四、客户端配置</h1><p>客户端作为发起链接的主动方，只需要正确配置服务器地址，以及要映射客户端的哪些服务端口等即可</p>\n<h2 id=\"4-1-下载并解压frp\"><a href=\"#4-1-下载并解压frp\" class=\"headerlink\" title=\"4.1). 下载并解压frp\"></a>4.1). 下载并解压frp</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar -zxvf frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">cd frp_0.21.0_linux_amd64</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-2-编辑frpc-ini\"><a href=\"#4-2-编辑frpc-ini\" class=\"headerlink\" title=\"4.2). 编辑frpc.ini\"></a>4.2). 编辑frpc.ini</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = 127.0.0.1</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\"># console or real logFile path like ./frpc.log</span><br><span class=\"line\">log_file = /tmp/frpc.log</span><br><span class=\"line\"></span><br><span class=\"line\"># debug, info, warn, error</span><br><span class=\"line\">log_level = debug</span><br><span class=\"line\"></span><br><span class=\"line\">log_max_days = 3</span><br><span class=\"line\"></span><br><span class=\"line\"># 特权模式，要和服务器端的配置一致</span><br><span class=\"line\">privilege_token = cc23*********************d072734</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab]</span><br><span class=\"line\">type = http</span><br><span class=\"line\">local_port = 8080</span><br><span class=\"line\">subdomain = gitlab  # 这样只要访问http://gitlab.xxxx.com:8080即可访问到该客户端的gitlab服务</span><br><span class=\"line\">use_gzip = true</span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab_static_file]</span><br><span class=\"line\">type = tcp</span><br><span class=\"line\">remote_port = 8082</span><br><span class=\"line\">plugin = static_file</span><br><span class=\"line\"># 要对外暴露的文件目录</span><br><span class=\"line\">plugin_local_path = /opt/gitlab/embedded/service/gitlab-rails/public/assets/</span><br><span class=\"line\"># 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径</span><br><span class=\"line\">plugin_strip_prefix = assets</span><br><span class=\"line\">#plugin_http_user = abc</span><br><span class=\"line\">#plugin_http_passwd = abc</span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab_ssh]</span><br><span class=\"line\">type = tcp </span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">local_port = 22</span><br><span class=\"line\">remote_port = 8081</span><br></pre></td></tr></table></figure>\n<p><strong>其他具体配置说明请参考<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\" rel=\"noopener\">frp README</a> 文档</strong></p>\n<h2 id=\"4-3-启动frp-client\"><a href=\"#4-3-启动frp-client\" class=\"headerlink\" title=\"4.3). 启动frp client\"></a>4.3). 启动frp client</h2><p>设置完成后执行 ./frpc -c frpc.ini 启动即可</p>\n<p><strong>ps:当然也可以使用supervisor来管理</strong></p>\n<h1 id=\"五、测试\"><a href=\"#五、测试\" class=\"headerlink\" title=\"五、测试\"></a>五、测试</h1><p>服务端和客户端同时开启完成后，即可访问 <a href=\"http://127.0.0.1:7500\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:7500</a> 进入 frp 控制面板，如下<br><img src=\"/images/1046366-20180927105622574-1652030646.png\" alt=\"\"><br><img src=\"/images/1046366-20180927105631267-34167117.png\" alt=\"\"><br>此时通过 ssh <a href=\"mailto:root@127.0.0.1\" target=\"_blank\" rel=\"noopener\">root@127.0.0.1</a> -p 8081 即可ssh到gitlab，通过访问<a href=\"http://gitlab.xxxx.com:8080\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com:8080</a> 即可访问gitlab服务</p>\n<h1 id=\"六、GitLab通过frp代理\"><a href=\"#六、GitLab通过frp代理\" class=\"headerlink\" title=\"六、GitLab通过frp代理\"></a>六、GitLab通过frp代理</h1><p>通过上述配置，确实可以通过 <a href=\"http://gitlab.xxxx.com:8080\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com:8080</a> 访问gitlab服务,但是你会发现缺少静态文件,因为gitlab的静态文件是nginx代理的，走的tcp协议,需要一种解决方案。</p>\n<h2 id=\"方案一、使用frp的static-file的插件\"><a href=\"#方案一、使用frp的static-file的插件\" class=\"headerlink\" title=\"方案一、使用frp的static_file的插件\"></a>方案一、使用frp的static_file的插件</h2><p>虽然可以成功，通过 <a href=\"http://127.0.0.1:8082\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8082</a> 即可访问gitlab的静态文件，并且也可以通过nginx反向代理到gitlab.xxxx.com这个域名上，但是速度会很慢很慢,nginx配置如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                                                                                                                                                                    </span><br><span class=\"line\">    listen  80; </span><br><span class=\"line\">    server_name  gitlab.xxxx.com;</span><br><span class=\"line\">    location / &#123; </span><br><span class=\"line\">        proxy_pass http://gitlab.xxxx.com:8080;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    location /assets &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:8082;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方案二、将gitlab静态文件移至服务器上，用nginx代理\"><a href=\"#方案二、将gitlab静态文件移至服务器上，用nginx代理\" class=\"headerlink\" title=\"方案二、将gitlab静态文件移至服务器上，用nginx代理\"></a>方案二、将gitlab静态文件移至服务器上，用nginx代理</h2><p>gitlab静态文件在如下位置<code>/opt/gitlab/embedded/service/gitlab-rails/public/assets/</code>放至服务器，并配置nginx如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                                                                                                                                                                    </span><br><span class=\"line\">    listen  80;</span><br><span class=\"line\">    server_name  gitlab.xxxx.com;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://gitlab.xxxx.com:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /assets &#123;</span><br><span class=\"line\">        alias /webapps/gitlab/public/assets;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样即可通过 <a href=\"http://gitlab.xxxx.com\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com</a> 正常访问内网的gitlab了</p>\n<p>但是这样还没结束，你会发现外网通过git clone <a href=\"http://gitlab.xxxx.com/zhuqian/licaishi.git\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com/zhuqian/licaishi.git</a> ,根本没法正常克隆仓库，那有啥用啊，别急，咋们还可以用ssh方式啊。</p>\n<p>上面我们已经配置gitlab的22端口映射到服务器的8081端口了，所以可以这样克隆:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone ssh://git@127.0.0.1:8081/zhuqian/licaishi.git</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">git clone ssh://git@gitlab.xxxx.com:8081/zhuqian/licaishi.git</span><br></pre></td></tr></table></figure>\n<p>对于pip install的话，可以这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install git+ssh://git@127.0.0.1:8081/zhuqian/algorithm.git</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">pip install git+ssh://git@gitlab.xxxx.com:8081/zhuqian/algorithm.git</span><br></pre></td></tr></table></figure>\n<p>你以为就这样完了，还没有，我们想要直接能在gitlab项目首页直接能够显示git访问方法，效果如下:<br><img src=\"/images/1046366-20180927105727421-1721871308.png\" alt=\"\"></p>\n<p>要实现此效果，只需配置下<code>/etc/gitlab/gitlab.rb</code>即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">external_url &apos;http://gitlab.xxxx.com&apos;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">gitlab_rails[&apos;gitlab_shell_ssh_port&apos;] = 8081</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<blockquote>\n<blockquote>\n<p>另外需要注意下<code>nginx[&#39;listen_addresses&#39;] = [&#39;192.168.10.60&#39;]</code>，需要对应到本地的ip地址</p>\n</blockquote>\n</blockquote>\n<p>配置完之后:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>\n<p>然后通过域名访问gitlab即可实现上述效果了，只不过http方式目前还无法解决。</p>\n<h1 id=\"七、由mtu引起的无法访问的问题\"><a href=\"#七、由mtu引起的无法访问的问题\" class=\"headerlink\" title=\"七、由mtu引起的无法访问的问题\"></a>七、由mtu引起的无法访问的问题</h1><p>如果frp的admin界面一切正常，但是就是无法获取数据</p>\n<p><img src=\"/images/1046366-20180927105741148-1074788234.png\" alt=\"\"></p>\n<p>那么极有可能是你本地的网络最大分片小于服务器的最大分片，导致数据无法发送出去,解决办法是减小服务器的mtu:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ifconfig eth0 mtu 1000 up</span><br></pre></td></tr></table></figure>\n<p>其他修改mtu的方式请自行google。</p>\n<h1 id=\"八、References\"><a href=\"#八、References\" class=\"headerlink\" title=\"八、References:\"></a>八、References:</h1><ol>\n<li><a href=\"https://mritd.me/2017/01/21/use-frp-for-internal-network-wear/\" target=\"_blank\" rel=\"noopener\">利用 frp 进行内网穿透</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、内网穿透原理\"><a href=\"#一、内网穿透原理\" class=\"headerlink\" title=\"一、内网穿透原理\"></a>一、内网穿透原理</h1><p>简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：</p>\n<ul>\n<li>全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机</li>\n<li>限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包</li>\n<li>端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机</li>\n<li>对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透</li>\n</ul>\n<p>内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考 内网打洞、网络地址转换NAT原理。</p>\n<h1 id=\"二、环境准备\"><a href=\"#二、环境准备\" class=\"headerlink\" title=\"二、环境准备\"></a>二、环境准备</h1><p>实际上根据以上 NAT 规则，基本上大部分家用设备和运营商上级路由等都在前三种规则之中，所以只需要借助成熟的内网穿透工具即可，以下为本次穿透环境</p>\n<ul>\n<li>最新版本 frp</li>\n<li>一台公网 VPS 服务器</li>\n<li>内网一台服务器，最好 Linux 系统</li>\n</ul>\n<h1 id=\"三、服务端搭建\"><a href=\"#三、服务端搭建\" class=\"headerlink\" title=\"三、服务端搭建\"></a>三、服务端搭建</h1><p>服务器作为公网访问唯一的固定地址，即作为 server 端；内网客户端作为 client 端，会主动向 server 端创建连接，此时再从 server 端反向发送数据即可实现内网穿透</p>\n<h2 id=\"3-1-下载并解压frp\"><a href=\"#3-1-下载并解压frp\" class=\"headerlink\" title=\"3.1). 下载并解压frp\"></a>3.1). 下载并解压frp</h2><p>可以查看<a href=\"https://github.com/fatedier/frp/releases\" target=\"_blank\" rel=\"noopener\">releases</a>获取最新的版本,选好版本之后使用以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar -zxvf frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">cd frp_0.21.0_linux_amd64</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-编辑frps-ini\"><a href=\"#3-2-编辑frps-ini\" class=\"headerlink\" title=\"3.2). 编辑frps.ini\"></a>3.2). 编辑frps.ini</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]                                                                                                                                                                                                </span><br><span class=\"line\"># frp 监听地址</span><br><span class=\"line\">bind_addr = 0.0.0.0</span><br><span class=\"line\">bind_port = 7000</span><br><span class=\"line\"></span><br><span class=\"line\"># 如果需要代理 web(http) 服务，则开启此端口</span><br><span class=\"line\">vhost_http_port = 8080</span><br><span class=\"line\">vhost_https_port = 4443</span><br><span class=\"line\"></span><br><span class=\"line\"># frp 控制面板</span><br><span class=\"line\">dashboard_port = 7500</span><br><span class=\"line\">dashboard_user = user</span><br><span class=\"line\">dashboard_pwd = pwd</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认日志输出位置(这里输出到标准输出)</span><br><span class=\"line\">log_file = /tmp/frps.log</span><br><span class=\"line\"># 日志级别，支持: debug, info, warn, error</span><br><span class=\"line\">log_level = info</span><br><span class=\"line\">log_max_days = 3</span><br><span class=\"line\"></span><br><span class=\"line\"># 是否开启特权模式(特权模式下，客户端更改配置无需更新服务端)</span><br><span class=\"line\">privilege_mode = true</span><br><span class=\"line\"># 授权 token 建议随机生成</span><br><span class=\"line\">privilege_token = cc23*********************d072734</span><br><span class=\"line\"># 特权模式下允许分配的端口(避免端口滥用)</span><br><span class=\"line\">privilege_allow_ports = 4000-50000</span><br><span class=\"line\"></span><br><span class=\"line\"># 后端连接池最大连接数量</span><br><span class=\"line\">max_pool_count = 100</span><br><span class=\"line\"></span><br><span class=\"line\"># 口令超时时间</span><br><span class=\"line\">authentication_timeout = 900</span><br><span class=\"line\"></span><br><span class=\"line\"># 子域名(特权模式下将 *.xxxx.com 解析到公网服务器)</span><br><span class=\"line\">subdomain_host = xxxx.com</span><br></pre></td></tr></table></figure>\n<p><strong>其他具体配置说明请参考<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\" rel=\"noopener\">frp README</a> 文档</strong></p>\n<h2 id=\"3-3-启动frp-server\"><a href=\"#3-3-启动frp-server\" class=\"headerlink\" title=\"3.3). 启动frp server\"></a>3.3). 启动frp server</h2><p>设置完成后执行 ./frps -c frps.ini 启动即可</p>\n<p><strong>ps:当然也可以使用supervisor来管理</strong></p>\n<h1 id=\"四、客户端配置\"><a href=\"#四、客户端配置\" class=\"headerlink\" title=\"四、客户端配置\"></a>四、客户端配置</h1><p>客户端作为发起链接的主动方，只需要正确配置服务器地址，以及要映射客户端的哪些服务端口等即可</p>\n<h2 id=\"4-1-下载并解压frp\"><a href=\"#4-1-下载并解压frp\" class=\"headerlink\" title=\"4.1). 下载并解压frp\"></a>4.1). 下载并解压frp</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar -zxvf frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">cd frp_0.21.0_linux_amd64</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-2-编辑frpc-ini\"><a href=\"#4-2-编辑frpc-ini\" class=\"headerlink\" title=\"4.2). 编辑frpc.ini\"></a>4.2). 编辑frpc.ini</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = 127.0.0.1</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\"># console or real logFile path like ./frpc.log</span><br><span class=\"line\">log_file = /tmp/frpc.log</span><br><span class=\"line\"></span><br><span class=\"line\"># debug, info, warn, error</span><br><span class=\"line\">log_level = debug</span><br><span class=\"line\"></span><br><span class=\"line\">log_max_days = 3</span><br><span class=\"line\"></span><br><span class=\"line\"># 特权模式，要和服务器端的配置一致</span><br><span class=\"line\">privilege_token = cc23*********************d072734</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab]</span><br><span class=\"line\">type = http</span><br><span class=\"line\">local_port = 8080</span><br><span class=\"line\">subdomain = gitlab  # 这样只要访问http://gitlab.xxxx.com:8080即可访问到该客户端的gitlab服务</span><br><span class=\"line\">use_gzip = true</span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab_static_file]</span><br><span class=\"line\">type = tcp</span><br><span class=\"line\">remote_port = 8082</span><br><span class=\"line\">plugin = static_file</span><br><span class=\"line\"># 要对外暴露的文件目录</span><br><span class=\"line\">plugin_local_path = /opt/gitlab/embedded/service/gitlab-rails/public/assets/</span><br><span class=\"line\"># 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径</span><br><span class=\"line\">plugin_strip_prefix = assets</span><br><span class=\"line\">#plugin_http_user = abc</span><br><span class=\"line\">#plugin_http_passwd = abc</span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab_ssh]</span><br><span class=\"line\">type = tcp </span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">local_port = 22</span><br><span class=\"line\">remote_port = 8081</span><br></pre></td></tr></table></figure>\n<p><strong>其他具体配置说明请参考<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\" rel=\"noopener\">frp README</a> 文档</strong></p>\n<h2 id=\"4-3-启动frp-client\"><a href=\"#4-3-启动frp-client\" class=\"headerlink\" title=\"4.3). 启动frp client\"></a>4.3). 启动frp client</h2><p>设置完成后执行 ./frpc -c frpc.ini 启动即可</p>\n<p><strong>ps:当然也可以使用supervisor来管理</strong></p>\n<h1 id=\"五、测试\"><a href=\"#五、测试\" class=\"headerlink\" title=\"五、测试\"></a>五、测试</h1><p>服务端和客户端同时开启完成后，即可访问 <a href=\"http://127.0.0.1:7500\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:7500</a> 进入 frp 控制面板，如下<br><img src=\"/images/1046366-20180927105622574-1652030646.png\" alt=\"\"><br><img src=\"/images/1046366-20180927105631267-34167117.png\" alt=\"\"><br>此时通过 ssh <a href=\"mailto:root@127.0.0.1\" target=\"_blank\" rel=\"noopener\">root@127.0.0.1</a> -p 8081 即可ssh到gitlab，通过访问<a href=\"http://gitlab.xxxx.com:8080\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com:8080</a> 即可访问gitlab服务</p>\n<h1 id=\"六、GitLab通过frp代理\"><a href=\"#六、GitLab通过frp代理\" class=\"headerlink\" title=\"六、GitLab通过frp代理\"></a>六、GitLab通过frp代理</h1><p>通过上述配置，确实可以通过 <a href=\"http://gitlab.xxxx.com:8080\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com:8080</a> 访问gitlab服务,但是你会发现缺少静态文件,因为gitlab的静态文件是nginx代理的，走的tcp协议,需要一种解决方案。</p>\n<h2 id=\"方案一、使用frp的static-file的插件\"><a href=\"#方案一、使用frp的static-file的插件\" class=\"headerlink\" title=\"方案一、使用frp的static_file的插件\"></a>方案一、使用frp的static_file的插件</h2><p>虽然可以成功，通过 <a href=\"http://127.0.0.1:8082\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8082</a> 即可访问gitlab的静态文件，并且也可以通过nginx反向代理到gitlab.xxxx.com这个域名上，但是速度会很慢很慢,nginx配置如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                                                                                                                                                                    </span><br><span class=\"line\">    listen  80; </span><br><span class=\"line\">    server_name  gitlab.xxxx.com;</span><br><span class=\"line\">    location / &#123; </span><br><span class=\"line\">        proxy_pass http://gitlab.xxxx.com:8080;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    location /assets &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:8082;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方案二、将gitlab静态文件移至服务器上，用nginx代理\"><a href=\"#方案二、将gitlab静态文件移至服务器上，用nginx代理\" class=\"headerlink\" title=\"方案二、将gitlab静态文件移至服务器上，用nginx代理\"></a>方案二、将gitlab静态文件移至服务器上，用nginx代理</h2><p>gitlab静态文件在如下位置<code>/opt/gitlab/embedded/service/gitlab-rails/public/assets/</code>放至服务器，并配置nginx如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                                                                                                                                                                    </span><br><span class=\"line\">    listen  80;</span><br><span class=\"line\">    server_name  gitlab.xxxx.com;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://gitlab.xxxx.com:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /assets &#123;</span><br><span class=\"line\">        alias /webapps/gitlab/public/assets;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样即可通过 <a href=\"http://gitlab.xxxx.com\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com</a> 正常访问内网的gitlab了</p>\n<p>但是这样还没结束，你会发现外网通过git clone <a href=\"http://gitlab.xxxx.com/zhuqian/licaishi.git\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com/zhuqian/licaishi.git</a> ,根本没法正常克隆仓库，那有啥用啊，别急，咋们还可以用ssh方式啊。</p>\n<p>上面我们已经配置gitlab的22端口映射到服务器的8081端口了，所以可以这样克隆:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone ssh://git@127.0.0.1:8081/zhuqian/licaishi.git</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">git clone ssh://git@gitlab.xxxx.com:8081/zhuqian/licaishi.git</span><br></pre></td></tr></table></figure>\n<p>对于pip install的话，可以这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install git+ssh://git@127.0.0.1:8081/zhuqian/algorithm.git</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">pip install git+ssh://git@gitlab.xxxx.com:8081/zhuqian/algorithm.git</span><br></pre></td></tr></table></figure>\n<p>你以为就这样完了，还没有，我们想要直接能在gitlab项目首页直接能够显示git访问方法，效果如下:<br><img src=\"/images/1046366-20180927105727421-1721871308.png\" alt=\"\"></p>\n<p>要实现此效果，只需配置下<code>/etc/gitlab/gitlab.rb</code>即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">external_url &apos;http://gitlab.xxxx.com&apos;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">gitlab_rails[&apos;gitlab_shell_ssh_port&apos;] = 8081</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<blockquote>\n<blockquote>\n<p>另外需要注意下<code>nginx[&#39;listen_addresses&#39;] = [&#39;192.168.10.60&#39;]</code>，需要对应到本地的ip地址</p>\n</blockquote>\n</blockquote>\n<p>配置完之后:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>\n<p>然后通过域名访问gitlab即可实现上述效果了，只不过http方式目前还无法解决。</p>\n<h1 id=\"七、由mtu引起的无法访问的问题\"><a href=\"#七、由mtu引起的无法访问的问题\" class=\"headerlink\" title=\"七、由mtu引起的无法访问的问题\"></a>七、由mtu引起的无法访问的问题</h1><p>如果frp的admin界面一切正常，但是就是无法获取数据</p>\n<p><img src=\"/images/1046366-20180927105741148-1074788234.png\" alt=\"\"></p>\n<p>那么极有可能是你本地的网络最大分片小于服务器的最大分片，导致数据无法发送出去,解决办法是减小服务器的mtu:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ifconfig eth0 mtu 1000 up</span><br></pre></td></tr></table></figure>\n<p>其他修改mtu的方式请自行google。</p>\n<h1 id=\"八、References\"><a href=\"#八、References\" class=\"headerlink\" title=\"八、References:\"></a>八、References:</h1><ol>\n<li><a href=\"https://mritd.me/2017/01/21/use-frp-for-internal-network-wear/\" target=\"_blank\" rel=\"noopener\">利用 frp 进行内网穿透</a></li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjoiaeldc0000lnfc2mecmt0b","category_id":"cjoiaeldj0004lnfc1bgmbhys","_id":"cjoiaeldr000clnfc8sfgeeu7"},{"post_id":"cjoiaeldg0002lnfc5bqgv2hu","category_id":"cjoiaeldj0004lnfc1bgmbhys","_id":"cjoiaeldr000elnfcewie84ar"},{"post_id":"cjoiaeldl0006lnfcav1qunwh","category_id":"cjoiaeldq000blnfcu2hevbg1","_id":"cjoiaelds000flnfc0mbskz4a"}],"PostTag":[{"post_id":"cjoiaeldc0000lnfc2mecmt0b","tag_id":"cjoiaeldl0005lnfcb9bv5lk6","_id":"cjoiaeldp000alnfcaw1pnrlv"},{"post_id":"cjoiaeldg0002lnfc5bqgv2hu","tag_id":"cjoiaeldl0005lnfcb9bv5lk6","_id":"cjoiaeldr000dlnfc6d2jleu3"}],"Tag":[{"name":"Hexo","_id":"cjoiaeldl0005lnfcb9bv5lk6"}]}}