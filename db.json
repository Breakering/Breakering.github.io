{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/images/1046366-20180927105631267-34167117.png","path":"images/1046366-20180927105631267-34167117.png","modified":1,"renderable":0},{"_id":"source/images/1046366-20180927105727421-1721871308.png","path":"images/1046366-20180927105727421-1721871308.png","modified":1,"renderable":0},{"_id":"source/images/1046366-20180927105741148-1074788234.png","path":"images/1046366-20180927105741148-1074788234.png","modified":1,"renderable":0},{"_id":"source/images/j-16x16.ico","path":"images/j-16x16.ico","modified":1,"renderable":0},{"_id":"source/images/j-32x32.ico","path":"images/j-32x32.ico","modified":1,"renderable":0},{"_id":"themes/hexo-theme-spfk/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":1},{"_id":"source/images/1046366-20180927105622574-1652030646.png","path":"images/1046366-20180927105622574-1652030646.png","modified":1,"renderable":0},{"_id":"source/images/breakering.jpg","path":"images/breakering.jpg","modified":1,"renderable":0},{"_id":"themes/hexo-theme-spfk/source/css/default.css","path":"css/default.css","modified":1,"renderable":1},{"_id":"source/images/2018-11-16/1046366-20181009112517884-381181059.png","path":"images/2018-11-16/1046366-20181009112517884-381181059.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-spfk/source/css/loading-style.css","path":"css/loading-style.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/css/showshare.css","path":"css/showshare.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/alipay.png","path":"img/alipay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/coderwall.png","path":"img/coderwall.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/delicious.png","path":"img/delicious.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/douban.png","path":"img/douban.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/facebook.png","path":"img/facebook.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/github.png","path":"img/github.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/google.png","path":"img/google.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/instagram.png","path":"img/instagram.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/linkedin.png","path":"img/linkedin.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/mail.png","path":"img/mail.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/pinboard.png","path":"img/pinboard.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/pinterest.png","path":"img/pinterest.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/rss.png","path":"img/rss.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/qq.png","path":"img/qq.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/segmentfault.png","path":"img/segmentfault.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/twitter.png","path":"img/twitter.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/wechat.png","path":"img/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/weibo.png","path":"img/weibo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/weixin.png","path":"img/weixin.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/zhihu.png","path":"img/zhihu.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/TweenMax.js","path":"js/TweenMax.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/instagram.js","path":"js/instagram.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/mobile.js","path":"js/mobile.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/pace.js","path":"js/pace.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/pc.js","path":"js/pc.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-25.jpg","path":"background/bg-25.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/alipayimg.jpg","path":"img/alipayimg.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/head.jpg","path":"img/head.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/wechatimg.jpg","path":"img/wechatimg.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/TweenMax.min.js","path":"js/TweenMax.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/embed.js","path":"js/embed.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-109.jpg","path":"background/bg-109.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-11.jpg","path":"background/bg-11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-17.jpg","path":"background/bg-17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-20.jpg","path":"background/bg-20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-26.jpg","path":"background/bg-26.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-27.jpg","path":"background/bg-27.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg.jpg","path":"background/bg.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/css/font-awesome.css","path":"font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/css/font-awesome.min.css","path":"font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/404/jquery.parallaxify-0.0.2.min.js","path":"js/404/jquery.parallaxify-0.0.2.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-15.jpg","path":"background/bg-15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-23.jpg","path":"background/bg-23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-7.jpg","path":"background/bg-7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/FontAwesome.otf","path":"font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.eot","path":"font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.woff2","path":"font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.woff","path":"font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/css/pace/pace-theme-flash.css","path":"css/pace/pace-theme-flash.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/404/jquery-2.0.3.min.js","path":"js/404/jquery-2.0.3.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-14.jpg","path":"background/bg-14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-9.jpg","path":"background/bg-9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.ttf","path":"font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/imgshare.css","path":"static/api/css/imgshare.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/like.css","path":"static/api/css/like.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/select_share.css","path":"static/api/css/select_share.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_popup.css","path":"static/api/css/share_popup.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_16.css","path":"static/api/css/share_style0_16.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_24.css","path":"static/api/css/share_style0_24.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_32.css","path":"static/api/css/share_style0_32.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_16.css","path":"static/api/css/share_style1_16.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_24.css","path":"static/api/css/share_style1_24.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_32.css","path":"static/api/css/share_style1_32.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2.css","path":"static/api/css/share_style2.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_16.css","path":"static/api/css/share_style2_16.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_24.css","path":"static/api/css/share_style2_24.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_32.css","path":"static/api/css/share_style2_32.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style4.css","path":"static/api/css/share_style4.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/slide_share.css","path":"static/api/css/slide_share.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/weixin_popup.css","path":"static/api/css/weixin_popup.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share.js","path":"static/api/js/share.js","modified":1,"renderable":1},{"_id":"source/images/banner.jpg","path":"images/banner.jpg","modified":1,"renderable":0},{"_id":"themes/hexo-theme-spfk/source/background/bg-19.jpg","path":"background/bg-19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-21.jpg","path":"background/bg-21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-22.jpg","path":"background/bg-22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-24.jpg","path":"background/bg-24.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-6.jpg","path":"background/bg-6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-8.jpg","path":"background/bg-8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l8.gif","path":"static/api/img/share/l8.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/data.js","path":"static/api/js/trans/data.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/logger.js","path":"static/api/js/trans/logger.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-10.jpg","path":"background/bg-10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-12.jpg","path":"background/bg-12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-18.jpg","path":"background/bg-18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_16.png","path":"static/api/img/share/icons_0_16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_24.png","path":"static/api/img/share/icons_0_24.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_32.png","path":"static/api/img/share/icons_0_32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_16.png","path":"static/api/img/share/icons_1_16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_24.png","path":"static/api/img/share/icons_1_24.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_32.png","path":"static/api/img/share/icons_1_32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_16.png","path":"static/api/img/share/icons_2_16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_24.png","path":"static/api/img/share/icons_2_24.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_32.png","path":"static/api/img/share/icons_2_32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l0.gif","path":"static/api/img/share/l0.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l1.gif","path":"static/api/img/share/l1.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l2.gif","path":"static/api/img/share/l2.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l3.gif","path":"static/api/img/share/l3.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l4.gif","path":"static/api/img/share/l4.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l5.gif","path":"static/api/img/share/l5.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l6.gif","path":"static/api/img/share/l6.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l7.gif","path":"static/api/img/share/l7.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/pop_c.gif","path":"static/api/img/share/pop_c.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r0.gif","path":"static/api/img/share/r0.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r1.gif","path":"static/api/img/share/r1.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r2.gif","path":"static/api/img/share/r2.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r3.gif","path":"static/api/img/share/r3.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r4.gif","path":"static/api/img/share/r4.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r5.gif","path":"static/api/img/share/r5.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r6.gif","path":"static/api/img/share/r6.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r7.gif","path":"static/api/img/share/r7.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r8.gif","path":"static/api/img/share/r8.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/sc.png","path":"static/api/img/share/sc.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/selectshare_close.png","path":"static/api/img/share/selectshare_close.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/share-search-icon.png","path":"static/api/img/share/share-search-icon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/base/class.js","path":"static/api/js/base/class.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/animate.js","path":"static/api/js/component/animate.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/anticheat.js","path":"static/api/js/component/anticheat.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/comm_tools.js","path":"static/api/js/component/comm_tools.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/partners.js","path":"static/api/js/component/partners.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_base.js","path":"static/api/js/component/pop_base.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_dialog.js","path":"static/api/js/component/pop_dialog.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_popup.js","path":"static/api/js/component/pop_popup.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_popup_slide.js","path":"static/api/js/component/pop_popup_slide.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/qrcode.js","path":"static/api/js/component/qrcode.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/conf/const.js","path":"static/api/js/conf/const.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/conf/define.js","path":"static/api/js/conf/define.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/api_base.js","path":"static/api/js/share/api_base.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/combine_api.js","path":"static/api/js/share/combine_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/image_api.js","path":"static/api/js/share/image_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/like_api.js","path":"static/api/js/share/like_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/likeshare.js","path":"static/api/js/share/likeshare.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/select_api.js","path":"static/api/js/share/select_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/share_api.js","path":"static/api/js/share/share_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/slide_api.js","path":"static/api/js/share/slide_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/start/router.js","path":"static/api/js/start/router.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans.js","path":"static/api/js/trans/trans.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_bdxc.js","path":"static/api/js/trans/trans_bdxc.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_bdysc.js","path":"static/api/js/trans/trans_bdysc.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_weixin.js","path":"static/api/js/trans/trans_weixin.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/image_view.js","path":"static/api/js/view/image_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/like_view.js","path":"static/api/js/view/like_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/select_view.js","path":"static/api/js/view/select_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/share_view.js","path":"static/api/js/view/share_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/slide_view.js","path":"static/api/js/view/slide_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/view_base.js","path":"static/api/js/view/view_base.js","modified":1,"renderable":1},{"_id":"source/images/wallpaper/2.jpg","path":"images/wallpaper/2.jpg","modified":1,"renderable":0},{"_id":"themes/hexo-theme-spfk/source/background/bg-111.jpg","path":"background/bg-111.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-13.jpg","path":"background/bg-13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-16.jpg","path":"background/bg-16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.svg","path":"font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/base/tangram.js","path":"static/api/js/base/tangram.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":1,"renderable":1},{"_id":"source/images/background.jpg","path":"images/background.jpg","modified":1,"renderable":0},{"_id":"source/images/wallpaper/1.jpg","path":"images/wallpaper/1.jpg","modified":1,"renderable":0},{"_id":"themes/hexo-theme-spfk/source/background/bg-112.jpg","path":"background/bg-112.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538292128362},{"_id":"source/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538292128362},{"_id":"source/robots.txt","hash":"a6dd9e1f9f21cea6de430a4d4d239c851c0fc8e0","modified":1538292128366},{"_id":"themes/hexo-theme-spfk/README.md","hash":"228961ab390b883cb441fec95fd2ae6ab1f423ba","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/_config.yml","hash":"dd16f5aaa75efffcfe27bb49c85151407c4463a7","modified":1542358693209},{"_id":"source/_posts/Hexo同步.md","hash":"68902d9c9901ca51836707445603ae5e3dbf2c4d","modified":1542269239901},{"_id":"source/_posts/Linux在局域网如何通过hostname获取其ip.md","hash":"3ce7996700aeae987b3d88fa08ac777b9adef780","modified":1542359108870},{"_id":"source/_posts/hello-world.md","hash":"b16868fce26f59a5d2d5b61e88f8b643a910c8b9","modified":1542266849462},{"_id":"source/_posts/内网穿透frp.md","hash":"02ded6cb70898ef5c591db855f12d7d19653050f","modified":1542355686050},{"_id":"source/_posts/在Django中实现queryset级别缓存.md","hash":"6c046bfb60ac4b5a3e5b533c90213abcff68e54b","modified":1542358408715},{"_id":"source/about/index.md","hash":"b2712f2e81e4e20bc0b227606fec2358caa08e1c","modified":1542180580220},{"_id":"source/categories/index.md","hash":"34e432bfb3c29444342cc08d75fca70abcd910b2","modified":1538292128362},{"_id":"source/images/1046366-20180927105631267-34167117.png","hash":"aad2c61bfee92d6ddce65302c7fc845544f92184","modified":1538290427000},{"_id":"source/images/1046366-20180927105727421-1721871308.png","hash":"b0264800f4c3c14ad1f47c1310137ac7eaa1dc17","modified":1538294835000},{"_id":"source/images/1046366-20180927105741148-1074788234.png","hash":"b5444ac5e0e3b8aa500f7dfb5b9bddd67ee788be","modified":1538294840000},{"_id":"source/images/j-16x16.ico","hash":"3f37c2a78f1983bb9f9b0b75af88fb7300966a8b","modified":1538292128366},{"_id":"source/images/j-32x32.ico","hash":"08b56b6791db62b29a336ae957dd6f56bc1c4708","modified":1538292128366},{"_id":"source/photo/index.md","hash":"3be2dab36ada66ce0e4cc9be83d09e3b8dace433","modified":1542358122660},{"_id":"source/tags/index.md","hash":"2b579734ce27a6495d50e0975e29e970981d46a9","modified":1538292128366},{"_id":"themes/hexo-theme-spfk/languages/de.yml","hash":"ecb13af8af81ccc033ae7494cb2f94f84f6466ad","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/en.yml","hash":"8fa0a7482188ca56fd3cf19c4a87320f85a76846","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/default.yml","hash":"9e59cd11b290be84909612beb12d0f93ce737f53","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/es.yml","hash":"1f9e9c0084e972c8e40045da963ec4904ac79327","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/fr-FR.yml","hash":"12cfa96dc412ecb6f8bf4de2690575929464906e","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/pt-BR","hash":"922b6d836cc690742b2d55a725e3886c5d0cbb75","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/ru.yml","hash":"9997425292031ee8a58a93346ac6d3f38f18e566","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/zh-Hans.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/zh-hk.yml","hash":"606dfb34d3fec1d7895a654ff7a5a1de0c6a5c55","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/zh-tw.yml","hash":"9e4034870b57d2bb3063c91f8d206a6c4d7b3789","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/languages/zh.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/plugins.swig","hash":"f809b5e62e968a80921c56e5d7658325b48b7263","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/source/apple-touch-icon.png","hash":"3f37c2a78f1983bb9f9b0b75af88fb7300966a8b","modified":1538292128000},{"_id":"source/images/1046366-20180927105622574-1652030646.png","hash":"6a101389d9798bf03141d3def6b4c25d056df7c0","modified":1538290411000},{"_id":"source/images/breakering.jpg","hash":"13a20e60f53d42e197019ed81e3d7270a0ccd909","modified":1538292128366},{"_id":"themes/hexo-theme-spfk/source/css/default.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542351092532},{"_id":"source/images/2018-11-16/1046366-20181009112517884-381181059.png","hash":"6660b22bcdbea7a2be64bcfe0d3720f8e943eb27","modified":1542358975000},{"_id":"themes/hexo-theme-spfk/layout/_partial/after-footer.ejs","hash":"d2d8fda1d50d193088dbd641c6dcc3bd2bdf0165","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/archive-post.ejs","hash":"8af583c5f60c69ffdc97bee4e8fdac1ba34ebecd","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/article.ejs","hash":"b30e6dac43ac0c82cca3990f31e29004c1b8e647","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/background.ejs","hash":"cb656037dae582272c748c68a174f2da622d5a12","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/bodybackground.ejs","hash":"931700a928b84577cc33dfff68a009188885f6c0","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/case.swig","hash":"a2a7ec0e4c203e49fd32335c60c3b9851ed6e4a5","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/head.ejs","hash":"6f34f1062b8bbd46bb5216332c8110c08697c6d2","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/footer.ejs","hash":"0e54ea8678e6d6f0bf98a4b76f5c4ee4d424893f","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/hide-labels.ejs","hash":"e981795db4954ba5cc9d6844a6a2799bffdc0af3","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/page.ejs","hash":"55ffdcc87b5fa50afdc370f439c0e812e307cbff","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/left-col.ejs","hash":"9d9aaecfd40903be38b97c46d6b7f1ea3fd7354e","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/plugin.swig","hash":"17b6c6945e4b1b41dbb10d851f85ca10100c28ea","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/scrolling-button.ejs","hash":"b3a28974f37375796687e6100b48c3da6f662640","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post-nav-button.ejs","hash":"c817bdf39f62670872aae19accea4c51f5e0bfa7","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/sidebar.swig","hash":"38bea91021bc559245ef7765a3fdd805ec9885c1","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/theme.swig","hash":"5a279ad8f6c6b7c104cce495faa563d8b7a7c74a","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/work.swig","hash":"6bdb6ec45f6179875e5a33bfdc7568a3831638fd","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/toc.ejs","hash":"84bbda825793de643d5a40190fab2160af1e75e3","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_variables.styl","hash":"a753c14f409a294188f2e99575f2c10b82fd56a2","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/loading-style.css","hash":"1f67362d809e85edc9f122db7bc3711af1ed1d8b","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/showshare.css","hash":"d5288601c95acd7fea993ac8cc3d04efcbdd1559","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/style.styl","hash":"e2064d2ba11610154306730bfbac821b9633abe7","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/layout/_partial/mathjax.ejs","hash":"cdfd21f079933f3a275bc4088e1ca5e6068e75b4","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/img/alipay.png","hash":"6ec0c618109aac31a212d252a3b85f2975b82b3a","modified":1542351092540},{"_id":"themes/hexo-theme-spfk/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/favicon.png","hash":"5b4e9c94ff3396db5b074b69c1aa5bb909aba825","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/instagram.png","hash":"3c148a3882a8d141d7d405be8c4815d0dcb03561","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/qq.png","hash":"fd741764c5528fe371f053beac99839a97900eef","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/segmentfault.png","hash":"4483ab273423deb65021111fc8ad9512b69e45b2","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/wechat.png","hash":"7ca41b6e32ca4dac419225261ab4fee5a88f73a9","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/img/weixin.png","hash":"92b8df9aba9169c1553c01994bf21a938fa39cb7","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/TweenMax.js","hash":"0ba64564a4fde4085fa3971dd53b7d64a41751e1","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/clipboard.min.js","hash":"c13b4bb8fee46447284590d2afc0efca0ea3cb7b","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/jquery.lazyload.js","hash":"8e4ad3e17f8e82be311b6b6e87811762e2b2d764","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/main.js","hash":"921b2fb56e48cce3d16ceb4a3fadf8e666c73a0a","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/mobile.js","hash":"d3847e5bcaf39108931724ecb02770c62b10889f","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/pace.js","hash":"b49c10cd65d9488f7338e3c778e55ac6628650f3","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/pc.js","hash":"ab375af6e3bcd054b1e87e1a8dcd3d7d25c2db40","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/js/plugins.js","hash":"c1cf96b2d852b5803228a34d99014b005623bc06","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/background/bg-25.jpg","hash":"7a05a524b70c9acd75c3f16a3b9992e4587995bd","modified":1542351092516},{"_id":"themes/hexo-theme-spfk/source/img/alipayimg.jpg","hash":"8d0a43a15ebf26ae7033f8f04ffa3408d97c93fe","modified":1542352504000},{"_id":"themes/hexo-theme-spfk/layout/_partial/mobile-nav.ejs","hash":"320de58b166710d02963d80f27bcd50478841401","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/source/img/head.jpg","hash":"80c0999acfc1173183d3dd243b4b90d077ab97cb","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/img/wechatimg.jpg","hash":"bea392cd7363f37d099f7578a32f13aa20526d7f","modified":1542352502000},{"_id":"themes/hexo-theme-spfk/source/js/TweenMax.min.js","hash":"eaa4e4a08400da3f22dedda706ba56cdce5b0b7a","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/embed.js","hash":"8d2d4a812ab639bc02fdd8749d3a39f6b9406c54","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/layout/_partial/analytics/baidu-analytics.ejs","hash":"b21500b87d79a0068e3ca0408b4e125e3e749d01","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/analytics/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/comments/disqus.ejs","hash":"7792a79ab85ef28551cc2a793735973b1d5521a7","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/comments/duoshuo.ejs","hash":"f6112c3f08f46dde1c0ba6a5bee8017624590e47","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/comments/gitment.ejs","hash":"a3248f670ca13c4ea1e330cf8b89152adb8b5625","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/comments/youyan.ejs","hash":"a6853b59ee60e775de1ed90b242084f83774d195","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/share/share.ejs","hash":"62467610ba6df9b63350d163e806be774dcf5a00","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/share/baidu-share.ejs","hash":"993b7d231881601ba79aab1e78d75dcb271b3500","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/share/showshare.ejs","hash":"410b809eb6c50bacfd9e1e573f1e0251841bc79d","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/TipTitle.ejs","hash":"65b0956edca84e0bc0eb616ec236309822d5f803","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/category.ejs","hash":"265bb12f7cfa5e0bcbb74fdd409ba13a6d9d2e22","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/date.ejs","hash":"1cfcf2e06ab9b1c6dcd44f41825dfe98d400c7ea","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/loading.ejs","hash":"52a576a8afee08d33c6f69a61c496e1820132e91","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/nav.ejs","hash":"4779c17cf76bf4560e52708102467bb8ec7a2781","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/swiftype.ejs","hash":"76374e601d911e1279e1944d2a6b7eb3391c7c7c","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/tag.ejs","hash":"9dad471e27de9e066666f3082137eccaede2e67b","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1542351092468},{"_id":"themes/hexo-theme-spfk/source/background/bg-1.jpg","hash":"f0617756387d74f99afe0087c7b93a32f3c7096b","modified":1542351092472},{"_id":"themes/hexo-theme-spfk/source/background/bg-109.jpg","hash":"6171c1e921c8cc9bdcd7276cf7f0bee5295f4672","modified":1542351092476},{"_id":"themes/hexo-theme-spfk/source/background/bg-11.jpg","hash":"d69a0447e91f62977b144737f08620d77037c76a","modified":1542351092476},{"_id":"themes/hexo-theme-spfk/source/background/bg-17.jpg","hash":"6ab5e470059e8ccb0c8bc6786abfb5db7e9a1826","modified":1542351092504},{"_id":"themes/hexo-theme-spfk/source/background/bg-20.jpg","hash":"9d428ac435198b2a0107102a2e9ae71e53afe364","modified":1542351092512},{"_id":"themes/hexo-theme-spfk/source/background/bg-26.jpg","hash":"3730aa317f9d75ca327b34478cd58e72667b04e8","modified":1542351092520},{"_id":"themes/hexo-theme-spfk/source/background/bg-27.jpg","hash":"ced50e6e8cad2b0db97445c4e1463d4a62540b9b","modified":1542351092520},{"_id":"themes/hexo-theme-spfk/source/background/bg-3.jpg","hash":"f1347eddd07bdae93ab6bebad8627eddc5baeb44","modified":1542351092520},{"_id":"themes/hexo-theme-spfk/source/background/bg.jpg","hash":"f0617756387d74f99afe0087c7b93a32f3c7096b","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/archive.styl","hash":"a8bc2e2458bcc51fa68122274a41f5e4e52a8ebd","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/article.styl","hash":"956eddddae0059c0abc63c5cc820b6e987a673cc","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/baidushare.styl","hash":"fe36e3d8933b1b0b674aaf16e50dbf6090099912","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/footer.styl","hash":"cbf916a5338e69e05d0815c53aeb818d636b6d99","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/instagram.styl","hash":"db9cc156c7df27f7f54b0e7ff34b5949f55f99eb","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/highlight.styl","hash":"62d7930e9556f893088c65c5fc4229a10ebc7671","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/main.styl","hash":"6e3d15fbe2663bb6fc408df4a771925c3eac65cf","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/mobile-slider.styl","hash":"3bf9f2359f68c700e21618ad6262db81038c3d96","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/mobile.styl","hash":"53b1a06e08df81427505cbc76cc8eb02bea54356","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/page.styl","hash":"46b9c91428c1e1f42cc8a1010f600f70fb8edc82","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/plugins.styl","hash":"629ae10dfc053dbfc074966f0bf7f0115acf65e2","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/reward.styl","hash":"2b705bcc1c2f8c71a979aa10851a162d1deba394","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/scroll.styl","hash":"1932774d30b8706919342f9cf36ea2d99987ce14","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/share.styl","hash":"2dde7c9ea40c71fce3dbd8d5e2bcc8d9682141b8","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/tagcloud.styl","hash":"91e6553775ca931a1b3db1ab11c4cf227df68c21","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/wheelmenu.styl","hash":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/font-awesome/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1542351092536},{"_id":"themes/hexo-theme-spfk/source/font-awesome/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1542351092536},{"_id":"themes/hexo-theme-spfk/source/js/gitment.browser.js","hash":"6154e6a3bfb402c3ecc9b7889675f1f640926b75","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/js/404/jquery.parallaxify-0.0.2.min.js","hash":"b97e2dfcb210b76f7bdd6e1800b26128bf4fad99","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/background/bg-15.jpg","hash":"ce5760578eb814fe951c56200e81c6f47b6468d4","modified":1542351092500},{"_id":"themes/hexo-theme-spfk/source/background/bg-23.jpg","hash":"050937d649be2c02ef8a66a0ffe7d320b236d1b0","modified":1542351092516},{"_id":"themes/hexo-theme-spfk/source/background/bg-7.jpg","hash":"acbe0946a47ba16b79f062dbee14c4c9ff9a48da","modified":1542351092528},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1542351092536},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1542351092536},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1542351092540},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1542351092540},{"_id":"themes/hexo-theme-spfk/source/css/pace/pace-theme-flash.css","hash":"508bce8b59a1fbc1f1443a7c4ab3b026e5517dab","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/js/404/jquery-2.0.3.min.js","hash":"fbf9c77d0c4e3c34a485980c1e5316b6212160c8","modified":1542351092548},{"_id":"themes/hexo-theme-spfk/source/background/bg-14.jpg","hash":"2fd6ede2bc9de2d26d910ea4e45d28b2350881eb","modified":1542351092500},{"_id":"themes/hexo-theme-spfk/source/background/bg-9.jpg","hash":"df731da0fe0de9a05d99d017e747252c990f972d","modified":1542351092528},{"_id":"themes/hexo-theme-spfk/source/css/_partial/customise/blockquote.styl","hash":"83179f1d0e12b025cd433a6071b2826c2b4168cc","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/customise/code-block.styl","hash":"1f05c0558b2970c369fe19bafbc8a1821c09bce0","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/customise/inline-code.styl","hash":"ac2fcef8823d5566c0e27f23b2a46beecbd71c72","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/post/gitment.styl","hash":"9a103392d4fd8ba0667e633fcb8b30d36d51ef65","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/css/_partial/post/youyan.styl","hash":"ac2869e2e0fb3a1ee0df4b0c0a233a2b1923ea20","modified":1542351092532},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1542351092540},{"_id":"themes/hexo-theme-spfk/source/static/api/css/imgshare.css","hash":"c3624a2dde649ed28b2e5d1f050fd971fbaf71a0","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share.js","hash":"5e71147fe4a93bc99387a5cc1c6894d8b6ab2d5e","modified":1542351092556},{"_id":"source/images/banner.jpg","hash":"c0be06aefc9a818c5a836bb88026999f050c5d38","modified":1460251155000},{"_id":"themes/hexo-theme-spfk/source/background/bg-19.jpg","hash":"d77504412d28432643fc61ed9fd9f7c57096bdd9","modified":1542351092508},{"_id":"themes/hexo-theme-spfk/source/background/bg-21.jpg","hash":"7c4c6cd5d75115093fa29bba7372fa198f04b0f1","modified":1542351092512},{"_id":"themes/hexo-theme-spfk/source/background/bg-22.jpg","hash":"7a055391fa4188d9c22fdc1d34a10b26e2f0826d","modified":1542351092512},{"_id":"themes/hexo-theme-spfk/source/background/bg-24.jpg","hash":"796fa5262d7714e8ce9496a2d03864429cfc5b45","modified":1542351092516},{"_id":"themes/hexo-theme-spfk/source/background/bg-4.jpg","hash":"da47f889e02241c8b095f852fb7efd89c114599d","modified":1542351092520},{"_id":"themes/hexo-theme-spfk/source/background/bg-6.jpg","hash":"1a4f4c8875b2c56e7992000979a7fca7856eec35","modified":1542351092524},{"_id":"themes/hexo-theme-spfk/source/background/bg-8.jpg","hash":"dbecc189e28d00fa23e397eb512e039c2ff03c87","modified":1542351092528},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l8.gif","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/background/bg-10.jpg","hash":"dfb23c1c3cf8a3dcb8dc0ea10cf06501c151a2a2","modified":1542351092476},{"_id":"themes/hexo-theme-spfk/source/background/bg-12.jpg","hash":"2e0815591309863d8130881681cde32ec4bfebf1","modified":1542351092496},{"_id":"themes/hexo-theme-spfk/source/background/bg-18.jpg","hash":"4d61dc41a781a9c1d37c9e5e413ac0d8a9538f6a","modified":1542351092504},{"_id":"themes/hexo-theme-spfk/source/img/bg.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1542351092544},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/base/class.js","hash":"ad1e5a3011e30b83ac8aaeabffc3311dcb151bf5","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/animate.js","hash":"00b6f74ed82e5a21a9295dd2dc963e892734b7f6","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/comm_tools.js","hash":"e651fbb1a85ab9c615ee833f4d042c203ef430bc","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_popup_slide.js","hash":"1119fc14abd34ffb8e1f653cd30ca26adaafa3bf","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/static/api/js/conf/const.js","hash":"e2269411b129b847eca265fbc73f0d573f2474bb","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/conf/define.js","hash":"1393906ec26b7cf711c18e569a64f7d0c1951fc7","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/combine_api.js","hash":"c45d76df1707b4fd739dae7022dc4a015632a81a","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/like_api.js","hash":"3526047b7f9f7446b883e2fa5ebcf143526449be","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/likeshare.js","hash":"d088ffe7b6451cedf202280d16e85f75a8c3bfd3","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/start/router.js","hash":"97c195ae0d30dd8c7aac55a0555f082eeed4eee0","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans.js","hash":"2bf87aff540cba3bee6cc05a7a8e9a2bc8b5d907","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_bdxc.js","hash":"da78025de5717315252d2d33b4252c89b891c71c","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_bdysc.js","hash":"1be632b99fdd67ba5279aa6c56db7d528fd094c3","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/like_view.js","hash":"42b51bd3ee4815b9ca8df6dacb9c81a8a34d762a","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1542351092556},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1542351092556},{"_id":"source/images/wallpaper/2.jpg","hash":"c0be06aefc9a818c5a836bb88026999f050c5d38","modified":1460251155000},{"_id":"themes/hexo-theme-spfk/source/background/bg-111.jpg","hash":"e1631b47fede8da6c03582ceed648668547c4f09","modified":1542351092476},{"_id":"themes/hexo-theme-spfk/source/background/bg-13.jpg","hash":"d7237c6014e28c90f53287f48f718d0759af104b","modified":1542351092496},{"_id":"themes/hexo-theme-spfk/source/background/bg-16.jpg","hash":"d1a34d0c4b69262169b543922e4aeb4dae997ad8","modified":1542351092500},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.svg","hash":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1542351092540},{"_id":"themes/hexo-theme-spfk/source/static/api/js/base/tangram.js","hash":"e1952e27f6dc3d6339128cec157acef8cc0a775f","modified":1542351092552},{"_id":"themes/hexo-theme-spfk/source/background/bg-2.jpg","hash":"40a6db13e9c461f80e2c4efee7fb63bbd594e751","modified":1542351092508},{"_id":"themes/hexo-theme-spfk/source/background/bg-5.jpg","hash":"2d5da2a209732cce0abf2ca234c0bef0516b65ff","modified":1542351092524},{"_id":"source/images/background.jpg","hash":"81cc186f993bef4658eacdae54b6557936a1afe8","modified":1542338463000},{"_id":"source/images/wallpaper/1.jpg","hash":"81cc186f993bef4658eacdae54b6557936a1afe8","modified":1542338463000},{"_id":"themes/hexo-theme-spfk/source/background/bg-112.jpg","hash":"54d04b06878eec5d021b6f257bc44298f953a2b7","modified":1542351092492},{"_id":"public/search.xml","hash":"a7723921e6be448c440d3ff12fdd6f5f5ced0bfd","modified":1542359113367},{"_id":"public/baidusitemap.xml","hash":"0e9c23e48b2a5637ffe8165bf5bcf0642fe4e551","modified":1542359113453},{"_id":"public/sitemap.xml","hash":"965e613483d1f2a126a29bbb9607d7e904982a18","modified":1542359113457},{"_id":"public/atom.xml","hash":"37d9b744e2bd3725f27bed2431794ea333ae63d0","modified":1542359113458},{"_id":"public/tags/Django/index.html","hash":"94fdb2b7fb47396a749fd5452ef2bc4243dd6bc9","modified":1542359113516},{"_id":"public/categories/内网穿透/index.html","hash":"62aa2f13b08a0262296ef85a86875d683443b838","modified":1542359113541},{"_id":"public/categories/Django/index.html","hash":"98fceacd008fc5923ff6482ac01af59a781aaca3","modified":1542359113542},{"_id":"public/about/index.html","hash":"497101fce42d26e7431808225335d6e4c4d00429","modified":1542359113542},{"_id":"public/categories/index.html","hash":"4c5cddcb2dda28f128430d38eef1fca265d473f9","modified":1542359113542},{"_id":"public/photo/index.html","hash":"28cdac0eb9d4513cf57afc45a251d39cca76caa6","modified":1542359113542},{"_id":"public/tags/index.html","hash":"9045559d7bb3409685efd01c0a21bb5dc77bc43d","modified":1542359113542},{"_id":"public/2018/11/16/在Django中实现queryset级别缓存/index.html","hash":"ea0b6692395b446a3dc814247668eefdb514591f","modified":1542359113542},{"_id":"public/2018/11/15/Hexo同步/index.html","hash":"d659219ae768f80aeb5d6f94ff1c9db2ab6d85a0","modified":1542359113542},{"_id":"public/2018/09/28/hello-world/index.html","hash":"b7d05071122dd543282ac88d6c2585dae31b642f","modified":1542359113542},{"_id":"public/2018/09/28/内网穿透frp/index.html","hash":"da0a8f31d037f69db0488c598098275d5770f84b","modified":1542359113542},{"_id":"public/archives/index.html","hash":"c6c7a7da376f13ceaede94604d1c517a4d8c3355","modified":1542359113542},{"_id":"public/archives/2018/index.html","hash":"6f9bf69a1b7754f18073842d9a02a750dec50b45","modified":1542359113542},{"_id":"public/archives/2018/09/index.html","hash":"c9356c6adc081340abb5738822429960eb6cc3db","modified":1542359113543},{"_id":"public/archives/2018/11/index.html","hash":"1bf1e97548124ecddab35744a345a4778c200623","modified":1542359113543},{"_id":"public/index.html","hash":"c34af532ec84f29ace204cafa14153a66531da41","modified":1542359113543},{"_id":"public/tags/Hexo/index.html","hash":"d98bac3173d020a4f0c442cbd4689b1fcd0a92ad","modified":1542359113543},{"_id":"public/categories/Hexo/index.html","hash":"f501045984f4da9c35bb3e54d91a38e5e78e9de7","modified":1542359113543},{"_id":"public/tags/Linux/index.html","hash":"6391d512453cbbaeb1dee85967fb78b02052d8fc","modified":1542359113560},{"_id":"public/categories/Linux/index.html","hash":"862fc1832ebc2116a9676693462674cd2ee6bd22","modified":1542359113560},{"_id":"public/2018/11/16/Linux在局域网如何通过hostname获取其ip/index.html","hash":"9736f654f3c53d677567df59550f2b28e58f7e01","modified":1542359113561},{"_id":"public/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542359113561},{"_id":"public/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542359113561},{"_id":"public/static/api/img/share/l8.gif","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542359113561},{"_id":"public/robots.txt","hash":"a6dd9e1f9f21cea6de430a4d4d239c851c0fc8e0","modified":1542359113583},{"_id":"public/images/1046366-20180927105631267-34167117.png","hash":"aad2c61bfee92d6ddce65302c7fc845544f92184","modified":1542359113583},{"_id":"public/images/1046366-20180927105727421-1721871308.png","hash":"b0264800f4c3c14ad1f47c1310137ac7eaa1dc17","modified":1542359113583},{"_id":"public/images/1046366-20180927105741148-1074788234.png","hash":"b5444ac5e0e3b8aa500f7dfb5b9bddd67ee788be","modified":1542359113583},{"_id":"public/images/j-16x16.ico","hash":"3f37c2a78f1983bb9f9b0b75af88fb7300966a8b","modified":1542359113583},{"_id":"public/images/j-32x32.ico","hash":"08b56b6791db62b29a336ae957dd6f56bc1c4708","modified":1542359113583},{"_id":"public/apple-touch-icon.png","hash":"3f37c2a78f1983bb9f9b0b75af88fb7300966a8b","modified":1542359113583},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1542359113583},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1542359113583},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1542359113583},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1542359113583},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1542359113583},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1542359113583},{"_id":"public/img/alipay.png","hash":"6ec0c618109aac31a212d252a3b85f2975b82b3a","modified":1542359113583},{"_id":"public/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1542359113583},{"_id":"public/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1542359113584},{"_id":"public/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1542359113584},{"_id":"public/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1542359113584},{"_id":"public/img/favicon.png","hash":"5b4e9c94ff3396db5b074b69c1aa5bb909aba825","modified":1542359113584},{"_id":"public/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1542359113584},{"_id":"public/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1542359113584},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1542359113584},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1542359113584},{"_id":"public/img/instagram.png","hash":"3c148a3882a8d141d7d405be8c4815d0dcb03561","modified":1542359113584},{"_id":"public/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1542359113584},{"_id":"public/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1542359113584},{"_id":"public/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1542359113584},{"_id":"public/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1542359113584},{"_id":"public/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1542359113584},{"_id":"public/img/qq.png","hash":"fd741764c5528fe371f053beac99839a97900eef","modified":1542359113584},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1542359113584},{"_id":"public/img/segmentfault.png","hash":"4483ab273423deb65021111fc8ad9512b69e45b2","modified":1542359113584},{"_id":"public/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1542359113585},{"_id":"public/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1542359113585},{"_id":"public/img/wechat.png","hash":"7ca41b6e32ca4dac419225261ab4fee5a88f73a9","modified":1542359113585},{"_id":"public/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1542359113585},{"_id":"public/img/weixin.png","hash":"92b8df9aba9169c1553c01994bf21a938fa39cb7","modified":1542359113585},{"_id":"public/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1542359113585},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1542359113585},{"_id":"public/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1542359113585},{"_id":"public/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1542359113585},{"_id":"public/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1542359113585},{"_id":"public/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1542359113585},{"_id":"public/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1542359113585},{"_id":"public/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1542359113585},{"_id":"public/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1542359113585},{"_id":"public/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1542359113586},{"_id":"public/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1542359113586},{"_id":"public/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1542359113586},{"_id":"public/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1542359113586},{"_id":"public/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1542359113586},{"_id":"public/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1542359113586},{"_id":"public/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1542359113586},{"_id":"public/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1542359113586},{"_id":"public/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1542359113586},{"_id":"public/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1542359113586},{"_id":"public/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1542359113586},{"_id":"public/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1542359113586},{"_id":"public/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1542359113586},{"_id":"public/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1542359113586},{"_id":"public/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1542359113586},{"_id":"public/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1542359113586},{"_id":"public/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1542359113586},{"_id":"public/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1542359113586},{"_id":"public/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1542359113586},{"_id":"public/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1542359113587},{"_id":"public/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1542359113587},{"_id":"public/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1542359113587},{"_id":"public/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1542359113587},{"_id":"public/images/2018-11-16/1046366-20181009112517884-381181059.png","hash":"6660b22bcdbea7a2be64bcfe0d3720f8e943eb27","modified":1542359113587},{"_id":"public/images/1046366-20180927105622574-1652030646.png","hash":"6a101389d9798bf03141d3def6b4c25d056df7c0","modified":1542359114575},{"_id":"public/images/breakering.jpg","hash":"13a20e60f53d42e197019ed81e3d7270a0ccd909","modified":1542359114575},{"_id":"public/background/bg-25.jpg","hash":"7a05a524b70c9acd75c3f16a3b9992e4587995bd","modified":1542359114580},{"_id":"public/img/alipayimg.jpg","hash":"8d0a43a15ebf26ae7033f8f04ffa3408d97c93fe","modified":1542359114580},{"_id":"public/img/head.jpg","hash":"80c0999acfc1173183d3dd243b4b90d077ab97cb","modified":1542359114580},{"_id":"public/img/wechatimg.jpg","hash":"bea392cd7363f37d099f7578a32f13aa20526d7f","modified":1542359114580},{"_id":"public/font-awesome/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1542359114581},{"_id":"public/font-awesome/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1542359114581},{"_id":"public/font-awesome/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1542359114581},{"_id":"public/font-awesome/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1542359114581},{"_id":"public/css/default.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542359114631},{"_id":"public/css/loading-style.css","hash":"1f67362d809e85edc9f122db7bc3711af1ed1d8b","modified":1542359114631},{"_id":"public/css/showshare.css","hash":"3efc4afd0d136fb5dec993e9cd9ce85b9d1cf589","modified":1542359114632},{"_id":"public/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1542359114632},{"_id":"public/js/TweenMax.js","hash":"0ba64564a4fde4085fa3971dd53b7d64a41751e1","modified":1542359114632},{"_id":"public/js/clipboard.min.js","hash":"c13b4bb8fee46447284590d2afc0efca0ea3cb7b","modified":1542359114632},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1542359114633},{"_id":"public/js/jquery.lazyload.js","hash":"8e4ad3e17f8e82be311b6b6e87811762e2b2d764","modified":1542359114633},{"_id":"public/js/main.js","hash":"921b2fb56e48cce3d16ceb4a3fadf8e666c73a0a","modified":1542359114633},{"_id":"public/js/mobile.js","hash":"d3847e5bcaf39108931724ecb02770c62b10889f","modified":1542359114634},{"_id":"public/js/pc.js","hash":"ab375af6e3bcd054b1e87e1a8dcd3d7d25c2db40","modified":1542359114634},{"_id":"public/js/plugins.js","hash":"c1cf96b2d852b5803228a34d99014b005623bc06","modified":1542359114634},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1542359114634},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1542359114634},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1542359114634},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1542359114634},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1542359114634},{"_id":"public/js/404/jquery.parallaxify-0.0.2.min.js","hash":"b97e2dfcb210b76f7bdd6e1800b26128bf4fad99","modified":1542359114634},{"_id":"public/css/pace/pace-theme-flash.css","hash":"508bce8b59a1fbc1f1443a7c4ab3b026e5517dab","modified":1542359114635},{"_id":"public/static/api/css/imgshare.css","hash":"c3624a2dde649ed28b2e5d1f050fd971fbaf71a0","modified":1542359114635},{"_id":"public/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1542359114635},{"_id":"public/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1542359114635},{"_id":"public/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1542359114635},{"_id":"public/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1542359114635},{"_id":"public/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1542359114635},{"_id":"public/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1542359114635},{"_id":"public/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1542359114636},{"_id":"public/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1542359114636},{"_id":"public/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1542359114636},{"_id":"public/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1542359114636},{"_id":"public/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1542359114636},{"_id":"public/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1542359114636},{"_id":"public/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1542359114636},{"_id":"public/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1542359114637},{"_id":"public/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1542359114637},{"_id":"public/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1542359114637},{"_id":"public/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542359114637},{"_id":"public/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542359114637},{"_id":"public/static/api/js/base/class.js","hash":"ad1e5a3011e30b83ac8aaeabffc3311dcb151bf5","modified":1542359114637},{"_id":"public/static/api/js/component/animate.js","hash":"00b6f74ed82e5a21a9295dd2dc963e892734b7f6","modified":1542359114637},{"_id":"public/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1542359114637},{"_id":"public/static/api/js/component/comm_tools.js","hash":"e651fbb1a85ab9c615ee833f4d042c203ef430bc","modified":1542359114637},{"_id":"public/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1542359114637},{"_id":"public/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1542359114638},{"_id":"public/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1542359114638},{"_id":"public/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1542359114638},{"_id":"public/static/api/js/component/pop_popup_slide.js","hash":"1119fc14abd34ffb8e1f653cd30ca26adaafa3bf","modified":1542359114638},{"_id":"public/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1542359114638},{"_id":"public/static/api/js/conf/const.js","hash":"e2269411b129b847eca265fbc73f0d573f2474bb","modified":1542359114638},{"_id":"public/static/api/js/conf/define.js","hash":"1393906ec26b7cf711c18e569a64f7d0c1951fc7","modified":1542359114638},{"_id":"public/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1542359114638},{"_id":"public/static/api/js/share/combine_api.js","hash":"c45d76df1707b4fd739dae7022dc4a015632a81a","modified":1542359114639},{"_id":"public/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1542359114639},{"_id":"public/static/api/js/share/like_api.js","hash":"3526047b7f9f7446b883e2fa5ebcf143526449be","modified":1542359114639},{"_id":"public/static/api/js/share/likeshare.js","hash":"d088ffe7b6451cedf202280d16e85f75a8c3bfd3","modified":1542359114639},{"_id":"public/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1542359114639},{"_id":"public/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1542359114639},{"_id":"public/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1542359114639},{"_id":"public/static/api/js/start/router.js","hash":"97c195ae0d30dd8c7aac55a0555f082eeed4eee0","modified":1542359114639},{"_id":"public/static/api/js/trans/trans.js","hash":"2bf87aff540cba3bee6cc05a7a8e9a2bc8b5d907","modified":1542359114639},{"_id":"public/static/api/js/trans/trans_bdxc.js","hash":"da78025de5717315252d2d33b4252c89b891c71c","modified":1542359114639},{"_id":"public/static/api/js/trans/trans_bdysc.js","hash":"1be632b99fdd67ba5279aa6c56db7d528fd094c3","modified":1542359114640},{"_id":"public/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1542359114640},{"_id":"public/static/api/js/view/like_view.js","hash":"42b51bd3ee4815b9ca8df6dacb9c81a8a34d762a","modified":1542359114640},{"_id":"public/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1542359114640},{"_id":"public/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1542359114640},{"_id":"public/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1542359114640},{"_id":"public/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1542359114640},{"_id":"public/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1542359114640},{"_id":"public/css/style.css","hash":"1ef1be03b7170e8a59c3de4fa63b4def8cb08399","modified":1542359114640},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1542359114640},{"_id":"public/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1542359114640},{"_id":"public/js/pace.js","hash":"b49c10cd65d9488f7338e3c778e55ac6628650f3","modified":1542359114640},{"_id":"public/js/TweenMax.min.js","hash":"eaa4e4a08400da3f22dedda706ba56cdce5b0b7a","modified":1542359114640},{"_id":"public/js/embed.js","hash":"8d2d4a812ab639bc02fdd8749d3a39f6b9406c54","modified":1542359114641},{"_id":"public/font-awesome/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1542359114641},{"_id":"public/js/gitment.browser.js","hash":"6154e6a3bfb402c3ecc9b7889675f1f640926b75","modified":1542359114641},{"_id":"public/font-awesome/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1542359114641},{"_id":"public/js/404/jquery-2.0.3.min.js","hash":"fbf9c77d0c4e3c34a485980c1e5316b6212160c8","modified":1542359114642},{"_id":"public/static/api/js/share.js","hash":"5e71147fe4a93bc99387a5cc1c6894d8b6ab2d5e","modified":1542359114642},{"_id":"public/static/api/js/base/tangram.js","hash":"e1952e27f6dc3d6339128cec157acef8cc0a775f","modified":1542359114642},{"_id":"public/background/bg-1.jpg","hash":"f0617756387d74f99afe0087c7b93a32f3c7096b","modified":1542359114642},{"_id":"public/background/bg-109.jpg","hash":"6171c1e921c8cc9bdcd7276cf7f0bee5295f4672","modified":1542359114642},{"_id":"public/background/bg-11.jpg","hash":"d69a0447e91f62977b144737f08620d77037c76a","modified":1542359114642},{"_id":"public/background/bg-17.jpg","hash":"6ab5e470059e8ccb0c8bc6786abfb5db7e9a1826","modified":1542359114643},{"_id":"public/background/bg-20.jpg","hash":"9d428ac435198b2a0107102a2e9ae71e53afe364","modified":1542359114643},{"_id":"public/background/bg-26.jpg","hash":"3730aa317f9d75ca327b34478cd58e72667b04e8","modified":1542359114643},{"_id":"public/background/bg-27.jpg","hash":"ced50e6e8cad2b0db97445c4e1463d4a62540b9b","modified":1542359114643},{"_id":"public/background/bg-3.jpg","hash":"f1347eddd07bdae93ab6bebad8627eddc5baeb44","modified":1542359114643},{"_id":"public/background/bg.jpg","hash":"f0617756387d74f99afe0087c7b93a32f3c7096b","modified":1542359114643},{"_id":"public/font-awesome/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1542359114643},{"_id":"public/background/bg-15.jpg","hash":"ce5760578eb814fe951c56200e81c6f47b6468d4","modified":1542359114648},{"_id":"public/background/bg-23.jpg","hash":"050937d649be2c02ef8a66a0ffe7d320b236d1b0","modified":1542359114648},{"_id":"public/background/bg-7.jpg","hash":"acbe0946a47ba16b79f062dbee14c4c9ff9a48da","modified":1542359114649},{"_id":"public/background/bg-14.jpg","hash":"2fd6ede2bc9de2d26d910ea4e45d28b2350881eb","modified":1542359114656},{"_id":"public/background/bg-9.jpg","hash":"df731da0fe0de9a05d99d017e747252c990f972d","modified":1542359114656},{"_id":"public/background/bg-19.jpg","hash":"d77504412d28432643fc61ed9fd9f7c57096bdd9","modified":1542359114661},{"_id":"public/background/bg-21.jpg","hash":"7c4c6cd5d75115093fa29bba7372fa198f04b0f1","modified":1542359114661},{"_id":"public/background/bg-22.jpg","hash":"7a055391fa4188d9c22fdc1d34a10b26e2f0826d","modified":1542359114661},{"_id":"public/background/bg-24.jpg","hash":"796fa5262d7714e8ce9496a2d03864429cfc5b45","modified":1542359114661},{"_id":"public/background/bg-4.jpg","hash":"da47f889e02241c8b095f852fb7efd89c114599d","modified":1542359114662},{"_id":"public/background/bg-6.jpg","hash":"1a4f4c8875b2c56e7992000979a7fca7856eec35","modified":1542359114662},{"_id":"public/background/bg-8.jpg","hash":"dbecc189e28d00fa23e397eb512e039c2ff03c87","modified":1542359114662},{"_id":"public/font-awesome/fonts/fontawesome-webfont.svg","hash":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1542359114663},{"_id":"public/background/bg-10.jpg","hash":"dfb23c1c3cf8a3dcb8dc0ea10cf06501c151a2a2","modified":1542359114675},{"_id":"public/background/bg-12.jpg","hash":"2e0815591309863d8130881681cde32ec4bfebf1","modified":1542359114675},{"_id":"public/background/bg-18.jpg","hash":"4d61dc41a781a9c1d37c9e5e413ac0d8a9538f6a","modified":1542359114677},{"_id":"public/img/bg.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1542359114677},{"_id":"public/images/banner.jpg","hash":"c0be06aefc9a818c5a836bb88026999f050c5d38","modified":1542359114680},{"_id":"public/images/wallpaper/2.jpg","hash":"c0be06aefc9a818c5a836bb88026999f050c5d38","modified":1542359114680},{"_id":"public/background/bg-111.jpg","hash":"e1631b47fede8da6c03582ceed648668547c4f09","modified":1542359114681},{"_id":"public/background/bg-13.jpg","hash":"d7237c6014e28c90f53287f48f718d0759af104b","modified":1542359114681},{"_id":"public/background/bg-16.jpg","hash":"d1a34d0c4b69262169b543922e4aeb4dae997ad8","modified":1542359114682},{"_id":"public/background/bg-2.jpg","hash":"40a6db13e9c461f80e2c4efee7fb63bbd594e751","modified":1542359114684},{"_id":"public/background/bg-5.jpg","hash":"2d5da2a209732cce0abf2ca234c0bef0516b65ff","modified":1542359114688},{"_id":"public/images/wallpaper/1.jpg","hash":"81cc186f993bef4658eacdae54b6557936a1afe8","modified":1542359114692},{"_id":"public/images/background.jpg","hash":"81cc186f993bef4658eacdae54b6557936a1afe8","modified":1542359114692},{"_id":"public/background/bg-112.jpg","hash":"54d04b06878eec5d021b6f257bc44298f953a2b7","modified":1542359114697}],"Category":[{"name":"Hexo","_id":"cjojssjyv0004olfcp9dew259"},{"name":"Linux","_id":"cjojssjz5000bolfcrv6ionoi"},{"name":"内网穿透","_id":"cjojssjzd000iolfcs0u89nmy"},{"name":"Django","_id":"cjojssjze000nolfcgenpv1mw"}],"Data":[],"Page":[{"title":"关于","date":"2018-09-28T11:03:04.000Z","comments":0,"_content":"sdfsadfsdafasdf","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2018-09-28 19:03:04\ncomments: false\n---\nsdfsadfsdafasdf","updated":"2018-11-14T07:29:40.220Z","path":"about/index.html","layout":"page","_id":"cjojssjyo0001olfcq3kh0zyn","content":"<p>sdfsadfsdafasdf</p>\n","site":{"data":{}},"excerpt":"","more":"<p>sdfsadfsdafasdf</p>\n"},{"title":"分类","date":"2018-09-28T11:02:56.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-09-28 19:02:56\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-09-30T07:22:08.362Z","path":"categories/index.html","layout":"page","_id":"cjojssjys0003olfc9hzf179f","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"我的相册","date":"2018-11-16T08:46:53.000Z","_content":"# 壁纸\n![](http://blog.breakering.com/images/wallpaper/1.jpg)\n![](http://blog.breakering.com/images/wallpaper/2.jpg)\n","source":"photo/index.md","raw":"---\ntitle: 我的相册\ndate: 2018-11-16 16:46:53\n---\n# 壁纸\n![](http://blog.breakering.com/images/wallpaper/1.jpg)\n![](http://blog.breakering.com/images/wallpaper/2.jpg)\n","updated":"2018-11-16T08:48:42.660Z","path":"photo/index.html","comments":1,"layout":"page","_id":"cjojssjyz0007olfcj0tzqhoi","content":"<h1 id=\"壁纸\"><a href=\"#壁纸\" class=\"headerlink\" title=\"壁纸\"></a>壁纸</h1><p><img src=\"http://blog.breakering.com/images/wallpaper/1.jpg\" alt=\"\"><br><img src=\"http://blog.breakering.com/images/wallpaper/2.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"壁纸\"><a href=\"#壁纸\" class=\"headerlink\" title=\"壁纸\"></a>壁纸</h1><p><img src=\"http://blog.breakering.com/images/wallpaper/1.jpg\" alt=\"\"><br><img src=\"http://blog.breakering.com/images/wallpaper/2.jpg\" alt=\"\"></p>\n"},{"title":"标签","date":"2018-09-28T11:02:47.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-09-28 19:02:47\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-09-30T07:22:08.366Z","path":"tags/index.html","layout":"page","_id":"cjojssjz20009olfcg7fyl4sc","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo同步","date":"2018-11-15T07:27:52.000Z","description":"其他电脑同步博客的方法!","_content":"\n## 环境搭建\n\n### 安装Node.js\n\n用来生成静态页面, 到[Node.js官网](https://nodejs.org/en/)，下载最新版本, 根据提示一路安装即可\n\n### 安装Git\n\n```\nsudo apt-get install git\n```\n\n### 安装Hexo\n\n当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：\n\n```\nsudo npm install -g hexo\n```\n\n### 克隆hexo分支\n\n```\ngit clone -b hexo https://github.com/Breakering/breakering.github.io.git\n```\n\n### 进入breakering.github.io.git\n\n创建博客\n\n```\nhexo n '博客名'\n```\n\n发表博客\n\n```\nhexo d -g\n```\n\n### 主题配置更新相关\n\n需要先清空缓存\n\n```text\nhexo clean\n```\n\n然后进行部署操作\n\n```text\nhexo d -g\n```\n\n### 一些问题\n\n1. 报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：\n\n```\nnpm install hexo-deployer-git --save\n```\n\n2. 报错二: 若执行命令hexo d报以下错误:\n\n```\nERROR Plugin load failed: hexo-server \n//或者类似的错误 \nERROR Plugin load failed: hexo-renderer-sass\n```\n\n则执行响应的命令:\n \n```\nsudo npm install hexo-server\n//或者\nsudo npm install hexo-renderer-sass\n```\n","source":"_posts/Hexo同步.md","raw":"---\ntitle: Hexo同步\ndate: 2018-11-15 15:27:52\ndescription: 其他电脑同步博客的方法!\ntags: Hexo\ncategories: Hexo\n---\n\n## 环境搭建\n\n### 安装Node.js\n\n用来生成静态页面, 到[Node.js官网](https://nodejs.org/en/)，下载最新版本, 根据提示一路安装即可\n\n### 安装Git\n\n```\nsudo apt-get install git\n```\n\n### 安装Hexo\n\n当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：\n\n```\nsudo npm install -g hexo\n```\n\n### 克隆hexo分支\n\n```\ngit clone -b hexo https://github.com/Breakering/breakering.github.io.git\n```\n\n### 进入breakering.github.io.git\n\n创建博客\n\n```\nhexo n '博客名'\n```\n\n发表博客\n\n```\nhexo d -g\n```\n\n### 主题配置更新相关\n\n需要先清空缓存\n\n```text\nhexo clean\n```\n\n然后进行部署操作\n\n```text\nhexo d -g\n```\n\n### 一些问题\n\n1. 报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：\n\n```\nnpm install hexo-deployer-git --save\n```\n\n2. 报错二: 若执行命令hexo d报以下错误:\n\n```\nERROR Plugin load failed: hexo-server \n//或者类似的错误 \nERROR Plugin load failed: hexo-renderer-sass\n```\n\n则执行响应的命令:\n \n```\nsudo npm install hexo-server\n//或者\nsudo npm install hexo-renderer-sass\n```\n","slug":"Hexo同步","published":1,"updated":"2018-11-15T08:07:19.901Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjojssjyi0000olfceuwbufte","content":"<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><h3 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h3><p>用来生成静态页面, 到<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>，下载最新版本, 根据提示一路安装即可</p>\n<h3 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install git</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><p>当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h3 id=\"克隆hexo分支\"><a href=\"#克隆hexo分支\" class=\"headerlink\" title=\"克隆hexo分支\"></a>克隆hexo分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -b hexo https://github.com/Breakering/breakering.github.io.git</span><br></pre></td></tr></table></figure>\n<h3 id=\"进入breakering-github-io-git\"><a href=\"#进入breakering-github-io-git\" class=\"headerlink\" title=\"进入breakering.github.io.git\"></a>进入breakering.github.io.git</h3><p>创建博客</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n &apos;博客名&apos;</span><br></pre></td></tr></table></figure>\n<p>发表博客</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n<h3 id=\"主题配置更新相关\"><a href=\"#主题配置更新相关\" class=\"headerlink\" title=\"主题配置更新相关\"></a>主题配置更新相关</h3><p>需要先清空缓存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n<p>然后进行部署操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n<h3 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h3><ol>\n<li>报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>报错二: 若执行命令hexo d报以下错误:</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Plugin load failed: hexo-server </span><br><span class=\"line\">//或者类似的错误 </span><br><span class=\"line\">ERROR Plugin load failed: hexo-renderer-sass</span><br></pre></td></tr></table></figure>\n<p>则执行响应的命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install hexo-server</span><br><span class=\"line\">//或者</span><br><span class=\"line\">sudo npm install hexo-renderer-sass</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><h3 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h3><p>用来生成静态页面, 到<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>，下载最新版本, 根据提示一路安装即可</p>\n<h3 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install git</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><p>当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h3 id=\"克隆hexo分支\"><a href=\"#克隆hexo分支\" class=\"headerlink\" title=\"克隆hexo分支\"></a>克隆hexo分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -b hexo https://github.com/Breakering/breakering.github.io.git</span><br></pre></td></tr></table></figure>\n<h3 id=\"进入breakering-github-io-git\"><a href=\"#进入breakering-github-io-git\" class=\"headerlink\" title=\"进入breakering.github.io.git\"></a>进入breakering.github.io.git</h3><p>创建博客</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n &apos;博客名&apos;</span><br></pre></td></tr></table></figure>\n<p>发表博客</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n<h3 id=\"主题配置更新相关\"><a href=\"#主题配置更新相关\" class=\"headerlink\" title=\"主题配置更新相关\"></a>主题配置更新相关</h3><p>需要先清空缓存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n<p>然后进行部署操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n<h3 id=\"一些问题\"><a href=\"#一些问题\" class=\"headerlink\" title=\"一些问题\"></a>一些问题</h3><ol>\n<li>报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>报错二: 若执行命令hexo d报以下错误:</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Plugin load failed: hexo-server </span><br><span class=\"line\">//或者类似的错误 </span><br><span class=\"line\">ERROR Plugin load failed: hexo-renderer-sass</span><br></pre></td></tr></table></figure>\n<p>则执行响应的命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install hexo-server</span><br><span class=\"line\">//或者</span><br><span class=\"line\">sudo npm install hexo-renderer-sass</span><br></pre></td></tr></table></figure>\n"},{"title":"Linux在局域网如何通过hostname获取其ip","date":"2018-11-16T09:02:52.000Z","description":"Linux在局域网如何通过hostname获取其ip","photos":[],"_content":"### 只需要hostname固定，就可以在局域网通过ping hostname.local来获取其ip\n![](/images/2018-11-16/1046366-20181009112517884-381181059.png)","source":"_posts/Linux在局域网如何通过hostname获取其ip.md","raw":"---\ntitle: Linux在局域网如何通过hostname获取其ip\ndate: 2018-11-16 17:02:52\ndescription: Linux在局域网如何通过hostname获取其ip\ntags: Linux\ncategories: Linux\nphotos:\n---\n### 只需要hostname固定，就可以在局域网通过ping hostname.local来获取其ip\n![](/images/2018-11-16/1046366-20181009112517884-381181059.png)","slug":"Linux在局域网如何通过hostname获取其ip","published":1,"updated":"2018-11-16T09:05:08.870Z","comments":1,"layout":"post","link":"","_id":"cjojssjyq0002olfchrqmsvnz","content":"<h3 id=\"只需要hostname固定，就可以在局域网通过ping-hostname-local来获取其ip\"><a href=\"#只需要hostname固定，就可以在局域网通过ping-hostname-local来获取其ip\" class=\"headerlink\" title=\"只需要hostname固定，就可以在局域网通过ping hostname.local来获取其ip\"></a>只需要hostname固定，就可以在局域网通过ping hostname.local来获取其ip</h3><p><img src=\"/images/2018-11-16/1046366-20181009112517884-381181059.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"只需要hostname固定，就可以在局域网通过ping-hostname-local来获取其ip\"><a href=\"#只需要hostname固定，就可以在局域网通过ping-hostname-local来获取其ip\" class=\"headerlink\" title=\"只需要hostname固定，就可以在局域网通过ping hostname.local来获取其ip\"></a>只需要hostname固定，就可以在局域网通过ping hostname.local来获取其ip</h3><p><img src=\"/images/2018-11-16/1046366-20181009112517884-381181059.png\" alt=\"\"></p>\n"},{"title":"Hexo初识","description":"简单介绍hexo的用法.","date":"2018-09-28T12:58:27.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hexo初识\ndescription: 简单介绍hexo的用法. \ndate: 2018-09-28 20:58:27\ntags: Hexo\ncategories: Hexo\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-11-15T07:27:29.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjojssjyy0006olfccip9ha8s","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"内网穿透frp","description":"简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)","date":"2018-09-28T12:58:27.000Z","_content":"# 一、内网穿透原理\n简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：\n* 全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机\n* 限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包\n* 端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机\n* 对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透\n\n内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考 内网打洞、网络地址转换NAT原理。\n\n# 二、环境准备\n实际上根据以上 NAT 规则，基本上大部分家用设备和运营商上级路由等都在前三种规则之中，所以只需要借助成熟的内网穿透工具即可，以下为本次穿透环境\n\n* 最新版本 frp\n* 一台公网 VPS 服务器\n* 内网一台服务器，最好 Linux 系统\n\n# 三、服务端搭建\n服务器作为公网访问唯一的固定地址，即作为 server 端；内网客户端作为 client 端，会主动向 server 端创建连接，此时再从 server 端反向发送数据即可实现内网穿透\n\n## 3.1). 下载并解压frp\n可以查看[releases](https://github.com/fatedier/frp/releases)获取最新的版本,选好版本之后使用以下命令:\n\n```\nwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz\ntar -zxvf frp_0.21.0_linux_amd64.tar.gz\ncd frp_0.21.0_linux_amd64\n```\n\n## 3.2). 编辑frps.ini\n```\n[common]                                                                                                                                                                                                \n# frp 监听地址\nbind_addr = 0.0.0.0\nbind_port = 7000\n\n# 如果需要代理 web(http) 服务，则开启此端口\nvhost_http_port = 8080\nvhost_https_port = 4443\n\n# frp 控制面板\ndashboard_port = 7500\ndashboard_user = user\ndashboard_pwd = pwd\n\n# 默认日志输出位置(这里输出到标准输出)\nlog_file = /tmp/frps.log\n# 日志级别，支持: debug, info, warn, error\nlog_level = info\nlog_max_days = 3\n\n# 是否开启特权模式(特权模式下，客户端更改配置无需更新服务端)\nprivilege_mode = true\n# 授权 token 建议随机生成\nprivilege_token = cc23*********************d072734\n# 特权模式下允许分配的端口(避免端口滥用)\nprivilege_allow_ports = 4000-50000\n\n# 后端连接池最大连接数量\nmax_pool_count = 100\n\n# 口令超时时间\nauthentication_timeout = 900\n\n# 子域名(特权模式下将 *.xxxx.com 解析到公网服务器)\nsubdomain_host = xxxx.com\n```\n\n**其他具体配置说明请参考[frp README](https://github.com/fatedier/frp/blob/master/README_zh.md) 文档**\n\n## 3.3). 启动frp server\n设置完成后执行 ./frps -c frps.ini 启动即可\n\n**ps:当然也可以使用supervisor来管理**\n\n# 四、客户端配置\n客户端作为发起链接的主动方，只需要正确配置服务器地址，以及要映射客户端的哪些服务端口等即可\n\n## 4.1). 下载并解压frp\n```\nwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz\ntar -zxvf frp_0.21.0_linux_amd64.tar.gz\ncd frp_0.21.0_linux_amd64\n```\n\n## 4.2). 编辑frpc.ini\n\n```\n[common]\nserver_addr = 127.0.0.1\nserver_port = 7000\n# console or real logFile path like ./frpc.log\nlog_file = /tmp/frpc.log\n\n# debug, info, warn, error\nlog_level = debug\n\nlog_max_days = 3\n\n# 特权模式，要和服务器端的配置一致\nprivilege_token = cc23*********************d072734\n\n\n[gitlab]\ntype = http\nlocal_port = 8080\nsubdomain = gitlab  # 这样只要访问http://gitlab.xxxx.com:8080即可访问到该客户端的gitlab服务\nuse_gzip = true\n\n[gitlab_static_file]\ntype = tcp\nremote_port = 8082\nplugin = static_file\n# 要对外暴露的文件目录\nplugin_local_path = /opt/gitlab/embedded/service/gitlab-rails/public/assets/\n# 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径\nplugin_strip_prefix = assets\n#plugin_http_user = abc\n#plugin_http_passwd = abc\n\n[gitlab_ssh]\ntype = tcp \nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 8081\n```\n**其他具体配置说明请参考[frp README](https://github.com/fatedier/frp/blob/master/README_zh.md) 文档**\n\n## 4.3). 启动frp client\n设置完成后执行 ./frpc -c frpc.ini 启动即可\n\n**ps:当然也可以使用supervisor来管理**\n\n# 五、测试\n服务端和客户端同时开启完成后，即可访问 http://127.0.0.1:7500 进入 frp 控制面板，如下\n![](/images/1046366-20180927105622574-1652030646.png)\n![](/images/1046366-20180927105631267-34167117.png)\n此时通过 ssh root@127.0.0.1 -p 8081 即可ssh到gitlab，通过访问http://gitlab.xxxx.com:8080 即可访问gitlab服务\n\n# 六、GitLab通过frp代理\n通过上述配置，确实可以通过 http://gitlab.xxxx.com:8080 访问gitlab服务,但是你会发现缺少静态文件,因为gitlab的静态文件是nginx代理的，走的tcp协议,需要一种解决方案。\n\n## 方案一、使用frp的static_file的插件\n虽然可以成功，通过 http://127.0.0.1:8082 即可访问gitlab的静态文件，并且也可以通过nginx反向代理到gitlab.xxxx.com这个域名上，但是速度会很慢很慢,nginx配置如下:\n\n```\nserver {                                                                                                                                                                                                    \n    listen  80; \n    server_name  gitlab.xxxx.com;\n    location / { \n        proxy_pass http://gitlab.xxxx.com:8080;\n    }   \n    location /assets {\n        proxy_pass http://127.0.0.1:8082;\n    }   \n}\n```\n\n## 方案二、将gitlab静态文件移至服务器上，用nginx代理\ngitlab静态文件在如下位置`/opt/gitlab/embedded/service/gitlab-rails/public/assets/`放至服务器，并配置nginx如下:\n```\nserver {                                                                                                                                                                                                    \n    listen  80;\n    server_name  gitlab.xxxx.com;\n    location / {\n        proxy_pass http://gitlab.xxxx.com:8080;\n    }\n    location /assets {\n        alias /webapps/gitlab/public/assets;\n    }\n}\n```\n这样即可通过 http://gitlab.xxxx.com 正常访问内网的gitlab了\n\n但是这样还没结束，你会发现外网通过git clone http://gitlab.xxxx.com/zhuqian/licaishi.git ,根本没法正常克隆仓库，那有啥用啊，别急，咋们还可以用ssh方式啊。\n\n上面我们已经配置gitlab的22端口映射到服务器的8081端口了，所以可以这样克隆:\n\n```\ngit clone ssh://git@127.0.0.1:8081/zhuqian/licaishi.git\n# 或者\ngit clone ssh://git@gitlab.xxxx.com:8081/zhuqian/licaishi.git\n```\n\n对于pip install的话，可以这样：\n\n```\npip install git+ssh://git@127.0.0.1:8081/zhuqian/algorithm.git\n# 或者\npip install git+ssh://git@gitlab.xxxx.com:8081/zhuqian/algorithm.git\n```\n\n你以为就这样完了，还没有，我们想要直接能在gitlab项目首页直接能够显示git访问方法，效果如下:\n![](/images/1046366-20180927105727421-1721871308.png)\n\n要实现此效果，只需配置下`/etc/gitlab/gitlab.rb`即可：\n\n```\n...\nexternal_url 'http://gitlab.xxxx.com'\n...\n\ngitlab_rails['gitlab_shell_ssh_port'] = 8081\n...\n```\n>> 另外需要注意下`nginx['listen_addresses'] = ['192.168.10.60']`，需要对应到本地的ip地址\n\n配置完之后:\n\n```\ngitlab-ctl reconfigure\n```\n然后通过域名访问gitlab即可实现上述效果了，只不过http方式目前还无法解决。\n\n# 七、由mtu引起的无法访问的问题\n如果frp的admin界面一切正常，但是就是无法获取数据\n\n![](/images/1046366-20180927105741148-1074788234.png)\n\n那么极有可能是你本地的网络最大分片小于服务器的最大分片，导致数据无法发送出去,解决办法是减小服务器的mtu:\n\n```\nsudo ifconfig eth0 mtu 1000 up\n```\n\n其他修改mtu的方式请自行google。\n\n# 八、References:\n\n1. [利用 frp 进行内网穿透](https://mritd.me/2017/01/21/use-frp-for-internal-network-wear/)\n","source":"_posts/内网穿透frp.md","raw":"---\ntitle: 内网穿透frp\ndescription: 简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)\ndate: 2018-09-28 20:58:27\ntags: \ncategories: 内网穿透\n---\n# 一、内网穿透原理\n简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：\n* 全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机\n* 限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包\n* 端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机\n* 对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透\n\n内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考 内网打洞、网络地址转换NAT原理。\n\n# 二、环境准备\n实际上根据以上 NAT 规则，基本上大部分家用设备和运营商上级路由等都在前三种规则之中，所以只需要借助成熟的内网穿透工具即可，以下为本次穿透环境\n\n* 最新版本 frp\n* 一台公网 VPS 服务器\n* 内网一台服务器，最好 Linux 系统\n\n# 三、服务端搭建\n服务器作为公网访问唯一的固定地址，即作为 server 端；内网客户端作为 client 端，会主动向 server 端创建连接，此时再从 server 端反向发送数据即可实现内网穿透\n\n## 3.1). 下载并解压frp\n可以查看[releases](https://github.com/fatedier/frp/releases)获取最新的版本,选好版本之后使用以下命令:\n\n```\nwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz\ntar -zxvf frp_0.21.0_linux_amd64.tar.gz\ncd frp_0.21.0_linux_amd64\n```\n\n## 3.2). 编辑frps.ini\n```\n[common]                                                                                                                                                                                                \n# frp 监听地址\nbind_addr = 0.0.0.0\nbind_port = 7000\n\n# 如果需要代理 web(http) 服务，则开启此端口\nvhost_http_port = 8080\nvhost_https_port = 4443\n\n# frp 控制面板\ndashboard_port = 7500\ndashboard_user = user\ndashboard_pwd = pwd\n\n# 默认日志输出位置(这里输出到标准输出)\nlog_file = /tmp/frps.log\n# 日志级别，支持: debug, info, warn, error\nlog_level = info\nlog_max_days = 3\n\n# 是否开启特权模式(特权模式下，客户端更改配置无需更新服务端)\nprivilege_mode = true\n# 授权 token 建议随机生成\nprivilege_token = cc23*********************d072734\n# 特权模式下允许分配的端口(避免端口滥用)\nprivilege_allow_ports = 4000-50000\n\n# 后端连接池最大连接数量\nmax_pool_count = 100\n\n# 口令超时时间\nauthentication_timeout = 900\n\n# 子域名(特权模式下将 *.xxxx.com 解析到公网服务器)\nsubdomain_host = xxxx.com\n```\n\n**其他具体配置说明请参考[frp README](https://github.com/fatedier/frp/blob/master/README_zh.md) 文档**\n\n## 3.3). 启动frp server\n设置完成后执行 ./frps -c frps.ini 启动即可\n\n**ps:当然也可以使用supervisor来管理**\n\n# 四、客户端配置\n客户端作为发起链接的主动方，只需要正确配置服务器地址，以及要映射客户端的哪些服务端口等即可\n\n## 4.1). 下载并解压frp\n```\nwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz\ntar -zxvf frp_0.21.0_linux_amd64.tar.gz\ncd frp_0.21.0_linux_amd64\n```\n\n## 4.2). 编辑frpc.ini\n\n```\n[common]\nserver_addr = 127.0.0.1\nserver_port = 7000\n# console or real logFile path like ./frpc.log\nlog_file = /tmp/frpc.log\n\n# debug, info, warn, error\nlog_level = debug\n\nlog_max_days = 3\n\n# 特权模式，要和服务器端的配置一致\nprivilege_token = cc23*********************d072734\n\n\n[gitlab]\ntype = http\nlocal_port = 8080\nsubdomain = gitlab  # 这样只要访问http://gitlab.xxxx.com:8080即可访问到该客户端的gitlab服务\nuse_gzip = true\n\n[gitlab_static_file]\ntype = tcp\nremote_port = 8082\nplugin = static_file\n# 要对外暴露的文件目录\nplugin_local_path = /opt/gitlab/embedded/service/gitlab-rails/public/assets/\n# 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径\nplugin_strip_prefix = assets\n#plugin_http_user = abc\n#plugin_http_passwd = abc\n\n[gitlab_ssh]\ntype = tcp \nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 8081\n```\n**其他具体配置说明请参考[frp README](https://github.com/fatedier/frp/blob/master/README_zh.md) 文档**\n\n## 4.3). 启动frp client\n设置完成后执行 ./frpc -c frpc.ini 启动即可\n\n**ps:当然也可以使用supervisor来管理**\n\n# 五、测试\n服务端和客户端同时开启完成后，即可访问 http://127.0.0.1:7500 进入 frp 控制面板，如下\n![](/images/1046366-20180927105622574-1652030646.png)\n![](/images/1046366-20180927105631267-34167117.png)\n此时通过 ssh root@127.0.0.1 -p 8081 即可ssh到gitlab，通过访问http://gitlab.xxxx.com:8080 即可访问gitlab服务\n\n# 六、GitLab通过frp代理\n通过上述配置，确实可以通过 http://gitlab.xxxx.com:8080 访问gitlab服务,但是你会发现缺少静态文件,因为gitlab的静态文件是nginx代理的，走的tcp协议,需要一种解决方案。\n\n## 方案一、使用frp的static_file的插件\n虽然可以成功，通过 http://127.0.0.1:8082 即可访问gitlab的静态文件，并且也可以通过nginx反向代理到gitlab.xxxx.com这个域名上，但是速度会很慢很慢,nginx配置如下:\n\n```\nserver {                                                                                                                                                                                                    \n    listen  80; \n    server_name  gitlab.xxxx.com;\n    location / { \n        proxy_pass http://gitlab.xxxx.com:8080;\n    }   \n    location /assets {\n        proxy_pass http://127.0.0.1:8082;\n    }   \n}\n```\n\n## 方案二、将gitlab静态文件移至服务器上，用nginx代理\ngitlab静态文件在如下位置`/opt/gitlab/embedded/service/gitlab-rails/public/assets/`放至服务器，并配置nginx如下:\n```\nserver {                                                                                                                                                                                                    \n    listen  80;\n    server_name  gitlab.xxxx.com;\n    location / {\n        proxy_pass http://gitlab.xxxx.com:8080;\n    }\n    location /assets {\n        alias /webapps/gitlab/public/assets;\n    }\n}\n```\n这样即可通过 http://gitlab.xxxx.com 正常访问内网的gitlab了\n\n但是这样还没结束，你会发现外网通过git clone http://gitlab.xxxx.com/zhuqian/licaishi.git ,根本没法正常克隆仓库，那有啥用啊，别急，咋们还可以用ssh方式啊。\n\n上面我们已经配置gitlab的22端口映射到服务器的8081端口了，所以可以这样克隆:\n\n```\ngit clone ssh://git@127.0.0.1:8081/zhuqian/licaishi.git\n# 或者\ngit clone ssh://git@gitlab.xxxx.com:8081/zhuqian/licaishi.git\n```\n\n对于pip install的话，可以这样：\n\n```\npip install git+ssh://git@127.0.0.1:8081/zhuqian/algorithm.git\n# 或者\npip install git+ssh://git@gitlab.xxxx.com:8081/zhuqian/algorithm.git\n```\n\n你以为就这样完了，还没有，我们想要直接能在gitlab项目首页直接能够显示git访问方法，效果如下:\n![](/images/1046366-20180927105727421-1721871308.png)\n\n要实现此效果，只需配置下`/etc/gitlab/gitlab.rb`即可：\n\n```\n...\nexternal_url 'http://gitlab.xxxx.com'\n...\n\ngitlab_rails['gitlab_shell_ssh_port'] = 8081\n...\n```\n>> 另外需要注意下`nginx['listen_addresses'] = ['192.168.10.60']`，需要对应到本地的ip地址\n\n配置完之后:\n\n```\ngitlab-ctl reconfigure\n```\n然后通过域名访问gitlab即可实现上述效果了，只不过http方式目前还无法解决。\n\n# 七、由mtu引起的无法访问的问题\n如果frp的admin界面一切正常，但是就是无法获取数据\n\n![](/images/1046366-20180927105741148-1074788234.png)\n\n那么极有可能是你本地的网络最大分片小于服务器的最大分片，导致数据无法发送出去,解决办法是减小服务器的mtu:\n\n```\nsudo ifconfig eth0 mtu 1000 up\n```\n\n其他修改mtu的方式请自行google。\n\n# 八、References:\n\n1. [利用 frp 进行内网穿透](https://mritd.me/2017/01/21/use-frp-for-internal-network-wear/)\n","slug":"内网穿透frp","published":1,"updated":"2018-11-16T08:08:06.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjojssjz10008olfcrk5r65a8","content":"<h1 id=\"一、内网穿透原理\"><a href=\"#一、内网穿透原理\" class=\"headerlink\" title=\"一、内网穿透原理\"></a>一、内网穿透原理</h1><p>简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：</p>\n<ul>\n<li>全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机</li>\n<li>限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包</li>\n<li>端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机</li>\n<li>对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透</li>\n</ul>\n<p>内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考 内网打洞、网络地址转换NAT原理。</p>\n<h1 id=\"二、环境准备\"><a href=\"#二、环境准备\" class=\"headerlink\" title=\"二、环境准备\"></a>二、环境准备</h1><p>实际上根据以上 NAT 规则，基本上大部分家用设备和运营商上级路由等都在前三种规则之中，所以只需要借助成熟的内网穿透工具即可，以下为本次穿透环境</p>\n<ul>\n<li>最新版本 frp</li>\n<li>一台公网 VPS 服务器</li>\n<li>内网一台服务器，最好 Linux 系统</li>\n</ul>\n<h1 id=\"三、服务端搭建\"><a href=\"#三、服务端搭建\" class=\"headerlink\" title=\"三、服务端搭建\"></a>三、服务端搭建</h1><p>服务器作为公网访问唯一的固定地址，即作为 server 端；内网客户端作为 client 端，会主动向 server 端创建连接，此时再从 server 端反向发送数据即可实现内网穿透</p>\n<h2 id=\"3-1-下载并解压frp\"><a href=\"#3-1-下载并解压frp\" class=\"headerlink\" title=\"3.1). 下载并解压frp\"></a>3.1). 下载并解压frp</h2><p>可以查看<a href=\"https://github.com/fatedier/frp/releases\" target=\"_blank\" rel=\"noopener\">releases</a>获取最新的版本,选好版本之后使用以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar -zxvf frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">cd frp_0.21.0_linux_amd64</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-编辑frps-ini\"><a href=\"#3-2-编辑frps-ini\" class=\"headerlink\" title=\"3.2). 编辑frps.ini\"></a>3.2). 编辑frps.ini</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]                                                                                                                                                                                                </span><br><span class=\"line\"># frp 监听地址</span><br><span class=\"line\">bind_addr = 0.0.0.0</span><br><span class=\"line\">bind_port = 7000</span><br><span class=\"line\"></span><br><span class=\"line\"># 如果需要代理 web(http) 服务，则开启此端口</span><br><span class=\"line\">vhost_http_port = 8080</span><br><span class=\"line\">vhost_https_port = 4443</span><br><span class=\"line\"></span><br><span class=\"line\"># frp 控制面板</span><br><span class=\"line\">dashboard_port = 7500</span><br><span class=\"line\">dashboard_user = user</span><br><span class=\"line\">dashboard_pwd = pwd</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认日志输出位置(这里输出到标准输出)</span><br><span class=\"line\">log_file = /tmp/frps.log</span><br><span class=\"line\"># 日志级别，支持: debug, info, warn, error</span><br><span class=\"line\">log_level = info</span><br><span class=\"line\">log_max_days = 3</span><br><span class=\"line\"></span><br><span class=\"line\"># 是否开启特权模式(特权模式下，客户端更改配置无需更新服务端)</span><br><span class=\"line\">privilege_mode = true</span><br><span class=\"line\"># 授权 token 建议随机生成</span><br><span class=\"line\">privilege_token = cc23*********************d072734</span><br><span class=\"line\"># 特权模式下允许分配的端口(避免端口滥用)</span><br><span class=\"line\">privilege_allow_ports = 4000-50000</span><br><span class=\"line\"></span><br><span class=\"line\"># 后端连接池最大连接数量</span><br><span class=\"line\">max_pool_count = 100</span><br><span class=\"line\"></span><br><span class=\"line\"># 口令超时时间</span><br><span class=\"line\">authentication_timeout = 900</span><br><span class=\"line\"></span><br><span class=\"line\"># 子域名(特权模式下将 *.xxxx.com 解析到公网服务器)</span><br><span class=\"line\">subdomain_host = xxxx.com</span><br></pre></td></tr></table></figure>\n<p><strong>其他具体配置说明请参考<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\" rel=\"noopener\">frp README</a> 文档</strong></p>\n<h2 id=\"3-3-启动frp-server\"><a href=\"#3-3-启动frp-server\" class=\"headerlink\" title=\"3.3). 启动frp server\"></a>3.3). 启动frp server</h2><p>设置完成后执行 ./frps -c frps.ini 启动即可</p>\n<p><strong>ps:当然也可以使用supervisor来管理</strong></p>\n<h1 id=\"四、客户端配置\"><a href=\"#四、客户端配置\" class=\"headerlink\" title=\"四、客户端配置\"></a>四、客户端配置</h1><p>客户端作为发起链接的主动方，只需要正确配置服务器地址，以及要映射客户端的哪些服务端口等即可</p>\n<h2 id=\"4-1-下载并解压frp\"><a href=\"#4-1-下载并解压frp\" class=\"headerlink\" title=\"4.1). 下载并解压frp\"></a>4.1). 下载并解压frp</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar -zxvf frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">cd frp_0.21.0_linux_amd64</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-2-编辑frpc-ini\"><a href=\"#4-2-编辑frpc-ini\" class=\"headerlink\" title=\"4.2). 编辑frpc.ini\"></a>4.2). 编辑frpc.ini</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = 127.0.0.1</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\"># console or real logFile path like ./frpc.log</span><br><span class=\"line\">log_file = /tmp/frpc.log</span><br><span class=\"line\"></span><br><span class=\"line\"># debug, info, warn, error</span><br><span class=\"line\">log_level = debug</span><br><span class=\"line\"></span><br><span class=\"line\">log_max_days = 3</span><br><span class=\"line\"></span><br><span class=\"line\"># 特权模式，要和服务器端的配置一致</span><br><span class=\"line\">privilege_token = cc23*********************d072734</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab]</span><br><span class=\"line\">type = http</span><br><span class=\"line\">local_port = 8080</span><br><span class=\"line\">subdomain = gitlab  # 这样只要访问http://gitlab.xxxx.com:8080即可访问到该客户端的gitlab服务</span><br><span class=\"line\">use_gzip = true</span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab_static_file]</span><br><span class=\"line\">type = tcp</span><br><span class=\"line\">remote_port = 8082</span><br><span class=\"line\">plugin = static_file</span><br><span class=\"line\"># 要对外暴露的文件目录</span><br><span class=\"line\">plugin_local_path = /opt/gitlab/embedded/service/gitlab-rails/public/assets/</span><br><span class=\"line\"># 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径</span><br><span class=\"line\">plugin_strip_prefix = assets</span><br><span class=\"line\">#plugin_http_user = abc</span><br><span class=\"line\">#plugin_http_passwd = abc</span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab_ssh]</span><br><span class=\"line\">type = tcp </span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">local_port = 22</span><br><span class=\"line\">remote_port = 8081</span><br></pre></td></tr></table></figure>\n<p><strong>其他具体配置说明请参考<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\" rel=\"noopener\">frp README</a> 文档</strong></p>\n<h2 id=\"4-3-启动frp-client\"><a href=\"#4-3-启动frp-client\" class=\"headerlink\" title=\"4.3). 启动frp client\"></a>4.3). 启动frp client</h2><p>设置完成后执行 ./frpc -c frpc.ini 启动即可</p>\n<p><strong>ps:当然也可以使用supervisor来管理</strong></p>\n<h1 id=\"五、测试\"><a href=\"#五、测试\" class=\"headerlink\" title=\"五、测试\"></a>五、测试</h1><p>服务端和客户端同时开启完成后，即可访问 <a href=\"http://127.0.0.1:7500\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:7500</a> 进入 frp 控制面板，如下<br><img src=\"/images/1046366-20180927105622574-1652030646.png\" alt=\"\"><br><img src=\"/images/1046366-20180927105631267-34167117.png\" alt=\"\"><br>此时通过 ssh <a href=\"mailto:root@127.0.0.1\" target=\"_blank\" rel=\"noopener\">root@127.0.0.1</a> -p 8081 即可ssh到gitlab，通过访问<a href=\"http://gitlab.xxxx.com:8080\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com:8080</a> 即可访问gitlab服务</p>\n<h1 id=\"六、GitLab通过frp代理\"><a href=\"#六、GitLab通过frp代理\" class=\"headerlink\" title=\"六、GitLab通过frp代理\"></a>六、GitLab通过frp代理</h1><p>通过上述配置，确实可以通过 <a href=\"http://gitlab.xxxx.com:8080\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com:8080</a> 访问gitlab服务,但是你会发现缺少静态文件,因为gitlab的静态文件是nginx代理的，走的tcp协议,需要一种解决方案。</p>\n<h2 id=\"方案一、使用frp的static-file的插件\"><a href=\"#方案一、使用frp的static-file的插件\" class=\"headerlink\" title=\"方案一、使用frp的static_file的插件\"></a>方案一、使用frp的static_file的插件</h2><p>虽然可以成功，通过 <a href=\"http://127.0.0.1:8082\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8082</a> 即可访问gitlab的静态文件，并且也可以通过nginx反向代理到gitlab.xxxx.com这个域名上，但是速度会很慢很慢,nginx配置如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                                                                                                                                                                    </span><br><span class=\"line\">    listen  80; </span><br><span class=\"line\">    server_name  gitlab.xxxx.com;</span><br><span class=\"line\">    location / &#123; </span><br><span class=\"line\">        proxy_pass http://gitlab.xxxx.com:8080;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    location /assets &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:8082;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方案二、将gitlab静态文件移至服务器上，用nginx代理\"><a href=\"#方案二、将gitlab静态文件移至服务器上，用nginx代理\" class=\"headerlink\" title=\"方案二、将gitlab静态文件移至服务器上，用nginx代理\"></a>方案二、将gitlab静态文件移至服务器上，用nginx代理</h2><p>gitlab静态文件在如下位置<code>/opt/gitlab/embedded/service/gitlab-rails/public/assets/</code>放至服务器，并配置nginx如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                                                                                                                                                                    </span><br><span class=\"line\">    listen  80;</span><br><span class=\"line\">    server_name  gitlab.xxxx.com;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://gitlab.xxxx.com:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /assets &#123;</span><br><span class=\"line\">        alias /webapps/gitlab/public/assets;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样即可通过 <a href=\"http://gitlab.xxxx.com\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com</a> 正常访问内网的gitlab了</p>\n<p>但是这样还没结束，你会发现外网通过git clone <a href=\"http://gitlab.xxxx.com/zhuqian/licaishi.git\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com/zhuqian/licaishi.git</a> ,根本没法正常克隆仓库，那有啥用啊，别急，咋们还可以用ssh方式啊。</p>\n<p>上面我们已经配置gitlab的22端口映射到服务器的8081端口了，所以可以这样克隆:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone ssh://git@127.0.0.1:8081/zhuqian/licaishi.git</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">git clone ssh://git@gitlab.xxxx.com:8081/zhuqian/licaishi.git</span><br></pre></td></tr></table></figure>\n<p>对于pip install的话，可以这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install git+ssh://git@127.0.0.1:8081/zhuqian/algorithm.git</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">pip install git+ssh://git@gitlab.xxxx.com:8081/zhuqian/algorithm.git</span><br></pre></td></tr></table></figure>\n<p>你以为就这样完了，还没有，我们想要直接能在gitlab项目首页直接能够显示git访问方法，效果如下:<br><img src=\"/images/1046366-20180927105727421-1721871308.png\" alt=\"\"></p>\n<p>要实现此效果，只需配置下<code>/etc/gitlab/gitlab.rb</code>即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">external_url &apos;http://gitlab.xxxx.com&apos;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">gitlab_rails[&apos;gitlab_shell_ssh_port&apos;] = 8081</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<blockquote>\n<blockquote>\n<p>另外需要注意下<code>nginx[&#39;listen_addresses&#39;] = [&#39;192.168.10.60&#39;]</code>，需要对应到本地的ip地址</p>\n</blockquote>\n</blockquote>\n<p>配置完之后:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>\n<p>然后通过域名访问gitlab即可实现上述效果了，只不过http方式目前还无法解决。</p>\n<h1 id=\"七、由mtu引起的无法访问的问题\"><a href=\"#七、由mtu引起的无法访问的问题\" class=\"headerlink\" title=\"七、由mtu引起的无法访问的问题\"></a>七、由mtu引起的无法访问的问题</h1><p>如果frp的admin界面一切正常，但是就是无法获取数据</p>\n<p><img src=\"/images/1046366-20180927105741148-1074788234.png\" alt=\"\"></p>\n<p>那么极有可能是你本地的网络最大分片小于服务器的最大分片，导致数据无法发送出去,解决办法是减小服务器的mtu:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ifconfig eth0 mtu 1000 up</span><br></pre></td></tr></table></figure>\n<p>其他修改mtu的方式请自行google。</p>\n<h1 id=\"八、References\"><a href=\"#八、References\" class=\"headerlink\" title=\"八、References:\"></a>八、References:</h1><ol>\n<li><a href=\"https://mritd.me/2017/01/21/use-frp-for-internal-network-wear/\" target=\"_blank\" rel=\"noopener\">利用 frp 进行内网穿透</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、内网穿透原理\"><a href=\"#一、内网穿透原理\" class=\"headerlink\" title=\"一、内网穿透原理\"></a>一、内网穿透原理</h1><p>简单地说，内网穿透依赖于 NAT 原理，根据 NAT 设备不同大致可分为以下 4 大类(前3种NAT类型可统称为cone类型)：</p>\n<ul>\n<li>全克隆(Full Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口上，任何一个外部主机均可通过该映射反向发送 IP 包到该内部主机</li>\n<li>限制性克隆(Restricted Cone)：NAT 把所有来自相同内部 IP 地址和端口的请求映射到相同的外部 IP 地址和端口；但是，只有当内部主机先给 IP 地址为 X 的外部主机发送 IP 包时，该外部主机才能向该内部主机发送 IP 包</li>\n<li>端口限制性克隆(Port Restricted Cone)：端口限制性克隆与限制性克隆类似，只是多了端口号的限制，即只有内部主机先向 IP 地址为 X，端口号为 P 的外部主机发送1个 IP 包,该外部主机才能够把源端口号为 P 的 IP 包发送给该内部主机</li>\n<li>对称式NAT(Symmetric NAT)：这种类型的 NAT 与上述3种类型的不同，在于当同一内部主机使用相同的端口与不同地址的外部主机进行通信时， NAT 对该内部主机的映射会有所不同；对称式 NAT 不保证所有会话中的私有地址和公开 IP 之间绑定的一致性；相反，它为每个新的会话分配一个新的端口号；导致此种 NAT 根本没法穿透</li>\n</ul>\n<p>内网穿透的作用就是利用以上规则，创建一条从外部服务器到内部设备的 “隧道”，具体的 NAT 原理等可参考 内网打洞、网络地址转换NAT原理。</p>\n<h1 id=\"二、环境准备\"><a href=\"#二、环境准备\" class=\"headerlink\" title=\"二、环境准备\"></a>二、环境准备</h1><p>实际上根据以上 NAT 规则，基本上大部分家用设备和运营商上级路由等都在前三种规则之中，所以只需要借助成熟的内网穿透工具即可，以下为本次穿透环境</p>\n<ul>\n<li>最新版本 frp</li>\n<li>一台公网 VPS 服务器</li>\n<li>内网一台服务器，最好 Linux 系统</li>\n</ul>\n<h1 id=\"三、服务端搭建\"><a href=\"#三、服务端搭建\" class=\"headerlink\" title=\"三、服务端搭建\"></a>三、服务端搭建</h1><p>服务器作为公网访问唯一的固定地址，即作为 server 端；内网客户端作为 client 端，会主动向 server 端创建连接，此时再从 server 端反向发送数据即可实现内网穿透</p>\n<h2 id=\"3-1-下载并解压frp\"><a href=\"#3-1-下载并解压frp\" class=\"headerlink\" title=\"3.1). 下载并解压frp\"></a>3.1). 下载并解压frp</h2><p>可以查看<a href=\"https://github.com/fatedier/frp/releases\" target=\"_blank\" rel=\"noopener\">releases</a>获取最新的版本,选好版本之后使用以下命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar -zxvf frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">cd frp_0.21.0_linux_amd64</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-2-编辑frps-ini\"><a href=\"#3-2-编辑frps-ini\" class=\"headerlink\" title=\"3.2). 编辑frps.ini\"></a>3.2). 编辑frps.ini</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]                                                                                                                                                                                                </span><br><span class=\"line\"># frp 监听地址</span><br><span class=\"line\">bind_addr = 0.0.0.0</span><br><span class=\"line\">bind_port = 7000</span><br><span class=\"line\"></span><br><span class=\"line\"># 如果需要代理 web(http) 服务，则开启此端口</span><br><span class=\"line\">vhost_http_port = 8080</span><br><span class=\"line\">vhost_https_port = 4443</span><br><span class=\"line\"></span><br><span class=\"line\"># frp 控制面板</span><br><span class=\"line\">dashboard_port = 7500</span><br><span class=\"line\">dashboard_user = user</span><br><span class=\"line\">dashboard_pwd = pwd</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认日志输出位置(这里输出到标准输出)</span><br><span class=\"line\">log_file = /tmp/frps.log</span><br><span class=\"line\"># 日志级别，支持: debug, info, warn, error</span><br><span class=\"line\">log_level = info</span><br><span class=\"line\">log_max_days = 3</span><br><span class=\"line\"></span><br><span class=\"line\"># 是否开启特权模式(特权模式下，客户端更改配置无需更新服务端)</span><br><span class=\"line\">privilege_mode = true</span><br><span class=\"line\"># 授权 token 建议随机生成</span><br><span class=\"line\">privilege_token = cc23*********************d072734</span><br><span class=\"line\"># 特权模式下允许分配的端口(避免端口滥用)</span><br><span class=\"line\">privilege_allow_ports = 4000-50000</span><br><span class=\"line\"></span><br><span class=\"line\"># 后端连接池最大连接数量</span><br><span class=\"line\">max_pool_count = 100</span><br><span class=\"line\"></span><br><span class=\"line\"># 口令超时时间</span><br><span class=\"line\">authentication_timeout = 900</span><br><span class=\"line\"></span><br><span class=\"line\"># 子域名(特权模式下将 *.xxxx.com 解析到公网服务器)</span><br><span class=\"line\">subdomain_host = xxxx.com</span><br></pre></td></tr></table></figure>\n<p><strong>其他具体配置说明请参考<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\" rel=\"noopener\">frp README</a> 文档</strong></p>\n<h2 id=\"3-3-启动frp-server\"><a href=\"#3-3-启动frp-server\" class=\"headerlink\" title=\"3.3). 启动frp server\"></a>3.3). 启动frp server</h2><p>设置完成后执行 ./frps -c frps.ini 启动即可</p>\n<p><strong>ps:当然也可以使用supervisor来管理</strong></p>\n<h1 id=\"四、客户端配置\"><a href=\"#四、客户端配置\" class=\"headerlink\" title=\"四、客户端配置\"></a>四、客户端配置</h1><p>客户端作为发起链接的主动方，只需要正确配置服务器地址，以及要映射客户端的哪些服务端口等即可</p>\n<h2 id=\"4-1-下载并解压frp\"><a href=\"#4-1-下载并解压frp\" class=\"headerlink\" title=\"4.1). 下载并解压frp\"></a>4.1). 下载并解压frp</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">tar -zxvf frp_0.21.0_linux_amd64.tar.gz</span><br><span class=\"line\">cd frp_0.21.0_linux_amd64</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-2-编辑frpc-ini\"><a href=\"#4-2-编辑frpc-ini\" class=\"headerlink\" title=\"4.2). 编辑frpc.ini\"></a>4.2). 编辑frpc.ini</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = 127.0.0.1</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\"># console or real logFile path like ./frpc.log</span><br><span class=\"line\">log_file = /tmp/frpc.log</span><br><span class=\"line\"></span><br><span class=\"line\"># debug, info, warn, error</span><br><span class=\"line\">log_level = debug</span><br><span class=\"line\"></span><br><span class=\"line\">log_max_days = 3</span><br><span class=\"line\"></span><br><span class=\"line\"># 特权模式，要和服务器端的配置一致</span><br><span class=\"line\">privilege_token = cc23*********************d072734</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab]</span><br><span class=\"line\">type = http</span><br><span class=\"line\">local_port = 8080</span><br><span class=\"line\">subdomain = gitlab  # 这样只要访问http://gitlab.xxxx.com:8080即可访问到该客户端的gitlab服务</span><br><span class=\"line\">use_gzip = true</span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab_static_file]</span><br><span class=\"line\">type = tcp</span><br><span class=\"line\">remote_port = 8082</span><br><span class=\"line\">plugin = static_file</span><br><span class=\"line\"># 要对外暴露的文件目录</span><br><span class=\"line\">plugin_local_path = /opt/gitlab/embedded/service/gitlab-rails/public/assets/</span><br><span class=\"line\"># 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径</span><br><span class=\"line\">plugin_strip_prefix = assets</span><br><span class=\"line\">#plugin_http_user = abc</span><br><span class=\"line\">#plugin_http_passwd = abc</span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab_ssh]</span><br><span class=\"line\">type = tcp </span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">local_port = 22</span><br><span class=\"line\">remote_port = 8081</span><br></pre></td></tr></table></figure>\n<p><strong>其他具体配置说明请参考<a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\" target=\"_blank\" rel=\"noopener\">frp README</a> 文档</strong></p>\n<h2 id=\"4-3-启动frp-client\"><a href=\"#4-3-启动frp-client\" class=\"headerlink\" title=\"4.3). 启动frp client\"></a>4.3). 启动frp client</h2><p>设置完成后执行 ./frpc -c frpc.ini 启动即可</p>\n<p><strong>ps:当然也可以使用supervisor来管理</strong></p>\n<h1 id=\"五、测试\"><a href=\"#五、测试\" class=\"headerlink\" title=\"五、测试\"></a>五、测试</h1><p>服务端和客户端同时开启完成后，即可访问 <a href=\"http://127.0.0.1:7500\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:7500</a> 进入 frp 控制面板，如下<br><img src=\"/images/1046366-20180927105622574-1652030646.png\" alt=\"\"><br><img src=\"/images/1046366-20180927105631267-34167117.png\" alt=\"\"><br>此时通过 ssh <a href=\"mailto:root@127.0.0.1\" target=\"_blank\" rel=\"noopener\">root@127.0.0.1</a> -p 8081 即可ssh到gitlab，通过访问<a href=\"http://gitlab.xxxx.com:8080\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com:8080</a> 即可访问gitlab服务</p>\n<h1 id=\"六、GitLab通过frp代理\"><a href=\"#六、GitLab通过frp代理\" class=\"headerlink\" title=\"六、GitLab通过frp代理\"></a>六、GitLab通过frp代理</h1><p>通过上述配置，确实可以通过 <a href=\"http://gitlab.xxxx.com:8080\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com:8080</a> 访问gitlab服务,但是你会发现缺少静态文件,因为gitlab的静态文件是nginx代理的，走的tcp协议,需要一种解决方案。</p>\n<h2 id=\"方案一、使用frp的static-file的插件\"><a href=\"#方案一、使用frp的static-file的插件\" class=\"headerlink\" title=\"方案一、使用frp的static_file的插件\"></a>方案一、使用frp的static_file的插件</h2><p>虽然可以成功，通过 <a href=\"http://127.0.0.1:8082\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8082</a> 即可访问gitlab的静态文件，并且也可以通过nginx反向代理到gitlab.xxxx.com这个域名上，但是速度会很慢很慢,nginx配置如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                                                                                                                                                                    </span><br><span class=\"line\">    listen  80; </span><br><span class=\"line\">    server_name  gitlab.xxxx.com;</span><br><span class=\"line\">    location / &#123; </span><br><span class=\"line\">        proxy_pass http://gitlab.xxxx.com:8080;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    location /assets &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:8082;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方案二、将gitlab静态文件移至服务器上，用nginx代理\"><a href=\"#方案二、将gitlab静态文件移至服务器上，用nginx代理\" class=\"headerlink\" title=\"方案二、将gitlab静态文件移至服务器上，用nginx代理\"></a>方案二、将gitlab静态文件移至服务器上，用nginx代理</h2><p>gitlab静态文件在如下位置<code>/opt/gitlab/embedded/service/gitlab-rails/public/assets/</code>放至服务器，并配置nginx如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                                                                                                                                                                    </span><br><span class=\"line\">    listen  80;</span><br><span class=\"line\">    server_name  gitlab.xxxx.com;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://gitlab.xxxx.com:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /assets &#123;</span><br><span class=\"line\">        alias /webapps/gitlab/public/assets;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样即可通过 <a href=\"http://gitlab.xxxx.com\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com</a> 正常访问内网的gitlab了</p>\n<p>但是这样还没结束，你会发现外网通过git clone <a href=\"http://gitlab.xxxx.com/zhuqian/licaishi.git\" target=\"_blank\" rel=\"noopener\">http://gitlab.xxxx.com/zhuqian/licaishi.git</a> ,根本没法正常克隆仓库，那有啥用啊，别急，咋们还可以用ssh方式啊。</p>\n<p>上面我们已经配置gitlab的22端口映射到服务器的8081端口了，所以可以这样克隆:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone ssh://git@127.0.0.1:8081/zhuqian/licaishi.git</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">git clone ssh://git@gitlab.xxxx.com:8081/zhuqian/licaishi.git</span><br></pre></td></tr></table></figure>\n<p>对于pip install的话，可以这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install git+ssh://git@127.0.0.1:8081/zhuqian/algorithm.git</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">pip install git+ssh://git@gitlab.xxxx.com:8081/zhuqian/algorithm.git</span><br></pre></td></tr></table></figure>\n<p>你以为就这样完了，还没有，我们想要直接能在gitlab项目首页直接能够显示git访问方法，效果如下:<br><img src=\"/images/1046366-20180927105727421-1721871308.png\" alt=\"\"></p>\n<p>要实现此效果，只需配置下<code>/etc/gitlab/gitlab.rb</code>即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">external_url &apos;http://gitlab.xxxx.com&apos;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">gitlab_rails[&apos;gitlab_shell_ssh_port&apos;] = 8081</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<blockquote>\n<blockquote>\n<p>另外需要注意下<code>nginx[&#39;listen_addresses&#39;] = [&#39;192.168.10.60&#39;]</code>，需要对应到本地的ip地址</p>\n</blockquote>\n</blockquote>\n<p>配置完之后:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>\n<p>然后通过域名访问gitlab即可实现上述效果了，只不过http方式目前还无法解决。</p>\n<h1 id=\"七、由mtu引起的无法访问的问题\"><a href=\"#七、由mtu引起的无法访问的问题\" class=\"headerlink\" title=\"七、由mtu引起的无法访问的问题\"></a>七、由mtu引起的无法访问的问题</h1><p>如果frp的admin界面一切正常，但是就是无法获取数据</p>\n<p><img src=\"/images/1046366-20180927105741148-1074788234.png\" alt=\"\"></p>\n<p>那么极有可能是你本地的网络最大分片小于服务器的最大分片，导致数据无法发送出去,解决办法是减小服务器的mtu:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ifconfig eth0 mtu 1000 up</span><br></pre></td></tr></table></figure>\n<p>其他修改mtu的方式请自行google。</p>\n<h1 id=\"八、References\"><a href=\"#八、References\" class=\"headerlink\" title=\"八、References:\"></a>八、References:</h1><ol>\n<li><a href=\"https://mritd.me/2017/01/21/use-frp-for-internal-network-wear/\" target=\"_blank\" rel=\"noopener\">利用 frp 进行内网穿透</a></li>\n</ol>\n"},{"title":"在Django中实现queryset级别缓存","date":"2018-11-16T03:50:19.000Z","description":"django中实现queryset级别缓存","_content":"## 介绍\n\n实现queryset级别的缓存，不是view层面的，相当于缓存sql查询结果。\n\n## 使用\n\n### 首先在你的django项目中安装依赖的模块\n\n```text\npip install django-cache-machine\n```\n\n### 创建queryset_cache.py文件,文件内容如下\n\n```python\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n# __author__ = \"Breakering\"\n# Date: 18-8-29\n\"\"\"\n依赖django-cache-machine，并在此基础上实现了轻松切换使用queryset级别缓存以及count等缓存\n\"\"\"\nimport contextlib\n\nfrom caching import config\nfrom caching.base import CachingQuerySet, cached_with\nfrom django.db.models.sql import query\n\n\ndef queryset_cache_decorator(always_cached=True):\n    \"\"\"queryset级别缓存的装饰器，可以使得queryset直接从缓存中获取数据\"\"\"\n    def wrapper(func):\n        def inner(self, *args, **kwargs):\n            queryset = func(self, *args, **kwargs)\n            if always_cached:  # 此装饰器默认从cache中获取数据\n                queryset = queryset.from_cache()\n            else:\n                with contextlib.suppress(Exception):\n                    queryset_cache_time = self.request.query_params.get('queryset_cache_time', '')\n                    if queryset_cache_time and queryset_cache_time.isdigit():\n                        queryset = queryset.from_cache(int(queryset_cache_time))\n            return queryset\n        return inner\n    return wrapper\n\n\ndef queryset_cache_count_decorator(always_cached=True):\n    \"\"\"queryset count缓存的装饰器，可以使得queryset直接从缓存中获取count的值\"\"\"\n    def wrapper(func):\n        def inner(self, *args, **kwargs):\n            queryset = func(self, *args, **kwargs)\n            if always_cached:  # 此装饰器默认从cache中获取数据\n                queryset = queryset.cache_count()\n            else:\n                with contextlib.suppress(Exception):\n                    queryset_cache_time = self.request.query_params.get('queryset_cache_time', '')\n                    if queryset_cache_time and queryset_cache_time.isdigit():\n                        queryset = queryset.cache_count(int(queryset_cache_time))\n            return queryset\n        return inner\n    return wrapper\n\n\nclass CachedQuerySet(CachingQuerySet):\n    \"\"\"\n    Return queryset from cache if query_key in cache\n    \"\"\"\n    def __init__(self, *args, **kwargs):\n        super(CachedQuerySet, self).__init__(*args, **kwargs)\n        self.timeout = config.NO_CACHE  # 默认直接从数据库取数据\n        self.cache_count_timeout = config.NO_CACHE  # 自定义queryset count的缓存时间\n\n    def _clone(self, *args, **kw):\n        qs = super(CachedQuerySet, self)._clone(*args, **kw)\n        qs.cache_count_timeout = self.cache_count_timeout\n        return qs\n\n    def from_cache(self, timeout=60*60):\n        \"\"\"在queryset中调用此函数则是从缓存中获取,且调用之后返回的仍是queryset\"\"\"\n        self.timeout = timeout\n        return self._clone()\n\n    def cache_count(self, cache_count_timeout=60*60):\n        \"\"\"实现queryset count的缓存,且调用之后返回的仍是queryset\"\"\"\n        self.cache_count_timeout = cache_count_timeout\n        return self._clone()\n\n    # todo values目前的实现方式有BUG，现已取消\n    # def values(self, *fields, **expressions):\n    #     \"\"\"rewrite queryset's values\"\"\"\n    #     if self.timeout == config.NO_CACHE:  # 默认情况下values直接从数据库获取数据\n    #         return super(CachedQuerySet, self).values(*fields, **expressions)\n    #\n    #     clone = self._clone()\n    #     clone.query.set_values(fields)\n    #     key = make_key('values:{key}'.format(key=clone.query_key()))\n    #     val = cache.get(key)\n    #     if val is None:\n    #         val = super(CachedQuerySet, self).values(*fields, **expressions)\n    #         cache.set(key, val, self.timeout)\n    #     return val\n\n    def count(self):\n        \"\"\"自定义queryset的count\"\"\"\n        super_count = super(CachingQuerySet, self).count\n        try:\n            query_string = 'count:%s' % self.query_key()\n        except query.EmptyResultSet:\n            return 0\n        if self.cache_count_timeout:\n            return cached_with(self, super_count, query_string, self.cache_count_timeout)\n        elif self.timeout == config.NO_CACHE or config.TIMEOUT == config.NO_CACHE:\n            return super_count()\n        else:\n            return cached_with(self, super_count, query_string, config.TIMEOUT)\n\n```\n\n### 改造您的model\n\n```python\nfrom django.db import models\nfrom queryset_cache import CachedQuerySet\nfrom caching.base import CachingMixin\n\nclass ModelClassManger(models.Manager):\n\n    def get_queryset(self):\n        return CachedQuerySet(self.model)\n    \nclass ModelClass(CachingMixin, models.Model):\n    objects = ModelClassManger()\n```\n\n### view层只需在get_queryset上加上装饰器即可\n\n```python\n@queryset_cache_count_decorator()\n@queryset_cache_decorator()\ndef get_queryset(self):\n    pass\n```\n\n如果添加了always_cached=False\n\n```python\n@queryset_cache_count_decorator(always_cached=False)\n@queryset_cache_decorator(always_cached=False)\ndef get_queryset(self):\n    pass\n```\n\n则需要在query参数中加上queryset_cache_time=180,参数后面的数字即为缓存的时间。\n","source":"_posts/在Django中实现queryset级别缓存.md","raw":"---\ntitle: 在Django中实现queryset级别缓存\ndate: 2018-11-16 11:50:19\ndescription: django中实现queryset级别缓存\ntags: Django\ncategories: Django\n---\n## 介绍\n\n实现queryset级别的缓存，不是view层面的，相当于缓存sql查询结果。\n\n## 使用\n\n### 首先在你的django项目中安装依赖的模块\n\n```text\npip install django-cache-machine\n```\n\n### 创建queryset_cache.py文件,文件内容如下\n\n```python\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n# __author__ = \"Breakering\"\n# Date: 18-8-29\n\"\"\"\n依赖django-cache-machine，并在此基础上实现了轻松切换使用queryset级别缓存以及count等缓存\n\"\"\"\nimport contextlib\n\nfrom caching import config\nfrom caching.base import CachingQuerySet, cached_with\nfrom django.db.models.sql import query\n\n\ndef queryset_cache_decorator(always_cached=True):\n    \"\"\"queryset级别缓存的装饰器，可以使得queryset直接从缓存中获取数据\"\"\"\n    def wrapper(func):\n        def inner(self, *args, **kwargs):\n            queryset = func(self, *args, **kwargs)\n            if always_cached:  # 此装饰器默认从cache中获取数据\n                queryset = queryset.from_cache()\n            else:\n                with contextlib.suppress(Exception):\n                    queryset_cache_time = self.request.query_params.get('queryset_cache_time', '')\n                    if queryset_cache_time and queryset_cache_time.isdigit():\n                        queryset = queryset.from_cache(int(queryset_cache_time))\n            return queryset\n        return inner\n    return wrapper\n\n\ndef queryset_cache_count_decorator(always_cached=True):\n    \"\"\"queryset count缓存的装饰器，可以使得queryset直接从缓存中获取count的值\"\"\"\n    def wrapper(func):\n        def inner(self, *args, **kwargs):\n            queryset = func(self, *args, **kwargs)\n            if always_cached:  # 此装饰器默认从cache中获取数据\n                queryset = queryset.cache_count()\n            else:\n                with contextlib.suppress(Exception):\n                    queryset_cache_time = self.request.query_params.get('queryset_cache_time', '')\n                    if queryset_cache_time and queryset_cache_time.isdigit():\n                        queryset = queryset.cache_count(int(queryset_cache_time))\n            return queryset\n        return inner\n    return wrapper\n\n\nclass CachedQuerySet(CachingQuerySet):\n    \"\"\"\n    Return queryset from cache if query_key in cache\n    \"\"\"\n    def __init__(self, *args, **kwargs):\n        super(CachedQuerySet, self).__init__(*args, **kwargs)\n        self.timeout = config.NO_CACHE  # 默认直接从数据库取数据\n        self.cache_count_timeout = config.NO_CACHE  # 自定义queryset count的缓存时间\n\n    def _clone(self, *args, **kw):\n        qs = super(CachedQuerySet, self)._clone(*args, **kw)\n        qs.cache_count_timeout = self.cache_count_timeout\n        return qs\n\n    def from_cache(self, timeout=60*60):\n        \"\"\"在queryset中调用此函数则是从缓存中获取,且调用之后返回的仍是queryset\"\"\"\n        self.timeout = timeout\n        return self._clone()\n\n    def cache_count(self, cache_count_timeout=60*60):\n        \"\"\"实现queryset count的缓存,且调用之后返回的仍是queryset\"\"\"\n        self.cache_count_timeout = cache_count_timeout\n        return self._clone()\n\n    # todo values目前的实现方式有BUG，现已取消\n    # def values(self, *fields, **expressions):\n    #     \"\"\"rewrite queryset's values\"\"\"\n    #     if self.timeout == config.NO_CACHE:  # 默认情况下values直接从数据库获取数据\n    #         return super(CachedQuerySet, self).values(*fields, **expressions)\n    #\n    #     clone = self._clone()\n    #     clone.query.set_values(fields)\n    #     key = make_key('values:{key}'.format(key=clone.query_key()))\n    #     val = cache.get(key)\n    #     if val is None:\n    #         val = super(CachedQuerySet, self).values(*fields, **expressions)\n    #         cache.set(key, val, self.timeout)\n    #     return val\n\n    def count(self):\n        \"\"\"自定义queryset的count\"\"\"\n        super_count = super(CachingQuerySet, self).count\n        try:\n            query_string = 'count:%s' % self.query_key()\n        except query.EmptyResultSet:\n            return 0\n        if self.cache_count_timeout:\n            return cached_with(self, super_count, query_string, self.cache_count_timeout)\n        elif self.timeout == config.NO_CACHE or config.TIMEOUT == config.NO_CACHE:\n            return super_count()\n        else:\n            return cached_with(self, super_count, query_string, config.TIMEOUT)\n\n```\n\n### 改造您的model\n\n```python\nfrom django.db import models\nfrom queryset_cache import CachedQuerySet\nfrom caching.base import CachingMixin\n\nclass ModelClassManger(models.Manager):\n\n    def get_queryset(self):\n        return CachedQuerySet(self.model)\n    \nclass ModelClass(CachingMixin, models.Model):\n    objects = ModelClassManger()\n```\n\n### view层只需在get_queryset上加上装饰器即可\n\n```python\n@queryset_cache_count_decorator()\n@queryset_cache_decorator()\ndef get_queryset(self):\n    pass\n```\n\n如果添加了always_cached=False\n\n```python\n@queryset_cache_count_decorator(always_cached=False)\n@queryset_cache_decorator(always_cached=False)\ndef get_queryset(self):\n    pass\n```\n\n则需要在query参数中加上queryset_cache_time=180,参数后面的数字即为缓存的时间。\n","slug":"在Django中实现queryset级别缓存","published":1,"updated":"2018-11-16T08:53:28.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjojssjz3000aolfc5mnzjsv0","content":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>实现queryset级别的缓存，不是view层面的，相当于缓存sql查询结果。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"首先在你的django项目中安装依赖的模块\"><a href=\"#首先在你的django项目中安装依赖的模块\" class=\"headerlink\" title=\"首先在你的django项目中安装依赖的模块\"></a>首先在你的django项目中安装依赖的模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install django-cache-machine</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建queryset-cache-py文件-文件内容如下\"><a href=\"#创建queryset-cache-py文件-文件内容如下\" class=\"headerlink\" title=\"创建queryset_cache.py文件,文件内容如下\"></a>创建queryset_cache.py文件,文件内容如下</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># __author__ = \"Breakering\"</span></span><br><span class=\"line\"><span class=\"comment\"># Date: 18-8-29</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">依赖django-cache-machine，并在此基础上实现了轻松切换使用queryset级别缓存以及count等缓存</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> contextlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> caching <span class=\"keyword\">import</span> config</span><br><span class=\"line\"><span class=\"keyword\">from</span> caching.base <span class=\"keyword\">import</span> CachingQuerySet, cached_with</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db.models.sql <span class=\"keyword\">import</span> query</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">queryset_cache_decorator</span><span class=\"params\">(always_cached=True)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"queryset级别缓存的装饰器，可以使得queryset直接从缓存中获取数据\"\"\"</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wrapper</span><span class=\"params\">(func)</span>:</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">inner</span><span class=\"params\">(self, *args, **kwargs)</span>:</span></span><br><span class=\"line\">            queryset = func(self, *args, **kwargs)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> always_cached:  <span class=\"comment\"># 此装饰器默认从cache中获取数据</span></span><br><span class=\"line\">                queryset = queryset.from_cache()</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">with</span> contextlib.suppress(Exception):</span><br><span class=\"line\">                    queryset_cache_time = self.request.query_params.get(<span class=\"string\">'queryset_cache_time'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> queryset_cache_time <span class=\"keyword\">and</span> queryset_cache_time.isdigit():</span><br><span class=\"line\">                        queryset = queryset.from_cache(int(queryset_cache_time))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> queryset</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">queryset_cache_count_decorator</span><span class=\"params\">(always_cached=True)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"queryset count缓存的装饰器，可以使得queryset直接从缓存中获取count的值\"\"\"</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wrapper</span><span class=\"params\">(func)</span>:</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">inner</span><span class=\"params\">(self, *args, **kwargs)</span>:</span></span><br><span class=\"line\">            queryset = func(self, *args, **kwargs)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> always_cached:  <span class=\"comment\"># 此装饰器默认从cache中获取数据</span></span><br><span class=\"line\">                queryset = queryset.cache_count()</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">with</span> contextlib.suppress(Exception):</span><br><span class=\"line\">                    queryset_cache_time = self.request.query_params.get(<span class=\"string\">'queryset_cache_time'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> queryset_cache_time <span class=\"keyword\">and</span> queryset_cache_time.isdigit():</span><br><span class=\"line\">                        queryset = queryset.cache_count(int(queryset_cache_time))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> queryset</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CachedQuerySet</span><span class=\"params\">(CachingQuerySet)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Return queryset from cache if query_key in cache</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, *args, **kwargs)</span>:</span></span><br><span class=\"line\">        super(CachedQuerySet, self).__init__(*args, **kwargs)</span><br><span class=\"line\">        self.timeout = config.NO_CACHE  <span class=\"comment\"># 默认直接从数据库取数据</span></span><br><span class=\"line\">        self.cache_count_timeout = config.NO_CACHE  <span class=\"comment\"># 自定义queryset count的缓存时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_clone</span><span class=\"params\">(self, *args, **kw)</span>:</span></span><br><span class=\"line\">        qs = super(CachedQuerySet, self)._clone(*args, **kw)</span><br><span class=\"line\">        qs.cache_count_timeout = self.cache_count_timeout</span><br><span class=\"line\">        <span class=\"keyword\">return</span> qs</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">from_cache</span><span class=\"params\">(self, timeout=<span class=\"number\">60</span>*<span class=\"number\">60</span>)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"在queryset中调用此函数则是从缓存中获取,且调用之后返回的仍是queryset\"\"\"</span></span><br><span class=\"line\">        self.timeout = timeout</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self._clone()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cache_count</span><span class=\"params\">(self, cache_count_timeout=<span class=\"number\">60</span>*<span class=\"number\">60</span>)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"实现queryset count的缓存,且调用之后返回的仍是queryset\"\"\"</span></span><br><span class=\"line\">        self.cache_count_timeout = cache_count_timeout</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self._clone()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># todo values目前的实现方式有BUG，现已取消</span></span><br><span class=\"line\">    <span class=\"comment\"># def values(self, *fields, **expressions):</span></span><br><span class=\"line\">    <span class=\"comment\">#     \"\"\"rewrite queryset's values\"\"\"</span></span><br><span class=\"line\">    <span class=\"comment\">#     if self.timeout == config.NO_CACHE:  # 默认情况下values直接从数据库获取数据</span></span><br><span class=\"line\">    <span class=\"comment\">#         return super(CachedQuerySet, self).values(*fields, **expressions)</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\">#     clone = self._clone()</span></span><br><span class=\"line\">    <span class=\"comment\">#     clone.query.set_values(fields)</span></span><br><span class=\"line\">    <span class=\"comment\">#     key = make_key('values:&#123;key&#125;'.format(key=clone.query_key()))</span></span><br><span class=\"line\">    <span class=\"comment\">#     val = cache.get(key)</span></span><br><span class=\"line\">    <span class=\"comment\">#     if val is None:</span></span><br><span class=\"line\">    <span class=\"comment\">#         val = super(CachedQuerySet, self).values(*fields, **expressions)</span></span><br><span class=\"line\">    <span class=\"comment\">#         cache.set(key, val, self.timeout)</span></span><br><span class=\"line\">    <span class=\"comment\">#     return val</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">count</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"自定义queryset的count\"\"\"</span></span><br><span class=\"line\">        super_count = super(CachingQuerySet, self).count</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            query_string = <span class=\"string\">'count:%s'</span> % self.query_key()</span><br><span class=\"line\">        <span class=\"keyword\">except</span> query.EmptyResultSet:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.cache_count_timeout:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cached_with(self, super_count, query_string, self.cache_count_timeout)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> self.timeout == config.NO_CACHE <span class=\"keyword\">or</span> config.TIMEOUT == config.NO_CACHE:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> super_count()</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cached_with(self, super_count, query_string, config.TIMEOUT)</span><br></pre></td></tr></table></figure>\n<h3 id=\"改造您的model\"><a href=\"#改造您的model\" class=\"headerlink\" title=\"改造您的model\"></a>改造您的model</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"keyword\">from</span> queryset_cache <span class=\"keyword\">import</span> CachedQuerySet</span><br><span class=\"line\"><span class=\"keyword\">from</span> caching.base <span class=\"keyword\">import</span> CachingMixin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ModelClassManger</span><span class=\"params\">(models.Manager)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> CachedQuerySet(self.model)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ModelClass</span><span class=\"params\">(CachingMixin, models.Model)</span>:</span></span><br><span class=\"line\">    objects = ModelClassManger()</span><br></pre></td></tr></table></figure>\n<h3 id=\"view层只需在get-queryset上加上装饰器即可\"><a href=\"#view层只需在get-queryset上加上装饰器即可\" class=\"headerlink\" title=\"view层只需在get_queryset上加上装饰器即可\"></a>view层只需在get_queryset上加上装饰器即可</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@queryset_cache_count_decorator()</span></span><br><span class=\"line\"><span class=\"meta\">@queryset_cache_decorator()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>如果添加了always_cached=False</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@queryset_cache_count_decorator(always_cached=False)</span></span><br><span class=\"line\"><span class=\"meta\">@queryset_cache_decorator(always_cached=False)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>则需要在query参数中加上queryset_cache_time=180,参数后面的数字即为缓存的时间。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>实现queryset级别的缓存，不是view层面的，相当于缓存sql查询结果。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"首先在你的django项目中安装依赖的模块\"><a href=\"#首先在你的django项目中安装依赖的模块\" class=\"headerlink\" title=\"首先在你的django项目中安装依赖的模块\"></a>首先在你的django项目中安装依赖的模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install django-cache-machine</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建queryset-cache-py文件-文件内容如下\"><a href=\"#创建queryset-cache-py文件-文件内容如下\" class=\"headerlink\" title=\"创建queryset_cache.py文件,文件内容如下\"></a>创建queryset_cache.py文件,文件内容如下</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># __author__ = \"Breakering\"</span></span><br><span class=\"line\"><span class=\"comment\"># Date: 18-8-29</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">依赖django-cache-machine，并在此基础上实现了轻松切换使用queryset级别缓存以及count等缓存</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> contextlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> caching <span class=\"keyword\">import</span> config</span><br><span class=\"line\"><span class=\"keyword\">from</span> caching.base <span class=\"keyword\">import</span> CachingQuerySet, cached_with</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db.models.sql <span class=\"keyword\">import</span> query</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">queryset_cache_decorator</span><span class=\"params\">(always_cached=True)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"queryset级别缓存的装饰器，可以使得queryset直接从缓存中获取数据\"\"\"</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wrapper</span><span class=\"params\">(func)</span>:</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">inner</span><span class=\"params\">(self, *args, **kwargs)</span>:</span></span><br><span class=\"line\">            queryset = func(self, *args, **kwargs)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> always_cached:  <span class=\"comment\"># 此装饰器默认从cache中获取数据</span></span><br><span class=\"line\">                queryset = queryset.from_cache()</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">with</span> contextlib.suppress(Exception):</span><br><span class=\"line\">                    queryset_cache_time = self.request.query_params.get(<span class=\"string\">'queryset_cache_time'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> queryset_cache_time <span class=\"keyword\">and</span> queryset_cache_time.isdigit():</span><br><span class=\"line\">                        queryset = queryset.from_cache(int(queryset_cache_time))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> queryset</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">queryset_cache_count_decorator</span><span class=\"params\">(always_cached=True)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"queryset count缓存的装饰器，可以使得queryset直接从缓存中获取count的值\"\"\"</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wrapper</span><span class=\"params\">(func)</span>:</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">inner</span><span class=\"params\">(self, *args, **kwargs)</span>:</span></span><br><span class=\"line\">            queryset = func(self, *args, **kwargs)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> always_cached:  <span class=\"comment\"># 此装饰器默认从cache中获取数据</span></span><br><span class=\"line\">                queryset = queryset.cache_count()</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">with</span> contextlib.suppress(Exception):</span><br><span class=\"line\">                    queryset_cache_time = self.request.query_params.get(<span class=\"string\">'queryset_cache_time'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> queryset_cache_time <span class=\"keyword\">and</span> queryset_cache_time.isdigit():</span><br><span class=\"line\">                        queryset = queryset.cache_count(int(queryset_cache_time))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> queryset</span><br><span class=\"line\">        <span class=\"keyword\">return</span> inner</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CachedQuerySet</span><span class=\"params\">(CachingQuerySet)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Return queryset from cache if query_key in cache</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, *args, **kwargs)</span>:</span></span><br><span class=\"line\">        super(CachedQuerySet, self).__init__(*args, **kwargs)</span><br><span class=\"line\">        self.timeout = config.NO_CACHE  <span class=\"comment\"># 默认直接从数据库取数据</span></span><br><span class=\"line\">        self.cache_count_timeout = config.NO_CACHE  <span class=\"comment\"># 自定义queryset count的缓存时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_clone</span><span class=\"params\">(self, *args, **kw)</span>:</span></span><br><span class=\"line\">        qs = super(CachedQuerySet, self)._clone(*args, **kw)</span><br><span class=\"line\">        qs.cache_count_timeout = self.cache_count_timeout</span><br><span class=\"line\">        <span class=\"keyword\">return</span> qs</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">from_cache</span><span class=\"params\">(self, timeout=<span class=\"number\">60</span>*<span class=\"number\">60</span>)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"在queryset中调用此函数则是从缓存中获取,且调用之后返回的仍是queryset\"\"\"</span></span><br><span class=\"line\">        self.timeout = timeout</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self._clone()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cache_count</span><span class=\"params\">(self, cache_count_timeout=<span class=\"number\">60</span>*<span class=\"number\">60</span>)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"实现queryset count的缓存,且调用之后返回的仍是queryset\"\"\"</span></span><br><span class=\"line\">        self.cache_count_timeout = cache_count_timeout</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self._clone()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># todo values目前的实现方式有BUG，现已取消</span></span><br><span class=\"line\">    <span class=\"comment\"># def values(self, *fields, **expressions):</span></span><br><span class=\"line\">    <span class=\"comment\">#     \"\"\"rewrite queryset's values\"\"\"</span></span><br><span class=\"line\">    <span class=\"comment\">#     if self.timeout == config.NO_CACHE:  # 默认情况下values直接从数据库获取数据</span></span><br><span class=\"line\">    <span class=\"comment\">#         return super(CachedQuerySet, self).values(*fields, **expressions)</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\">#     clone = self._clone()</span></span><br><span class=\"line\">    <span class=\"comment\">#     clone.query.set_values(fields)</span></span><br><span class=\"line\">    <span class=\"comment\">#     key = make_key('values:&#123;key&#125;'.format(key=clone.query_key()))</span></span><br><span class=\"line\">    <span class=\"comment\">#     val = cache.get(key)</span></span><br><span class=\"line\">    <span class=\"comment\">#     if val is None:</span></span><br><span class=\"line\">    <span class=\"comment\">#         val = super(CachedQuerySet, self).values(*fields, **expressions)</span></span><br><span class=\"line\">    <span class=\"comment\">#         cache.set(key, val, self.timeout)</span></span><br><span class=\"line\">    <span class=\"comment\">#     return val</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">count</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"自定义queryset的count\"\"\"</span></span><br><span class=\"line\">        super_count = super(CachingQuerySet, self).count</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            query_string = <span class=\"string\">'count:%s'</span> % self.query_key()</span><br><span class=\"line\">        <span class=\"keyword\">except</span> query.EmptyResultSet:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.cache_count_timeout:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cached_with(self, super_count, query_string, self.cache_count_timeout)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> self.timeout == config.NO_CACHE <span class=\"keyword\">or</span> config.TIMEOUT == config.NO_CACHE:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> super_count()</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cached_with(self, super_count, query_string, config.TIMEOUT)</span><br></pre></td></tr></table></figure>\n<h3 id=\"改造您的model\"><a href=\"#改造您的model\" class=\"headerlink\" title=\"改造您的model\"></a>改造您的model</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"keyword\">from</span> queryset_cache <span class=\"keyword\">import</span> CachedQuerySet</span><br><span class=\"line\"><span class=\"keyword\">from</span> caching.base <span class=\"keyword\">import</span> CachingMixin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ModelClassManger</span><span class=\"params\">(models.Manager)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> CachedQuerySet(self.model)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ModelClass</span><span class=\"params\">(CachingMixin, models.Model)</span>:</span></span><br><span class=\"line\">    objects = ModelClassManger()</span><br></pre></td></tr></table></figure>\n<h3 id=\"view层只需在get-queryset上加上装饰器即可\"><a href=\"#view层只需在get-queryset上加上装饰器即可\" class=\"headerlink\" title=\"view层只需在get_queryset上加上装饰器即可\"></a>view层只需在get_queryset上加上装饰器即可</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@queryset_cache_count_decorator()</span></span><br><span class=\"line\"><span class=\"meta\">@queryset_cache_decorator()</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>如果添加了always_cached=False</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@queryset_cache_count_decorator(always_cached=False)</span></span><br><span class=\"line\"><span class=\"meta\">@queryset_cache_decorator(always_cached=False)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>则需要在query参数中加上queryset_cache_time=180,参数后面的数字即为缓存的时间。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjojssjyi0000olfceuwbufte","category_id":"cjojssjyv0004olfcp9dew259","_id":"cjojssjz9000eolfcdklpxjv4"},{"post_id":"cjojssjyq0002olfchrqmsvnz","category_id":"cjojssjz5000bolfcrv6ionoi","_id":"cjojssjzd000jolfcbbkly9ti"},{"post_id":"cjojssjyy0006olfccip9ha8s","category_id":"cjojssjyv0004olfcp9dew259","_id":"cjojssjze000molfc2b5ucea1"},{"post_id":"cjojssjz10008olfcrk5r65a8","category_id":"cjojssjzd000iolfcs0u89nmy","_id":"cjojssjzf000polfcsr157bal"},{"post_id":"cjojssjz3000aolfc5mnzjsv0","category_id":"cjojssjze000nolfcgenpv1mw","_id":"cjojssjzf000qolfc5dmii1xq"}],"PostTag":[{"post_id":"cjojssjyi0000olfceuwbufte","tag_id":"cjojssjyx0005olfc1zrz4ri6","_id":"cjojssjz7000dolfcks3pxs7y"},{"post_id":"cjojssjyq0002olfchrqmsvnz","tag_id":"cjojssjz6000colfctl6dasrv","_id":"cjojssjzc000holfc2w6qp8qb"},{"post_id":"cjojssjyy0006olfccip9ha8s","tag_id":"cjojssjyx0005olfc1zrz4ri6","_id":"cjojssjzd000lolfcko2z3dgc"},{"post_id":"cjojssjz3000aolfc5mnzjsv0","tag_id":"cjojssjzd000kolfcj8pta6v8","_id":"cjojssjze000oolfc0vahjf0i"}],"Tag":[{"name":"Hexo","_id":"cjojssjyx0005olfc1zrz4ri6"},{"name":"Linux","_id":"cjojssjz6000colfctl6dasrv"},{"name":"Django","_id":"cjojssjzd000kolfcj8pta6v8"}]}}